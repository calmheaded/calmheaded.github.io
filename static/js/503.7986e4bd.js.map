{"version":3,"file":"static/js/503.7986e4bd.js","mappings":"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","sources":["webpack://three-model-viewer/./node_modules/_three@0.148.0@three/examples/jsm/loaders/3DMLoader.js"],"sourcesContent":["import {\n\tBufferGeometryLoader,\n\tFileLoader,\n\tLoader,\n\tObject3D,\n\tMeshStandardMaterial,\n\tMesh,\n\tColor,\n\tPoints,\n\tPointsMaterial,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tDirectionalLight,\n\tPointLight,\n\tSpotLight,\n\tRectAreaLight,\n\tSprite,\n\tSpriteMaterial,\n\tCanvasTexture,\n\tLinearFilter,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tTextureLoader\n} from 'three';\n\nconst _taskCache = new WeakMap();\n\nclass Rhino3dmLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.libraryPath = '';\n\t\tthis.libraryPending = null;\n\t\tthis.libraryBinary = null;\n\t\tthis.libraryConfig = {};\n\n\t\tthis.url = '';\n\n\t\tthis.workerLimit = 4;\n\t\tthis.workerPool = [];\n\t\tthis.workerNextTaskID = 1;\n\t\tthis.workerSourceURL = '';\n\t\tthis.workerConfig = {};\n\n\t\tthis.materials = [];\n\t\tthis.warnings = [];\n\n\t}\n\n\tsetLibraryPath( path ) {\n\n\t\tthis.libraryPath = path;\n\n\t\treturn this;\n\n\t}\n\n\tsetWorkerLimit( workerLimit ) {\n\n\t\tthis.workerLimit = workerLimit;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\n\t\tthis.url = url;\n\n\t\tloader.load( url, ( buffer ) => {\n\n\t\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\n\t\t\t// again from this thread.\n\t\t\tif ( _taskCache.has( buffer ) ) {\n\n\t\t\t\tconst cachedTask = _taskCache.get( buffer );\n\n\t\t\t\treturn cachedTask.promise.then( onLoad ).catch( onError );\n\n\t\t\t}\n\n\t\t\tthis.decodeObjects( buffer, url )\n\t\t\t\t.then( result => {\n\n\t\t\t\t\tresult.userData.warnings = this.warnings;\n\t\t\t\t\tonLoad( result );\n\n\t\t\t\t } )\n\t\t\t\t.catch( e => onError( e ) );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tdebug() {\n\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\n\n\t}\n\n\tdecodeObjects( buffer, url ) {\n\n\t\tlet worker;\n\t\tlet taskID;\n\n\t\tconst taskCost = buffer.byteLength;\n\n\t\tconst objectPending = this._getWorker( taskCost )\n\t\t\t.then( ( _worker ) => {\n\n\t\t\t\tworker = _worker;\n\t\t\t\ttaskID = this.workerNextTaskID ++;\n\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\n\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, buffer }, [ buffer ] );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t} );\n\n\t\t\t} )\n\t\t\t.then( ( message ) => this._createGeometry( message.data ) )\n\t\t\t.catch( e => {\n\n\t\t\t\tthrow e;\n\n\t\t\t} );\n\n\t\t// Remove task from the task list.\n\t\t// Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\t\tobjectPending\n\t\t\t.catch( () => true )\n\t\t\t.then( () => {\n\n\t\t\t\tif ( worker && taskID ) {\n\n\t\t\t\t\tthis._releaseTask( worker, taskID );\n\n\t\t\t\t\t//this.debug();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t// Cache the task result.\n\t\t_taskCache.set( buffer, {\n\n\t\t\turl: url,\n\t\t\tpromise: objectPending\n\n\t\t} );\n\n\t\treturn objectPending;\n\n\t}\n\n\tparse( data, onLoad, onError ) {\n\n\t\tthis.decodeObjects( data, '' )\n\t\t\t.then( result => {\n\n\t\t\t\tresult.userData.warnings = this.warnings;\n\t\t\t\tonLoad( result );\n\n\t\t\t} )\n\t\t\t.catch( e => onError( e ) );\n\n\t}\n\n\t_compareMaterials( material ) {\n\n\t\tconst mat = {};\n\t\tmat.name = material.name;\n\t\tmat.color = {};\n\t\tmat.color.r = material.color.r;\n\t\tmat.color.g = material.color.g;\n\t\tmat.color.b = material.color.b;\n\t\tmat.type = material.type;\n\n\t\tfor ( let i = 0; i < this.materials.length; i ++ ) {\n\n\t\t\tconst m = this.materials[ i ];\n\t\t\tconst _mat = {};\n\t\t\t_mat.name = m.name;\n\t\t\t_mat.color = {};\n\t\t\t_mat.color.r = m.color.r;\n\t\t\t_mat.color.g = m.color.g;\n\t\t\t_mat.color.b = m.color.b;\n\t\t\t_mat.type = m.type;\n\n\t\t\tif ( JSON.stringify( mat ) === JSON.stringify( _mat ) ) {\n\n\t\t\t\treturn m;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials.push( material );\n\n\t\treturn material;\n\n\t}\n\n\t_createMaterial( material ) {\n\n\t\tif ( material === undefined ) {\n\n\t\t\treturn new MeshStandardMaterial( {\n\t\t\t\tcolor: new Color( 1, 1, 1 ),\n\t\t\t\tmetalness: 0.8,\n\t\t\t\tname: 'default',\n\t\t\t\tside: 2\n\t\t\t} );\n\n\t\t}\n\n\t\tconst _diffuseColor = material.diffuseColor;\n\n\t\tconst diffusecolor = new Color( _diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0 );\n\n\t\tif ( _diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0 ) {\n\n\t\t\tdiffusecolor.r = 1;\n\t\t\tdiffusecolor.g = 1;\n\t\t\tdiffusecolor.b = 1;\n\n\t\t}\n\n\t\t// console.log( material );\n\n\t\tconst mat = new MeshStandardMaterial( {\n\t\t\tcolor: diffusecolor,\n\t\t\tname: material.name,\n\t\t\tside: 2,\n\t\t\ttransparent: material.transparency > 0 ? true : false,\n\t\t\topacity: 1.0 - material.transparency\n\t\t} );\n\n\t\tconst textureLoader = new TextureLoader();\n\n\t\tfor ( let i = 0; i < material.textures.length; i ++ ) {\n\n\t\t\tconst texture = material.textures[ i ];\n\n\t\t\tif ( texture.image !== null ) {\n\n\t\t\t\tconst map = textureLoader.load( texture.image );\n\n\t\t\t\tswitch ( texture.type ) {\n\n\t\t\t\t\tcase 'Diffuse':\n\n\t\t\t\t\t\tmat.map = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Bump':\n\n\t\t\t\t\t\tmat.bumpMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Transparency':\n\n\t\t\t\t\t\tmat.alphaMap = map;\n\t\t\t\t\t\tmat.transparent = true;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Emap':\n\n\t\t\t\t\t\tmat.envMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmap.wrapS = texture.wrapU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\t\tmap.wrapT = texture.wrapV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\t\tmap.repeat.set( texture.repeat[ 0 ], texture.repeat[ 1 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn mat;\n\n\t}\n\n\t_createGeometry( data ) {\n\n\t\t// console.log(data);\n\n\t\tconst object = new Object3D();\n\t\tconst instanceDefinitionObjects = [];\n\t\tconst instanceDefinitions = [];\n\t\tconst instanceReferences = [];\n\n\t\tobject.userData[ 'layers' ] = data.layers;\n\t\tobject.userData[ 'groups' ] = data.groups;\n\t\tobject.userData[ 'settings' ] = data.settings;\n\t\tobject.userData[ 'objectType' ] = 'File3dm';\n\t\tobject.userData[ 'materials' ] = null;\n\t\tobject.name = this.url;\n\n\t\tlet objects = data.objects;\n\t\tconst materials = data.materials;\n\n\t\tfor ( let i = 0; i < objects.length; i ++ ) {\n\n\t\t\tconst obj = objects[ i ];\n\t\t\tconst attributes = obj.attributes;\n\n\t\t\tswitch ( obj.objectType ) {\n\n\t\t\t\tcase 'InstanceDefinition':\n\n\t\t\t\t\tinstanceDefinitions.push( obj );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstanceReference':\n\n\t\t\t\t\tinstanceReferences.push( obj );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tlet _object;\n\n\t\t\t\t\tif ( attributes.materialIndex >= 0 ) {\n\n\t\t\t\t\t\tconst rMaterial = materials[ attributes.materialIndex ];\n\t\t\t\t\t\tlet material = this._createMaterial( rMaterial );\n\t\t\t\t\t\tmaterial = this._compareMaterials( material );\n\t\t\t\t\t\t_object = this._createObject( obj, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst material = this._createMaterial();\n\t\t\t\t\t\t_object = this._createObject( obj, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _object === undefined ) {\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst layer = data.layers[ attributes.layerIndex ];\n\n\t\t\t\t\t_object.visible = layer ? data.layers[ attributes.layerIndex ].visible : true;\n\n\t\t\t\t\tif ( attributes.isInstanceDefinitionObject ) {\n\n\t\t\t\t\t\tinstanceDefinitionObjects.push( _object );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.add( _object );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < instanceDefinitions.length; i ++ ) {\n\n\t\t\tconst iDef = instanceDefinitions[ i ];\n\n\t\t\tobjects = [];\n\n\t\t\tfor ( let j = 0; j < iDef.attributes.objectIds.length; j ++ ) {\n\n\t\t\t\tconst objId = iDef.attributes.objectIds[ j ];\n\n\t\t\t\tfor ( let p = 0; p < instanceDefinitionObjects.length; p ++ ) {\n\n\t\t\t\t\tconst idoId = instanceDefinitionObjects[ p ].userData.attributes.id;\n\n\t\t\t\t\tif ( objId === idoId ) {\n\n\t\t\t\t\t\tobjects.push( instanceDefinitionObjects[ p ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Currently clones geometry and does not take advantage of instancing\n\n\t\t\tfor ( let j = 0; j < instanceReferences.length; j ++ ) {\n\n\t\t\t\tconst iRef = instanceReferences[ j ];\n\n\t\t\t\tif ( iRef.geometry.parentIdefId === iDef.attributes.id ) {\n\n\t\t\t\t\tconst iRefObject = new Object3D();\n\t\t\t\t\tconst xf = iRef.geometry.xform.array;\n\n\t\t\t\t\tconst matrix = new Matrix4();\n          \t\t\tmatrix.set( xf[ 0 ], xf[ 1 ], xf[ 2 ], xf[ 3 ], xf[ 4 ], xf[ 5 ], xf[ 6 ], xf[ 7 ], xf[ 8 ], xf[ 9 ], xf[ 10 ], xf[ 11 ], xf[ 12 ], xf[ 13 ], xf[ 14 ], xf[ 15 ] );\n\n\t\t\t\t\tiRefObject.applyMatrix4( matrix );\n\n\t\t\t\t\tfor ( let p = 0; p < objects.length; p ++ ) {\n\n\t\t\t\t\t\tiRefObject.add( objects[ p ].clone( true ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.add( iRefObject );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tobject.userData[ 'materials' ] = this.materials;\n\t\treturn object;\n\n\t}\n\n\t_createObject( obj, mat ) {\n\n\t\tconst loader = new BufferGeometryLoader();\n\n\t\tconst attributes = obj.attributes;\n\n\t\tlet geometry, material, _color, color;\n\n\t\tswitch ( obj.objectType ) {\n\n\t\t\tcase 'Point':\n\t\t\tcase 'PointSet':\n\n\t\t\t\tgeometry = loader.parse( obj.geometry );\n\n\t\t\t\tif ( geometry.attributes.hasOwnProperty( 'color' ) ) {\n\n\t\t\t\t\tmaterial = new PointsMaterial( { vertexColors: true, sizeAttenuation: false, size: 2 } );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_color = attributes.drawColor;\n\t\t\t\t\tcolor = new Color( _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 );\n\t\t\t\t\tmaterial = new PointsMaterial( { color: color, sizeAttenuation: false, size: 2 } );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial = this._compareMaterials( material );\n\n\t\t\t\tconst points = new Points( geometry, material );\n\t\t\t\tpoints.userData[ 'attributes' ] = attributes;\n\t\t\t\tpoints.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\tif ( attributes.name ) {\n\n\t\t\t\t\tpoints.name = attributes.name;\n\n\t\t\t\t}\n\n\t\t\t\treturn points;\n\n\t\t\tcase 'Mesh':\n\t\t\tcase 'Extrusion':\n\t\t\tcase 'SubD':\n\t\t\tcase 'Brep':\n\n\t\t\t\tif ( obj.geometry === null ) return;\n\n\t\t\t\tgeometry = loader.parse( obj.geometry );\n\n\t\t\t\tif ( geometry.attributes.hasOwnProperty( 'color' ) ) {\n\n\t\t\t\t\tmat.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tif ( mat === null ) {\n\n\t\t\t\t\tmat = this._createMaterial();\n\t\t\t\t\tmat = this._compareMaterials( mat );\n\n\t\t\t\t}\n\n\t\t\t\tconst mesh = new Mesh( geometry, mat );\n\t\t\t\tmesh.castShadow = attributes.castsShadows;\n\t\t\t\tmesh.receiveShadow = attributes.receivesShadows;\n\t\t\t\tmesh.userData[ 'attributes' ] = attributes;\n\t\t\t\tmesh.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\tif ( attributes.name ) {\n\n\t\t\t\t\tmesh.name = attributes.name;\n\n\t\t\t\t}\n\n\t\t\t\treturn mesh;\n\n\t\t\tcase 'Curve':\n\n\t\t\t\tgeometry = loader.parse( obj.geometry );\n\n\t\t\t\t_color = attributes.drawColor;\n\t\t\t\tcolor = new Color( _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 );\n\n\t\t\t\tmaterial = new LineBasicMaterial( { color: color } );\n\t\t\t\tmaterial = this._compareMaterials( material );\n\n\t\t\t\tconst lines = new Line( geometry, material );\n\t\t\t\tlines.userData[ 'attributes' ] = attributes;\n\t\t\t\tlines.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\tif ( attributes.name ) {\n\n\t\t\t\t\tlines.name = attributes.name;\n\n\t\t\t\t}\n\n\t\t\t\treturn lines;\n\n\t\t\tcase 'TextDot':\n\n\t\t\t\tgeometry = obj.geometry;\n\n\t\t\t\tconst ctx = document.createElement( 'canvas' ).getContext( '2d' );\n\t\t\t\tconst font = `${geometry.fontHeight}px ${geometry.fontFace}`;\n\t\t\t\tctx.font = font;\n\t\t\t\tconst width = ctx.measureText( geometry.text ).width + 10;\n\t\t\t\tconst height = geometry.fontHeight + 10;\n\n\t\t\t\tconst r = window.devicePixelRatio;\n\n\t\t\t\tctx.canvas.width = width * r;\n\t\t\t\tctx.canvas.height = height * r;\n\t\t\t\tctx.canvas.style.width = width + 'px';\n\t\t\t\tctx.canvas.style.height = height + 'px';\n\t\t\t\tctx.setTransform( r, 0, 0, r, 0, 0 );\n\n\t\t\t\tctx.font = font;\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tcolor = attributes.drawColor;\n\t\t\t\tctx.fillStyle = `rgba(${color.r},${color.g},${color.b},${color.a})`;\n\t\t\t\tctx.fillRect( 0, 0, width, height );\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tctx.fillText( geometry.text, width / 2, height / 2 );\n\n\t\t\t\tconst texture = new CanvasTexture( ctx.canvas );\n\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\ttexture.wrapS = ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = ClampToEdgeWrapping;\n\n\t\t\t\tmaterial = new SpriteMaterial( { map: texture, depthTest: false } );\n\t\t\t\tconst sprite = new Sprite( material );\n\t\t\t\tsprite.position.set( geometry.point[ 0 ], geometry.point[ 1 ], geometry.point[ 2 ] );\n\t\t\t\tsprite.scale.set( width / 10, height / 10, 1.0 );\n\n\t\t\t\tsprite.userData[ 'attributes' ] = attributes;\n\t\t\t\tsprite.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\tif ( attributes.name ) {\n\n\t\t\t\t\tsprite.name = attributes.name;\n\n\t\t\t\t}\n\n\t\t\t\treturn sprite;\n\n\t\t\tcase 'Light':\n\n\t\t\t\tgeometry = obj.geometry;\n\n\t\t\t\tlet light;\n\n\t\t\t\tswitch ( geometry.lightStyle.name ) {\n\n\t\t\t\t\tcase 'LightStyle_WorldPoint':\n\n\t\t\t\t\t\tlight = new PointLight();\n\t\t\t\t\t\tlight.castShadow = attributes.castsShadows;\n\t\t\t\t\t\tlight.position.set( geometry.location[ 0 ], geometry.location[ 1 ], geometry.location[ 2 ] );\n\t\t\t\t\t\tlight.shadow.normalBias = 0.1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LightStyle_WorldSpot':\n\n\t\t\t\t\t\tlight = new SpotLight();\n\t\t\t\t\t\tlight.castShadow = attributes.castsShadows;\n\t\t\t\t\t\tlight.position.set( geometry.location[ 0 ], geometry.location[ 1 ], geometry.location[ 2 ] );\n\t\t\t\t\t\tlight.target.position.set( geometry.direction[ 0 ], geometry.direction[ 1 ], geometry.direction[ 2 ] );\n\t\t\t\t\t\tlight.angle = geometry.spotAngleRadians;\n\t\t\t\t\t\tlight.shadow.normalBias = 0.1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LightStyle_WorldRectangular':\n\n\t\t\t\t\t\tlight = new RectAreaLight();\n\t\t\t\t\t\tconst width = Math.abs( geometry.width[ 2 ] );\n\t\t\t\t\t\tconst height = Math.abs( geometry.length[ 0 ] );\n\t\t\t\t\t\tlight.position.set( geometry.location[ 0 ] - ( height / 2 ), geometry.location[ 1 ], geometry.location[ 2 ] - ( width / 2 ) );\n\t\t\t\t\t\tlight.height = height;\n\t\t\t\t\t\tlight.width = width;\n\t\t\t\t\t\tlight.lookAt( geometry.direction[ 0 ], geometry.direction[ 1 ], geometry.direction[ 2 ] );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LightStyle_WorldDirectional':\n\n\t\t\t\t\t\tlight = new DirectionalLight();\n\t\t\t\t\t\tlight.castShadow = attributes.castsShadows;\n\t\t\t\t\t\tlight.position.set( geometry.location[ 0 ], geometry.location[ 1 ], geometry.location[ 2 ] );\n\t\t\t\t\t\tlight.target.position.set( geometry.direction[ 0 ], geometry.direction[ 1 ], geometry.direction[ 2 ] );\n\t\t\t\t\t\tlight.shadow.normalBias = 0.1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LightStyle_WorldLinear':\n\t\t\t\t\t\t// not conversion exists, warning has already been printed to the console\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( light ) {\n\n\t\t\t\t\tlight.intensity = geometry.intensity;\n\t\t\t\t\t_color = geometry.diffuse;\n\t\t\t\t\tcolor = new Color( _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 );\n\t\t\t\t\tlight.color = color;\n\t\t\t\t\tlight.userData[ 'attributes' ] = attributes;\n\t\t\t\t\tlight.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\t}\n\n\t\t\t\treturn light;\n\n\t\t}\n\n\t}\n\n\t_initLibrary() {\n\n\t\tif ( ! this.libraryPending ) {\n\n\t\t\t// Load rhino3dm wrapper.\n\t\t\tconst jsLoader = new FileLoader( this.manager );\n\t\t\tjsLoader.setPath( this.libraryPath );\n\t\t\tconst jsContent = new Promise( ( resolve, reject ) => {\n\n\t\t\t\tjsLoader.load( 'rhino3dm.js', resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t\t// Load rhino3dm WASM binary.\n\t\t\tconst binaryLoader = new FileLoader( this.manager );\n\t\t\tbinaryLoader.setPath( this.libraryPath );\n\t\t\tbinaryLoader.setResponseType( 'arraybuffer' );\n\t\t\tconst binaryContent = new Promise( ( resolve, reject ) => {\n\n\t\t\t\tbinaryLoader.load( 'rhino3dm.wasm', resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t\tthis.libraryPending = Promise.all( [ jsContent, binaryContent ] )\n\t\t\t\t.then( ( [ jsContent, binaryContent ] ) => {\n\n\t\t\t\t\t//this.libraryBinary = binaryContent;\n\t\t\t\t\tthis.libraryConfig.wasmBinary = binaryContent;\n\n\t\t\t\t\tconst fn = Rhino3dmWorker.toString();\n\n\t\t\t\t\tconst body = [\n\t\t\t\t\t\t'/* rhino3dm.js */',\n\t\t\t\t\t\tjsContent,\n\t\t\t\t\t\t'/* worker */',\n\t\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\n\t\t\t\t\t].join( '\\n' );\n\n\t\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\treturn this.libraryPending;\n\n\t}\n\n\t_getWorker( taskCost ) {\n\n\t\treturn this._initLibrary().then( () => {\n\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\n\n\t\t\t\tconst worker = new Worker( this.workerSourceURL );\n\n\t\t\t\tworker._callbacks = {};\n\t\t\t\tworker._taskCosts = {};\n\t\t\t\tworker._taskLoad = 0;\n\n\t\t\t\tworker.postMessage( {\n\t\t\t\t\ttype: 'init',\n\t\t\t\t\tlibraryConfig: this.libraryConfig\n\t\t\t\t} );\n\n\t\t\t\tworker.onmessage = e => {\n\n\t\t\t\t\tconst message = e.data;\n\n\t\t\t\t\tswitch ( message.type ) {\n\n\t\t\t\t\t\tcase 'warning':\n\t\t\t\t\t\t\tthis.warnings.push( message.data );\n\t\t\t\t\t\t\tconsole.warn( message.data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'decode':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tthis.workerPool.push( worker );\n\n\t\t\t} else {\n\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\n\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tconst worker = this.workerPool[ this.workerPool.length - 1 ];\n\n\t\t\tworker._taskLoad += taskCost;\n\n\t\t\treturn worker;\n\n\t\t} );\n\n\t}\n\n\t_releaseTask( worker, taskID ) {\n\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\n\t\tdelete worker._callbacks[ taskID ];\n\t\tdelete worker._taskCosts[ taskID ];\n\n\t}\n\n\tdispose() {\n\n\t\tfor ( let i = 0; i < this.workerPool.length; ++ i ) {\n\n\t\t\tthis.workerPool[ i ].terminate();\n\n\t\t}\n\n\t\tthis.workerPool.length = 0;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/* WEB WORKER */\n\nfunction Rhino3dmWorker() {\n\n\tlet libraryPending;\n\tlet libraryConfig;\n\tlet rhino;\n\tlet taskID;\n\n\tonmessage = function ( e ) {\n\n\t\tconst message = e.data;\n\n\t\tswitch ( message.type ) {\n\n\t\t\tcase 'init':\n\n\t\t\t\t// console.log(message)\n\t\t\t\tlibraryConfig = message.libraryConfig;\n\t\t\t\tconst wasmBinary = libraryConfig.wasmBinary;\n\t\t\t\tlet RhinoModule;\n\t\t\t\tlibraryPending = new Promise( function ( resolve ) {\n\n\t\t\t\t\t/* Like Basis Loader */\n\t\t\t\t\tRhinoModule = { wasmBinary, onRuntimeInitialized: resolve };\n\n\t\t\t\t\trhino3dm( RhinoModule ); // eslint-disable-line no-undef\n\n\t\t\t\t } ).then( () => {\n\n\t\t\t\t\trhino = RhinoModule;\n\n\t\t\t\t } );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'decode':\n\n\t\t\t\ttaskID = message.id;\n\t\t\t\tconst buffer = message.buffer;\n\t\t\t\tlibraryPending.then( () => {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tconst data = decodeObjects( rhino, buffer );\n\t\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, data } );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error } );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction decodeObjects( rhino, buffer ) {\n\n\t\tconst arr = new Uint8Array( buffer );\n\t\tconst doc = rhino.File3dm.fromByteArray( arr );\n\n\t\tconst objects = [];\n\t\tconst materials = [];\n\t\tconst layers = [];\n\t\tconst views = [];\n\t\tconst namedViews = [];\n\t\tconst groups = [];\n\t\tconst strings = [];\n\n\t\t//Handle objects\n\n\t\tconst objs = doc.objects();\n\t\tconst cnt = objs.count;\n\n\t\tfor ( let i = 0; i < cnt; i ++ ) {\n\n\t\t\tconst _object = objs.get( i );\n\n\t\t\tconst object = extractObjectData( _object, doc );\n\n\t\t\t_object.delete();\n\n\t\t\tif ( object ) {\n\n\t\t\t\tobjects.push( object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Handle instance definitions\n\t\t// console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\n\n\t\tfor ( let i = 0; i < doc.instanceDefinitions().count(); i ++ ) {\n\n\t\t\tconst idef = doc.instanceDefinitions().get( i );\n\t\t\tconst idefAttributes = extractProperties( idef );\n\t\t\tidefAttributes.objectIds = idef.getObjectIds();\n\n\t\t\tobjects.push( { geometry: null, attributes: idefAttributes, objectType: 'InstanceDefinition' } );\n\n\t\t}\n\n\t\t// Handle materials\n\n\t\tconst textureTypes = [\n\t\t\t// rhino.TextureType.Bitmap,\n\t\t\trhino.TextureType.Diffuse,\n\t\t\trhino.TextureType.Bump,\n\t\t\trhino.TextureType.Transparency,\n\t\t\trhino.TextureType.Opacity,\n\t\t\trhino.TextureType.Emap\n\t\t];\n\n\t\tconst pbrTextureTypes = [\n\t\t\trhino.TextureType.PBR_BaseColor,\n\t\t\trhino.TextureType.PBR_Subsurface,\n\t\t\trhino.TextureType.PBR_SubsurfaceScattering,\n\t\t\trhino.TextureType.PBR_SubsurfaceScatteringRadius,\n\t\t\trhino.TextureType.PBR_Metallic,\n\t\t\trhino.TextureType.PBR_Specular,\n\t\t\trhino.TextureType.PBR_SpecularTint,\n\t\t\trhino.TextureType.PBR_Roughness,\n\t\t\trhino.TextureType.PBR_Anisotropic,\n\t\t\trhino.TextureType.PBR_Anisotropic_Rotation,\n\t\t\trhino.TextureType.PBR_Sheen,\n\t\t\trhino.TextureType.PBR_SheenTint,\n\t\t\trhino.TextureType.PBR_Clearcoat,\n\t\t\trhino.TextureType.PBR_ClearcoatBump,\n\t\t\trhino.TextureType.PBR_ClearcoatRoughness,\n\t\t\trhino.TextureType.PBR_OpacityIor,\n\t\t\trhino.TextureType.PBR_OpacityRoughness,\n\t\t\trhino.TextureType.PBR_Emission,\n\t\t\trhino.TextureType.PBR_AmbientOcclusion,\n\t\t\trhino.TextureType.PBR_Displacement\n\t\t];\n\n\t\tfor ( let i = 0; i < doc.materials().count(); i ++ ) {\n\n\t\t\tconst _material = doc.materials().get( i );\n\t\t\tconst _pbrMaterial = _material.physicallyBased();\n\n\t\t\tlet material = extractProperties( _material );\n\n\t\t\tconst textures = [];\n\n\t\t\tfor ( let j = 0; j < textureTypes.length; j ++ ) {\n\n\t\t\t\tconst _texture = _material.getTexture( textureTypes[ j ] );\n\t\t\t\tif ( _texture ) {\n\n\t\t\t\t\tlet textureType = textureTypes[ j ].constructor.name;\n\t\t\t\t\ttextureType = textureType.substring( 12, textureType.length );\n\t\t\t\t\tconst texture = { type: textureType };\n\n\t\t\t\t\tconst image = doc.getEmbeddedFileAsBase64( _texture.fileName );\n\n\t\t\t\t\ttexture.wrapU = _texture.wrapU;\n\t\t\t\t\ttexture.wrapV = _texture.wrapV;\n\t\t\t\t\ttexture.wrapW = _texture.wrapW;\n\t\t\t\t\tconst uvw = _texture.uvwTransform.toFloatArray( true );\n\t\t\t\t\ttexture.repeat = [ uvw[ 0 ], uvw[ 5 ] ];\n\n\t\t\t\t\tif ( image ) {\n\n\t\t\t\t\t\ttexture.image = 'data:image/png;base64,' + image;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tself.postMessage( { type: 'warning', id: taskID, data: {\n\t\t\t\t\t\t\tmessage: `THREE.3DMLoader: Image for ${textureType} texture not embedded in file.`,\n\t\t\t\t\t\t\ttype: 'missing resource'\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\ttexture.image = null;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextures.push( texture );\n\n\t\t\t\t\t_texture.delete();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterial.textures = textures;\n\n\t\t\tif ( _pbrMaterial.supported ) {\n\n\t\t\t\tfor ( let j = 0; j < pbrTextureTypes.length; j ++ ) {\n\n\t\t\t\t\tconst _texture = _material.getTexture( pbrTextureTypes[ j ] );\n\t\t\t\t\tif ( _texture ) {\n\n\t\t\t\t\t\tconst image = doc.getEmbeddedFileAsBase64( _texture.fileName );\n\t\t\t\t\t\tlet textureType = pbrTextureTypes[ j ].constructor.name;\n\t\t\t\t\t\ttextureType = textureType.substring( 12, textureType.length );\n\t\t\t\t\t\tconst texture = { type: textureType, image: 'data:image/png;base64,' + image };\n\t\t\t\t\t\ttextures.push( texture );\n\n\t\t\t\t\t\t_texture.delete();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst pbMaterialProperties = extractProperties( _material.physicallyBased() );\n\n\t\t\t\tmaterial = Object.assign( pbMaterialProperties, material );\n\n\t\t\t}\n\n\t\t\tmaterials.push( material );\n\n\t\t\t_material.delete();\n\t\t\t_pbrMaterial.delete();\n\n\t\t}\n\n\t\t// Handle layers\n\n\t\tfor ( let i = 0; i < doc.layers().count(); i ++ ) {\n\n\t\t\tconst _layer = doc.layers().get( i );\n\t\t\tconst layer = extractProperties( _layer );\n\n\t\t\tlayers.push( layer );\n\n\t\t\t_layer.delete();\n\n\t\t}\n\n\t\t// Handle views\n\n\t\tfor ( let i = 0; i < doc.views().count(); i ++ ) {\n\n\t\t\tconst _view = doc.views().get( i );\n\t\t\tconst view = extractProperties( _view );\n\n\t\t\tviews.push( view );\n\n\t\t\t_view.delete();\n\n\t\t}\n\n\t\t// Handle named views\n\n\t\tfor ( let i = 0; i < doc.namedViews().count(); i ++ ) {\n\n\t\t\tconst _namedView = doc.namedViews().get( i );\n\t\t\tconst namedView = extractProperties( _namedView );\n\n\t\t\tnamedViews.push( namedView );\n\n\t\t\t_namedView.delete();\n\n\t\t}\n\n\t\t// Handle groups\n\n\t\tfor ( let i = 0; i < doc.groups().count(); i ++ ) {\n\n\t\t\tconst _group = doc.groups().get( i );\n\t\t\tconst group = extractProperties( _group );\n\n\t\t\tgroups.push( group );\n\n\t\t\t_group.delete();\n\n\t\t}\n\n\t\t// Handle settings\n\n\t\tconst settings = extractProperties( doc.settings() );\n\n\t\t//TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\n\n\t\t// Handle dimstyles\n\t\t// console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\n\n\t\t// Handle bitmaps\n\t\t// console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\n\n\t\t// Handle strings\n\t\t// console.log( `Document Strings Count: ${doc.strings().count()}` );\n\t\t// Note: doc.strings().documentUserTextCount() counts any doc.strings defined in a section\n\t\t//console.log( `Document User Text Count: ${doc.strings().documentUserTextCount()}` );\n\n\t\tconst strings_count = doc.strings().count();\n\n\t\tfor ( let i = 0; i < strings_count; i ++ ) {\n\n\t\t\tstrings.push( doc.strings().get( i ) );\n\n\t\t}\n\n\t\tdoc.delete();\n\n\t\treturn { objects, materials, layers, views, namedViews, groups, strings, settings };\n\n\t}\n\n\tfunction extractObjectData( object, doc ) {\n\n\t\tconst _geometry = object.geometry();\n\t\tconst _attributes = object.attributes();\n\t\tlet objectType = _geometry.objectType;\n\t\tlet geometry, attributes, position, data, mesh;\n\n\t\t// skip instance definition objects\n\t\t//if( _attributes.isInstanceDefinitionObject ) { continue; }\n\n\t\t// TODO: handle other geometry types\n\t\tswitch ( objectType ) {\n\n\t\t\tcase rhino.ObjectType.Curve:\n\n\t\t\t\tconst pts = curveToPoints( _geometry, 100 );\n\n\t\t\t\tposition = {};\n\t\t\t\tattributes = {};\n\t\t\t\tdata = {};\n\n\t\t\t\tposition.itemSize = 3;\n\t\t\t\tposition.type = 'Float32Array';\n\t\t\t\tposition.array = [];\n\n\t\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\t\tposition.array.push( pts[ j ][ 0 ] );\n\t\t\t\t\tposition.array.push( pts[ j ][ 1 ] );\n\t\t\t\t\tposition.array.push( pts[ j ][ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tattributes.position = position;\n\t\t\t\tdata.attributes = attributes;\n\n\t\t\t\tgeometry = { data };\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.Point:\n\n\t\t\t\tconst pt = _geometry.location;\n\n\t\t\t\tposition = {};\n\t\t\t\tconst color = {};\n\t\t\t\tattributes = {};\n\t\t\t\tdata = {};\n\n\t\t\t\tposition.itemSize = 3;\n\t\t\t\tposition.type = 'Float32Array';\n\t\t\t\tposition.array = [ pt[ 0 ], pt[ 1 ], pt[ 2 ] ];\n\n\t\t\t\tconst _color = _attributes.drawColor( doc );\n\n\t\t\t\tcolor.itemSize = 3;\n\t\t\t\tcolor.type = 'Float32Array';\n\t\t\t\tcolor.array = [ _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 ];\n\n\t\t\t\tattributes.position = position;\n\t\t\t\tattributes.color = color;\n\t\t\t\tdata.attributes = attributes;\n\n\t\t\t\tgeometry = { data };\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.PointSet:\n\t\t\tcase rhino.ObjectType.Mesh:\n\n\t\t\t\tgeometry = _geometry.toThreejsJSON();\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.Brep:\n\n\t\t\t\tconst faces = _geometry.faces();\n\t\t\t\tmesh = new rhino.Mesh();\n\n\t\t\t\tfor ( let faceIndex = 0; faceIndex < faces.count; faceIndex ++ ) {\n\n\t\t\t\t\tconst face = faces.get( faceIndex );\n\t\t\t\t\tconst _mesh = face.getMesh( rhino.MeshType.Any );\n\n\t\t\t\t\tif ( _mesh ) {\n\n\t\t\t\t\t\tmesh.append( _mesh );\n\t\t\t\t\t\t_mesh.delete();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tface.delete();\n\n\t\t\t\t}\n\n\t\t\t\tif ( mesh.faces().count > 0 ) {\n\n\t\t\t\t\tmesh.compact();\n\t\t\t\t\tgeometry = mesh.toThreejsJSON();\n\t\t\t\t\tfaces.delete();\n\n\t\t\t\t}\n\n\t\t\t\tmesh.delete();\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.Extrusion:\n\n\t\t\t\tmesh = _geometry.getMesh( rhino.MeshType.Any );\n\n\t\t\t\tif ( mesh ) {\n\n\t\t\t\t\tgeometry = mesh.toThreejsJSON();\n\t\t\t\t\tmesh.delete();\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.TextDot:\n\n\t\t\t\tgeometry = extractProperties( _geometry );\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.Light:\n\n\t\t\t\tgeometry = extractProperties( _geometry );\n\n\t\t\t\tif ( geometry.lightStyle.name === 'LightStyle_WorldLinear' ) {\n\n\t\t\t\t\tself.postMessage( { type: 'warning', id: taskID, data: {\n\t\t\t\t\t\tmessage: `THREE.3DMLoader: No conversion exists for ${objectType.constructor.name} ${geometry.lightStyle.name}`,\n\t\t\t\t\t\ttype: 'no conversion',\n\t\t\t\t\t\tguid: _attributes.id\n\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.InstanceReference:\n\n\t\t\t\tgeometry = extractProperties( _geometry );\n\t\t\t\tgeometry.xform = extractProperties( _geometry.xform );\n\t\t\t\tgeometry.xform.array = _geometry.xform.toFloatArray( true );\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.SubD:\n\n\t\t\t\t// TODO: precalculate resulting vertices and faces and warn on excessive results\n\t\t\t\t_geometry.subdivide( 3 );\n\t\t\t\tmesh = rhino.Mesh.createFromSubDControlNet( _geometry );\n\t\t\t\tif ( mesh ) {\n\n\t\t\t\t\tgeometry = mesh.toThreejsJSON();\n\t\t\t\t\tmesh.delete();\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t\t/*\n\t\t\t\tcase rhino.ObjectType.Annotation:\n\t\t\t\tcase rhino.ObjectType.Hatch:\n\t\t\t\tcase rhino.ObjectType.ClipPlane:\n\t\t\t\t*/\n\n\t\t\tdefault:\n\n\t\t\t\tself.postMessage( { type: 'warning', id: taskID, data: {\n\t\t\t\t\tmessage: `THREE.3DMLoader: Conversion not implemented for ${objectType.constructor.name}`,\n\t\t\t\t\ttype: 'not implemented',\n\t\t\t\t\tguid: _attributes.id\n\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( geometry ) {\n\n\t\t\tattributes = extractProperties( _attributes );\n\t\t\tattributes.geometry = extractProperties( _geometry );\n\n\t\t\tif ( _attributes.groupCount > 0 ) {\n\n\t\t\t\tattributes.groupIds = _attributes.getGroupList();\n\n\t\t\t}\n\n\t\t\tif ( _attributes.userStringCount > 0 ) {\n\n\t\t\t\tattributes.userStrings = _attributes.getUserStrings();\n\n\t\t\t}\n\n\t\t\tif ( _geometry.userStringCount > 0 ) {\n\n\t\t\t\tattributes.geometry.userStrings = _geometry.getUserStrings();\n\n\t\t\t}\n\n\t\t\tattributes.drawColor = _attributes.drawColor( doc );\n\n\t\t\tobjectType = objectType.constructor.name;\n\t\t\tobjectType = objectType.substring( 11, objectType.length );\n\n\t\t\treturn { geometry, attributes, objectType };\n\n\t\t} else {\n\n\t\t\tself.postMessage( { type: 'warning', id: taskID, data: {\n\t\t\t\tmessage: `THREE.3DMLoader: ${objectType.constructor.name} has no associated mesh geometry.`,\n\t\t\t\ttype: 'missing mesh',\n\t\t\t\tguid: _attributes.id\n\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tfunction extractProperties( object ) {\n\n\t\tconst result = {};\n\n\t\tfor ( const property in object ) {\n\n\t\t\tconst value = object[ property ];\n\n\t\t\tif ( typeof value !== 'function' ) {\n\n\t\t\t\tif ( typeof value === 'object' && value !== null && value.hasOwnProperty( 'constructor' ) ) {\n\n\t\t\t\t\tresult[ property ] = { name: value.constructor.name, value: value.value };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult[ property ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// these are functions that could be called to extract more data.\n\t\t\t\t//console.log( `${property}: ${object[ property ].constructor.name}` );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction curveToPoints( curve, pointLimit ) {\n\n\t\tlet pointCount = pointLimit;\n\t\tlet rc = [];\n\t\tconst ts = [];\n\n\t\tif ( curve instanceof rhino.LineCurve ) {\n\n\t\t\treturn [ curve.pointAtStart, curve.pointAtEnd ];\n\n\t\t}\n\n\t\tif ( curve instanceof rhino.PolylineCurve ) {\n\n\t\t\tpointCount = curve.pointCount;\n\t\t\tfor ( let i = 0; i < pointCount; i ++ ) {\n\n\t\t\t\trc.push( curve.point( i ) );\n\n\t\t\t}\n\n\t\t\treturn rc;\n\n\t\t}\n\n\t\tif ( curve instanceof rhino.PolyCurve ) {\n\n\t\t\tconst segmentCount = curve.segmentCount;\n\n\t\t\tfor ( let i = 0; i < segmentCount; i ++ ) {\n\n\t\t\t\tconst segment = curve.segmentCurve( i );\n\t\t\t\tconst segmentArray = curveToPoints( segment, pointCount );\n\t\t\t\trc = rc.concat( segmentArray );\n\t\t\t\tsegment.delete();\n\n\t\t\t}\n\n\t\t\treturn rc;\n\n\t\t}\n\n\t\tif ( curve instanceof rhino.ArcCurve ) {\n\n\t\t\tpointCount = Math.floor( curve.angleDegrees / 5 );\n\t\t\tpointCount = pointCount < 2 ? 2 : pointCount;\n\t\t\t// alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\n\n\t\t}\n\n\t\tif ( curve instanceof rhino.NurbsCurve && curve.degree === 1 ) {\n\n\t\t\tconst pLine = curve.tryGetPolyline();\n\n\t\t\tfor ( let i = 0; i < pLine.count; i ++ ) {\n\n\t\t\t\trc.push( pLine.get( i ) );\n\n\t\t\t}\n\n\t\t\tpLine.delete();\n\n\t\t\treturn rc;\n\n\t\t}\n\n\t\tconst domain = curve.domain;\n\t\tconst divisions = pointCount - 1.0;\n\n\t\tfor ( let j = 0; j < pointCount; j ++ ) {\n\n\t\t\tconst t = domain[ 0 ] + ( j / divisions ) * ( domain[ 1 ] - domain[ 0 ] );\n\n\t\t\tif ( t === domain[ 0 ] || t === domain[ 1 ] ) {\n\n\t\t\t\tts.push( t );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst tan = curve.tangentAt( t );\n\t\t\tconst prevTan = curve.tangentAt( ts.slice( - 1 )[ 0 ] );\n\n\t\t\t// Duplicated from THREE.Vector3\n\t\t\t// How to pass imports to worker?\n\n\t\t\tconst tS = tan[ 0 ] * tan[ 0 ] + tan[ 1 ] * tan[ 1 ] + tan[ 2 ] * tan[ 2 ];\n\t\t\tconst ptS = prevTan[ 0 ] * prevTan[ 0 ] + prevTan[ 1 ] * prevTan[ 1 ] + prevTan[ 2 ] * prevTan[ 2 ];\n\n\t\t\tconst denominator = Math.sqrt( tS * ptS );\n\n\t\t\tlet angle;\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\tangle = Math.PI / 2;\n\n\t\t\t} else {\n\n\t\t\t\tconst theta = ( tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z ) / denominator;\n\t\t\t\tangle = Math.acos( Math.max( - 1, Math.min( 1, theta ) ) );\n\n\t\t\t}\n\n\t\t\tif ( angle < 0.1 ) continue;\n\n\t\t\tts.push( t );\n\n\t\t}\n\n\t\trc = ts.map( t => curve.pointAt( t ) );\n\t\treturn rc;\n\n\t}\n\n}\n\nexport { Rhino3dmLoader };\n"],"names":["_taskCache","WeakMap","Rhino3dmLoader","constructor","manager","super","this","libraryPath","libraryPending","libraryBinary","libraryConfig","url","workerLimit","workerPool","workerNextTaskID","workerSourceURL","workerConfig","materials","warnings","setLibraryPath","path","setWorkerLimit","load","onLoad","onProgress","onError","loader","setPath","setResponseType","setRequestHeader","requestHeader","buffer","has","cachedTask","get","promise","then","catch","decodeObjects","result","userData","e","debug","console","log","map","worker","_taskLoad","taskID","taskCost","byteLength","objectPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","type","id","message","_createGeometry","data","_releaseTask","set","parse","_compareMaterials","material","mat","name","color","r","g","b","i","length","m","_mat","JSON","stringify","push","_createMaterial","undefined","metalness","side","_diffuseColor","diffuseColor","diffusecolor","transparent","transparency","opacity","textureLoader","textures","texture","image","bumpMap","alphaMap","envMap","wrapS","wrapU","wrapT","wrapV","repeat","object","instanceDefinitionObjects","instanceDefinitions","instanceReferences","layers","groups","settings","objects","obj","attributes","objectType","_object","materialIndex","rMaterial","_createObject","layer","layerIndex","visible","isInstanceDefinitionObject","add","iDef","j","objectIds","objId","p","idoId","iRef","geometry","parentIdefId","iRefObject","xf","xform","array","matrix","applyMatrix4","clone","_color","hasOwnProperty","vertexColors","sizeAttenuation","size","drawColor","points","mesh","castShadow","castsShadows","receiveShadow","receivesShadows","lines","ctx","document","createElement","getContext","font","fontHeight","fontFace","width","measureText","text","height","window","devicePixelRatio","canvas","style","setTransform","textBaseline","textAlign","fillStyle","a","fillRect","fillText","minFilter","depthTest","sprite","position","point","scale","light","lightStyle","location","shadow","normalBias","target","direction","angle","spotAngleRadians","Math","abs","lookAt","intensity","diffuse","_initLibrary","jsLoader","jsContent","binaryLoader","binaryContent","all","wasmBinary","fn","Rhino3dmWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","Worker","_taskCosts","onmessage","warn","error","sort","dispose","terminate","rhino","arr","Uint8Array","doc","File3dm","fromByteArray","views","namedViews","strings","objs","cnt","count","extractObjectData","delete","idef","idefAttributes","extractProperties","getObjectIds","textureTypes","TextureType","Diffuse","Bump","Transparency","Opacity","Emap","pbrTextureTypes","PBR_BaseColor","PBR_Subsurface","PBR_SubsurfaceScattering","PBR_SubsurfaceScatteringRadius","PBR_Metallic","PBR_Specular","PBR_SpecularTint","PBR_Roughness","PBR_Anisotropic","PBR_Anisotropic_Rotation","PBR_Sheen","PBR_SheenTint","PBR_Clearcoat","PBR_ClearcoatBump","PBR_ClearcoatRoughness","PBR_OpacityIor","PBR_OpacityRoughness","PBR_Emission","PBR_AmbientOcclusion","PBR_Displacement","_material","_pbrMaterial","physicallyBased","_texture","getTexture","textureType","getEmbeddedFileAsBase64","fileName","wrapW","uvw","uvwTransform","toFloatArray","self","supported","pbMaterialProperties","Object","assign","_layer","_view","view","_namedView","namedView","_group","group","strings_count","_geometry","_attributes","ObjectType","Curve","pts","curveToPoints","itemSize","Point","pt","PointSet","Mesh","toThreejsJSON","Brep","faces","faceIndex","face","_mesh","getMesh","MeshType","Any","append","compact","Extrusion","TextDot","Light","guid","InstanceReference","SubD","subdivide","createFromSubDControlNet","groupCount","groupIds","getGroupList","userStringCount","userStrings","getUserStrings","property","value","curve","pointLimit","pointCount","rc","ts","LineCurve","pointAtStart","pointAtEnd","PolylineCurve","PolyCurve","segmentCount","segment","segmentCurve","segmentArray","concat","ArcCurve","floor","angleDegrees","NurbsCurve","degree","pLine","tryGetPolyline","domain","divisions","t","tan","tangentAt","prevTan","slice","tS","ptS","denominator","sqrt","PI","theta","x","y","z","acos","max","min","pointAt","RhinoModule","onRuntimeInitialized","rhino3dm"],"sourceRoot":""}