{"version":3,"file":"static/js/273.c27f0297.js","mappings":"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","sources":["webpack://three-model-viewer/./node_modules/_three@0.148.0@three/examples/jsm/loaders/ifc/web-ifc-api.js","webpack://three-model-viewer/./node_modules/_three@0.148.0@three/examples/jsm/utils/BufferGeometryUtils.js","webpack://three-model-viewer/./node_modules/_three@0.148.0@three/examples/jsm/loaders/IFCLoader.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __require = (x) => {\n  if (typeof require !== \"undefined\")\n    return require(x);\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\n};\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// (disabled):crypto\nvar require_crypto = __commonJS({\n  \"(disabled):crypto\"() {\n  }\n});\n\n// dist/web-ifc.js\nvar require_web_ifc = __commonJS({\n  \"dist/web-ifc.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = false;\n        var ENVIRONMENT_IS_WORKER = false;\n        var ENVIRONMENT_IS_NODE = false;\n        var ENVIRONMENT_IS_SHELL = false;\n        ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status) {\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n        } else if (ENVIRONMENT_IS_SHELL) {\n          if (typeof read != \"undefined\") {\n            read_ = function shell_read(f) {\n              return read(f);\n            };\n          }\n          readBinary = function readBinary2(f) {\n            var data;\n            if (typeof readbuffer === \"function\") {\n              return new Uint8Array(readbuffer(f));\n            }\n            data = read(f, \"binary\");\n            assert(typeof data === \"object\");\n            return data;\n          };\n          if (typeof scriptArgs != \"undefined\") {\n            arguments_ = scriptArgs;\n          } else if (typeof arguments != \"undefined\") {\n            arguments_ = arguments;\n          }\n          if (typeof quit === \"function\") {\n            quit_ = function(status) {\n              quit(status);\n            };\n          }\n          if (typeof print !== \"undefined\") {\n            if (typeof console === \"undefined\")\n              console = {};\n            console.log = print;\n            console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n          }\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.slice(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          {\n            read_ = function shell_read(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function readBinary2(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function readAsync2(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function xhr_onload() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var STACK_ALIGN = 16;\n        function alignMemory(size, factor) {\n          if (!factor)\n            factor = STACK_ALIGN;\n          return Math.ceil(size / factor) * factor;\n        }\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime;\n        if (Module[\"noExitRuntime\"])\n          noExitRuntime = Module[\"noExitRuntime\"];\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS = 0;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n          while (heap[endPtr >>> 0] && !(endPtr >= endIdx))\n            ++endPtr;\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            while (idx < endPtr) {\n              var u0 = heap[idx++ >>> 0];\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n              var u1 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n              var u2 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n              }\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : void 0;\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var endPtr = ptr;\n          var idx = endPtr >> 1;\n          var maxIdx = idx + maxBytesToRead / 2;\n          while (!(idx >= maxIdx) && HEAPU16[idx >>> 0])\n            ++idx;\n          endPtr = idx << 1;\n          if (endPtr - ptr > 32 && UTF16Decoder) {\n            return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n              var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n              if (codeUnit == 0)\n                break;\n              str += String.fromCharCode(codeUnit);\n            }\n            return str;\n          }\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            HEAP16[outPtr >>> 1] = codeUnit;\n            outPtr += 2;\n          }\n          HEAP16[outPtr >>> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = HEAP32[ptr + i * 4 >>> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            HEAP32[outPtr >>> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          HEAP32[outPtr >>> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          HEAP8.set(array, buffer2 >>> 0);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            HEAP8[buffer2++ >>> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            HEAP8[buffer2 >>> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        if (Module[\"wasmMemory\"]) {\n          wasmMemory = Module[\"wasmMemory\"];\n        } else {\n          wasmMemory = new WebAssembly.Memory({ \"initial\": INITIAL_MEMORY / 65536, \"maximum\": 4294967296 / 65536 });\n        }\n        if (wasmMemory) {\n          buffer = wasmMemory.buffer;\n        }\n        INITIAL_MEMORY = buffer.byteLength;\n        updateGlobalBufferAndViews(buffer);\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        function preRun() {\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          FS.ignorePermissions = false;\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        function hasPrefix(str, prefix) {\n          return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return hasPrefix(filename, dataURIPrefix);\n        }\n        var fileURIPrefix = \"file://\";\n        function isFileURI(filename) {\n          return hasPrefix(filename, fileURIPrefix);\n        }\n        var wasmBinaryFile = WasmPath + \"web-ifc.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary() {\n          try {\n            if (wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(wasmBinaryFile);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n            return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n              if (!response[\"ok\"]) {\n                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n              }\n              return response[\"arrayBuffer\"]();\n            }).catch(function() {\n              return getBinary();\n            });\n          }\n          return Promise.resolve().then(getBinary);\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmTable = Module[\"asm\"][\"X\"];\n            removeRunDependency(\"wasm-instantiate\");\n          }\n          addRunDependency(\"wasm-instantiate\");\n          function receiveInstantiatedSource(output) {\n            receiveInstance(output[\"instance\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              return WebAssembly.instantiate(binary, info);\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiatedSource, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiatedSource);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiatedSource);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          if (args && args.length) {\n            return Module[\"dynCall_\" + sig].apply(null, [ptr].concat(args));\n          }\n          return Module[\"dynCall_\" + sig].call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.indexOf(\"j\") != -1) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        function setErrNo(value) {\n          HEAP32[___errno_location() >>> 2] = value;\n          return value;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.slice(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.slice(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.slice(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).slice(1);\n          to = PATH_FS.resolve(to).slice(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().indexOf(\"EOF\") != -1)\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function mmapAlloc(size) {\n          var alignedSize = alignMemory(size, 16384);\n          var ptr = _malloc(alignedSize);\n          while (size < alignedSize)\n            HEAP8[ptr + size++ >>> 0] = 0;\n          return ptr;\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n          }\n          return node;\n        }, getFileDataAsRegularArray: function(node) {\n          if (node.contents && node.contents.subarray) {\n            var arr = [];\n            for (var i = 0; i < node.usedBytes; ++i)\n              arr.push(node.contents[i]);\n            return arr;\n          }\n          return node.contents;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n          return;\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n            return;\n          }\n          if (!node.contents || node.contents.subarray) {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n            return;\n          }\n          if (!node.contents)\n            node.contents = [];\n          if (node.contents.length > newSize)\n            node.contents.length = newSize;\n          else\n            while (node.contents.length < newSize)\n              node.contents.push(0);\n          node.usedBytes = newSize;\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          assert(address === 0);\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            HEAP8.set(contents, ptr >>> 0);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.indexOf(current.mount) !== -1) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            Browser.asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path) {\n          if (path[0] !== \"/\") {\n            var dir;\n            if (dirfd === -100) {\n              dir = FS.cwd();\n            } else {\n              var dirstream = FS.getStream(dirfd);\n              if (!dirstream)\n                throw new FS.ErrnoError(8);\n              dir = dirstream.path;\n            }\n            path = PATH.join2(dir, path);\n          }\n          return path;\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          HEAP32[buf >>> 2] = stat.dev;\n          HEAP32[buf + 4 >>> 2] = 0;\n          HEAP32[buf + 8 >>> 2] = stat.ino;\n          HEAP32[buf + 12 >>> 2] = stat.mode;\n          HEAP32[buf + 16 >>> 2] = stat.nlink;\n          HEAP32[buf + 20 >>> 2] = stat.uid;\n          HEAP32[buf + 24 >>> 2] = stat.gid;\n          HEAP32[buf + 28 >>> 2] = stat.rdev;\n          HEAP32[buf + 32 >>> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >>> 2] = tempI64[0], HEAP32[buf + 44 >>> 2] = tempI64[1];\n          HEAP32[buf + 48 >>> 2] = 4096;\n          HEAP32[buf + 52 >>> 2] = stat.blocks;\n          HEAP32[buf + 56 >>> 2] = stat.atime.getTime() / 1e3 | 0;\n          HEAP32[buf + 60 >>> 2] = 0;\n          HEAP32[buf + 64 >>> 2] = stat.mtime.getTime() / 1e3 | 0;\n          HEAP32[buf + 68 >>> 2] = 0;\n          HEAP32[buf + 72 >>> 2] = stat.ctime.getTime() / 1e3 | 0;\n          HEAP32[buf + 76 >>> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >>> 2] = tempI64[0], HEAP32[buf + 84 >>> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = HEAPU8.slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.slice(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = HEAP8[buf + len >>> 0];\n          stringToUTF8(ret, buf, bufsize + 1);\n          HEAP8[buf + len >>> 0] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.read(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.write(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_fcntl64(fd, cmd, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (cmd) {\n              case 0: {\n                var arg = SYSCALLS.get();\n                if (arg < 0) {\n                  return -28;\n                }\n                var newStream;\n                newStream = FS.open(stream.path, stream.flags, 0, arg);\n                return newStream.fd;\n              }\n              case 1:\n              case 2:\n                return 0;\n              case 3:\n                return stream.flags;\n              case 4: {\n                var arg = SYSCALLS.get();\n                stream.flags |= arg;\n                return 0;\n              }\n              case 12: {\n                var arg = SYSCALLS.get();\n                var offset = 0;\n                HEAP16[arg + offset >>> 1] = 2;\n                return 0;\n              }\n              case 13:\n              case 14:\n                return 0;\n              case 16:\n              case 8:\n                return -28;\n              case 9:\n                setErrNo(28);\n                return -1;\n              default: {\n                return -28;\n              }\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_ioctl(fd, op, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                HEAP32[argp >>> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = SYSCALLS.get();\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](HEAPU32[pointer >>> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (HEAPU8[c >>> 0]) {\n            ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = HEAP8;\n            } else if (size === 2) {\n              heap = HEAP16;\n            } else if (size === 4) {\n              heap = HEAP32;\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function getDynCaller(sig, ptr) {\n          assert(sig.indexOf(\"j\") >= 0, \"getDynCaller should only be called with i64 sigs\");\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.indexOf(\"j\") != -1) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(HEAP32[(firstElement >> 2) + i >>> 0]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return HEAP8[pointer >>> 0];\n              } : function readU8FromPointer(pointer) {\n                return HEAPU8[pointer >>> 0];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return HEAP16[pointer >>> 1];\n              } : function readU16FromPointer(pointer) {\n                return HEAPU16[pointer >>> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return HEAP32[pointer >>> 2];\n              } : function readU32FromPointer(pointer) {\n                return HEAPU32[pointer >>> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.indexOf(\"unsigned\") != -1;\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = HEAPU32;\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(HEAPU8[value + 4 + i >>> 0]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  HEAPU8[ptr + 4 + i >>> 0] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  HEAPU8[ptr + 4 + i >>> 0] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return HEAPU16;\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return HEAPU32;\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          HEAP32[destructorsRef >>> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i >>> 0], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else if (typeof dateNow !== \"undefined\") {\n          _emscripten_get_now = dateNow;\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          HEAP32[tp >>> 2] = now / 1e3 | 0;\n          HEAP32[tp + 4 >>> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n        }\n        function _emscripten_get_heap_size() {\n          return HEAPU8.length;\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          requestedSize = requestedSize >>> 0;\n          var oldSize = _emscripten_get_heap_size();\n          var maxHeapSize = 4294967296;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          var minHeapSize = 16777216;\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              HEAP32[__environ + i * 4 >>> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          try {\n            var strings = getEnvStrings();\n            HEAP32[penviron_count >>> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            HEAP32[penviron_buf_size >>> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >>> 2] = tempI64[0], HEAP32[newOffset + 4 >>> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _setTempRet0($i) {\n          setTempRet0($i | 0);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = HEAP32[tm + 40 >>> 2];\n          var date = { tm_sec: HEAP32[tm >>> 2], tm_min: HEAP32[tm + 4 >>> 2], tm_hour: HEAP32[tm + 8 >>> 2], tm_mday: HEAP32[tm + 12 >>> 2], tm_mon: HEAP32[tm + 16 >>> 2], tm_year: HEAP32[tm + 20 >>> 2], tm_wday: HEAP32[tm + 24 >>> 2], tm_yday: HEAP32[tm + 28 >>> 2], tm_isdst: HEAP32[tm + 32 >>> 2], tm_gmtoff: HEAP32[tm + 36 >>> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.indexOf(rule) >= 0) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        __ATINIT__.push({ func: function() {\n          ___wasm_call_ctors();\n        } });\n        var asmLibraryArg = { \"x\": ___assert_fail, \"A\": ___sys_fcntl64, \"P\": ___sys_ioctl, \"Q\": ___sys_open, \"U\": __embind_finalize_value_array, \"s\": __embind_finalize_value_object, \"S\": __embind_register_bool, \"v\": __embind_register_class, \"u\": __embind_register_class_constructor, \"d\": __embind_register_class_function, \"R\": __embind_register_emval, \"C\": __embind_register_float, \"h\": __embind_register_function, \"m\": __embind_register_integer, \"k\": __embind_register_memory_view, \"D\": __embind_register_std_string, \"w\": __embind_register_std_wstring, \"V\": __embind_register_value_array, \"g\": __embind_register_value_array_element, \"t\": __embind_register_value_object, \"j\": __embind_register_value_object_field, \"T\": __embind_register_void, \"q\": __emval_as, \"W\": __emval_call, \"b\": __emval_decref, \"F\": __emval_get_global, \"n\": __emval_get_property, \"l\": __emval_incref, \"N\": __emval_instanceof, \"E\": __emval_is_number, \"y\": __emval_new_array, \"f\": __emval_new_cstring, \"r\": __emval_new_object, \"p\": __emval_run_destructors, \"i\": __emval_set_property, \"e\": __emval_take_value, \"c\": _abort, \"M\": _clock_gettime, \"I\": _emscripten_memcpy_big, \"o\": _emscripten_resize_heap, \"K\": _environ_get, \"L\": _environ_sizes_get, \"B\": _fd_close, \"O\": _fd_read, \"G\": _fd_seek, \"z\": _fd_write, \"a\": wasmMemory, \"H\": _setTempRet0, \"J\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"Y\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"Z\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"_\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"$\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"aa\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"ba\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"da\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"ha\"]).apply(null, arguments);\n        };\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"FS\"] = FS;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus) {\n              return;\n            } else if (e == \"unwind\") {\n              noExitRuntime = true;\n              return;\n            } else {\n              var toLog = e;\n              if (e && typeof e === \"object\" && e.stack) {\n                toLog = [e, e.stack];\n              }\n              err(\"exception thrown: \" + toLog);\n              quit_(1, e);\n            }\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          preRun();\n          if (runDependencies > 0)\n            return;\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          if (implicit && noExitRuntime && status === 0) {\n            return;\n          }\n          if (noExitRuntime) {\n          } else {\n            EXITSTATUS = status;\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        noExitRuntime = true;\n        run();\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/ifc2x4.ts\nvar IFCACTIONREQUEST = 3821786052;\nvar IFCACTOR = 2296667514;\nvar IFCACTORROLE = 3630933823;\nvar IFCACTUATOR = 4288193352;\nvar IFCACTUATORTYPE = 2874132201;\nvar IFCADDRESS = 618182010;\nvar IFCADVANCEDBREP = 1635779807;\nvar IFCADVANCEDBREPWITHVOIDS = 2603310189;\nvar IFCADVANCEDFACE = 3406155212;\nvar IFCAIRTERMINAL = 1634111441;\nvar IFCAIRTERMINALBOX = 177149247;\nvar IFCAIRTERMINALBOXTYPE = 1411407467;\nvar IFCAIRTERMINALTYPE = 3352864051;\nvar IFCAIRTOAIRHEATRECOVERY = 2056796094;\nvar IFCAIRTOAIRHEATRECOVERYTYPE = 1871374353;\nvar IFCALARM = 3087945054;\nvar IFCALARMTYPE = 3001207471;\nvar IFCALIGNMENT = 325726236;\nvar IFCALIGNMENT2DHORIZONTAL = 749761778;\nvar IFCALIGNMENT2DHORIZONTALSEGMENT = 3199563722;\nvar IFCALIGNMENT2DSEGMENT = 2483840362;\nvar IFCALIGNMENT2DVERSEGCIRCULARARC = 3379348081;\nvar IFCALIGNMENT2DVERSEGLINE = 3239324667;\nvar IFCALIGNMENT2DVERSEGPARABOLICARC = 4263986512;\nvar IFCALIGNMENT2DVERTICAL = 53199957;\nvar IFCALIGNMENT2DVERTICALSEGMENT = 2029264950;\nvar IFCALIGNMENTCURVE = 3512275521;\nvar IFCANNOTATION = 1674181508;\nvar IFCANNOTATIONFILLAREA = 669184980;\nvar IFCAPPLICATION = 639542469;\nvar IFCAPPLIEDVALUE = 411424972;\nvar IFCAPPROVAL = 130549933;\nvar IFCAPPROVALRELATIONSHIP = 3869604511;\nvar IFCARBITRARYCLOSEDPROFILEDEF = 3798115385;\nvar IFCARBITRARYOPENPROFILEDEF = 1310608509;\nvar IFCARBITRARYPROFILEDEFWITHVOIDS = 2705031697;\nvar IFCASSET = 3460190687;\nvar IFCASYMMETRICISHAPEPROFILEDEF = 3207858831;\nvar IFCAUDIOVISUALAPPLIANCE = 277319702;\nvar IFCAUDIOVISUALAPPLIANCETYPE = 1532957894;\nvar IFCAXIS1PLACEMENT = 4261334040;\nvar IFCAXIS2PLACEMENT2D = 3125803723;\nvar IFCAXIS2PLACEMENT3D = 2740243338;\nvar IFCBSPLINECURVE = 1967976161;\nvar IFCBSPLINECURVEWITHKNOTS = 2461110595;\nvar IFCBSPLINESURFACE = 2887950389;\nvar IFCBSPLINESURFACEWITHKNOTS = 167062518;\nvar IFCBEAM = 753842376;\nvar IFCBEAMSTANDARDCASE = 2906023776;\nvar IFCBEAMTYPE = 819618141;\nvar IFCBEARING = 4196446775;\nvar IFCBEARINGTYPE = 3649138523;\nvar IFCBLOBTEXTURE = 616511568;\nvar IFCBLOCK = 1334484129;\nvar IFCBOILER = 32344328;\nvar IFCBOILERTYPE = 231477066;\nvar IFCBOOLEANCLIPPINGRESULT = 3649129432;\nvar IFCBOOLEANRESULT = 2736907675;\nvar IFCBOUNDARYCONDITION = 4037036970;\nvar IFCBOUNDARYCURVE = 1136057603;\nvar IFCBOUNDARYEDGECONDITION = 1560379544;\nvar IFCBOUNDARYFACECONDITION = 3367102660;\nvar IFCBOUNDARYNODECONDITION = 1387855156;\nvar IFCBOUNDARYNODECONDITIONWARPING = 2069777674;\nvar IFCBOUNDEDCURVE = 1260505505;\nvar IFCBOUNDEDSURFACE = 4182860854;\nvar IFCBOUNDINGBOX = 2581212453;\nvar IFCBOXEDHALFSPACE = 2713105998;\nvar IFCBRIDGE = 644574406;\nvar IFCBRIDGEPART = 963979645;\nvar IFCBUILDING = 4031249490;\nvar IFCBUILDINGELEMENT = 3299480353;\nvar IFCBUILDINGELEMENTPART = 2979338954;\nvar IFCBUILDINGELEMENTPARTTYPE = 39481116;\nvar IFCBUILDINGELEMENTPROXY = 1095909175;\nvar IFCBUILDINGELEMENTPROXYTYPE = 1909888760;\nvar IFCBUILDINGELEMENTTYPE = 1950629157;\nvar IFCBUILDINGSTOREY = 3124254112;\nvar IFCBUILDINGSYSTEM = 1177604601;\nvar IFCBURNER = 2938176219;\nvar IFCBURNERTYPE = 2188180465;\nvar IFCCSHAPEPROFILEDEF = 2898889636;\nvar IFCCABLECARRIERFITTING = 635142910;\nvar IFCCABLECARRIERFITTINGTYPE = 395041908;\nvar IFCCABLECARRIERSEGMENT = 3758799889;\nvar IFCCABLECARRIERSEGMENTTYPE = 3293546465;\nvar IFCCABLEFITTING = 1051757585;\nvar IFCCABLEFITTINGTYPE = 2674252688;\nvar IFCCABLESEGMENT = 4217484030;\nvar IFCCABLESEGMENTTYPE = 1285652485;\nvar IFCCAISSONFOUNDATION = 3999819293;\nvar IFCCAISSONFOUNDATIONTYPE = 3203706013;\nvar IFCCARTESIANPOINT = 1123145078;\nvar IFCCARTESIANPOINTLIST = 574549367;\nvar IFCCARTESIANPOINTLIST2D = 1675464909;\nvar IFCCARTESIANPOINTLIST3D = 2059837836;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR = 59481748;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2D = 3749851601;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM = 3486308946;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3D = 3331915920;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM = 1416205885;\nvar IFCCENTERLINEPROFILEDEF = 3150382593;\nvar IFCCHILLER = 3902619387;\nvar IFCCHILLERTYPE = 2951183804;\nvar IFCCHIMNEY = 3296154744;\nvar IFCCHIMNEYTYPE = 2197970202;\nvar IFCCIRCLE = 2611217952;\nvar IFCCIRCLEHOLLOWPROFILEDEF = 2937912522;\nvar IFCCIRCLEPROFILEDEF = 1383045692;\nvar IFCCIRCULARARCSEGMENT2D = 1062206242;\nvar IFCCIVILELEMENT = 1677625105;\nvar IFCCIVILELEMENTTYPE = 3893394355;\nvar IFCCLASSIFICATION = 747523909;\nvar IFCCLASSIFICATIONREFERENCE = 647927063;\nvar IFCCLOSEDSHELL = 2205249479;\nvar IFCCOIL = 639361253;\nvar IFCCOILTYPE = 2301859152;\nvar IFCCOLOURRGB = 776857604;\nvar IFCCOLOURRGBLIST = 3285139300;\nvar IFCCOLOURSPECIFICATION = 3264961684;\nvar IFCCOLUMN = 843113511;\nvar IFCCOLUMNSTANDARDCASE = 905975707;\nvar IFCCOLUMNTYPE = 300633059;\nvar IFCCOMMUNICATIONSAPPLIANCE = 3221913625;\nvar IFCCOMMUNICATIONSAPPLIANCETYPE = 400855858;\nvar IFCCOMPLEXPROPERTY = 2542286263;\nvar IFCCOMPLEXPROPERTYTEMPLATE = 3875453745;\nvar IFCCOMPOSITECURVE = 3732776249;\nvar IFCCOMPOSITECURVEONSURFACE = 15328376;\nvar IFCCOMPOSITECURVESEGMENT = 2485617015;\nvar IFCCOMPOSITEPROFILEDEF = 1485152156;\nvar IFCCOMPRESSOR = 3571504051;\nvar IFCCOMPRESSORTYPE = 3850581409;\nvar IFCCONDENSER = 2272882330;\nvar IFCCONDENSERTYPE = 2816379211;\nvar IFCCONIC = 2510884976;\nvar IFCCONNECTEDFACESET = 370225590;\nvar IFCCONNECTIONCURVEGEOMETRY = 1981873012;\nvar IFCCONNECTIONGEOMETRY = 2859738748;\nvar IFCCONNECTIONPOINTECCENTRICITY = 45288368;\nvar IFCCONNECTIONPOINTGEOMETRY = 2614616156;\nvar IFCCONNECTIONSURFACEGEOMETRY = 2732653382;\nvar IFCCONNECTIONVOLUMEGEOMETRY = 775493141;\nvar IFCCONSTRAINT = 1959218052;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCE = 3898045240;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE = 2185764099;\nvar IFCCONSTRUCTIONMATERIALRESOURCE = 1060000209;\nvar IFCCONSTRUCTIONMATERIALRESOURCETYPE = 4105962743;\nvar IFCCONSTRUCTIONPRODUCTRESOURCE = 488727124;\nvar IFCCONSTRUCTIONPRODUCTRESOURCETYPE = 1525564444;\nvar IFCCONSTRUCTIONRESOURCE = 2559216714;\nvar IFCCONSTRUCTIONRESOURCETYPE = 2574617495;\nvar IFCCONTEXT = 3419103109;\nvar IFCCONTEXTDEPENDENTUNIT = 3050246964;\nvar IFCCONTROL = 3293443760;\nvar IFCCONTROLLER = 25142252;\nvar IFCCONTROLLERTYPE = 578613899;\nvar IFCCONVERSIONBASEDUNIT = 2889183280;\nvar IFCCONVERSIONBASEDUNITWITHOFFSET = 2713554722;\nvar IFCCOOLEDBEAM = 4136498852;\nvar IFCCOOLEDBEAMTYPE = 335055490;\nvar IFCCOOLINGTOWER = 3640358203;\nvar IFCCOOLINGTOWERTYPE = 2954562838;\nvar IFCCOORDINATEOPERATION = 1785450214;\nvar IFCCOORDINATEREFERENCESYSTEM = 1466758467;\nvar IFCCOSTITEM = 3895139033;\nvar IFCCOSTSCHEDULE = 1419761937;\nvar IFCCOSTVALUE = 602808272;\nvar IFCCOVERING = 1973544240;\nvar IFCCOVERINGTYPE = 1916426348;\nvar IFCCREWRESOURCE = 3295246426;\nvar IFCCREWRESOURCETYPE = 1815067380;\nvar IFCCSGPRIMITIVE3D = 2506170314;\nvar IFCCSGSOLID = 2147822146;\nvar IFCCURRENCYRELATIONSHIP = 539742890;\nvar IFCCURTAINWALL = 3495092785;\nvar IFCCURTAINWALLTYPE = 1457835157;\nvar IFCCURVE = 2601014836;\nvar IFCCURVEBOUNDEDPLANE = 2827736869;\nvar IFCCURVEBOUNDEDSURFACE = 2629017746;\nvar IFCCURVESEGMENT2D = 1186437898;\nvar IFCCURVESTYLE = 3800577675;\nvar IFCCURVESTYLEFONT = 1105321065;\nvar IFCCURVESTYLEFONTANDSCALING = 2367409068;\nvar IFCCURVESTYLEFONTPATTERN = 3510044353;\nvar IFCCYLINDRICALSURFACE = 1213902940;\nvar IFCDAMPER = 4074379575;\nvar IFCDAMPERTYPE = 3961806047;\nvar IFCDEEPFOUNDATION = 3426335179;\nvar IFCDEEPFOUNDATIONTYPE = 1306400036;\nvar IFCDERIVEDPROFILEDEF = 3632507154;\nvar IFCDERIVEDUNIT = 1765591967;\nvar IFCDERIVEDUNITELEMENT = 1045800335;\nvar IFCDIMENSIONALEXPONENTS = 2949456006;\nvar IFCDIRECTION = 32440307;\nvar IFCDISCRETEACCESSORY = 1335981549;\nvar IFCDISCRETEACCESSORYTYPE = 2635815018;\nvar IFCDISTANCEEXPRESSION = 1945343521;\nvar IFCDISTRIBUTIONCHAMBERELEMENT = 1052013943;\nvar IFCDISTRIBUTIONCHAMBERELEMENTTYPE = 1599208980;\nvar IFCDISTRIBUTIONCIRCUIT = 562808652;\nvar IFCDISTRIBUTIONCONTROLELEMENT = 1062813311;\nvar IFCDISTRIBUTIONCONTROLELEMENTTYPE = 2063403501;\nvar IFCDISTRIBUTIONELEMENT = 1945004755;\nvar IFCDISTRIBUTIONELEMENTTYPE = 3256556792;\nvar IFCDISTRIBUTIONFLOWELEMENT = 3040386961;\nvar IFCDISTRIBUTIONFLOWELEMENTTYPE = 3849074793;\nvar IFCDISTRIBUTIONPORT = 3041715199;\nvar IFCDISTRIBUTIONSYSTEM = 3205830791;\nvar IFCDOCUMENTINFORMATION = 1154170062;\nvar IFCDOCUMENTINFORMATIONRELATIONSHIP = 770865208;\nvar IFCDOCUMENTREFERENCE = 3732053477;\nvar IFCDOOR = 395920057;\nvar IFCDOORLININGPROPERTIES = 2963535650;\nvar IFCDOORPANELPROPERTIES = 1714330368;\nvar IFCDOORSTANDARDCASE = 3242481149;\nvar IFCDOORSTYLE = 526551008;\nvar IFCDOORTYPE = 2323601079;\nvar IFCDRAUGHTINGPREDEFINEDCOLOUR = 445594917;\nvar IFCDRAUGHTINGPREDEFINEDCURVEFONT = 4006246654;\nvar IFCDUCTFITTING = 342316401;\nvar IFCDUCTFITTINGTYPE = 869906466;\nvar IFCDUCTSEGMENT = 3518393246;\nvar IFCDUCTSEGMENTTYPE = 3760055223;\nvar IFCDUCTSILENCER = 1360408905;\nvar IFCDUCTSILENCERTYPE = 2030761528;\nvar IFCEDGE = 3900360178;\nvar IFCEDGECURVE = 476780140;\nvar IFCEDGELOOP = 1472233963;\nvar IFCELECTRICAPPLIANCE = 1904799276;\nvar IFCELECTRICAPPLIANCETYPE = 663422040;\nvar IFCELECTRICDISTRIBUTIONBOARD = 862014818;\nvar IFCELECTRICDISTRIBUTIONBOARDTYPE = 2417008758;\nvar IFCELECTRICFLOWSTORAGEDEVICE = 3310460725;\nvar IFCELECTRICFLOWSTORAGEDEVICETYPE = 3277789161;\nvar IFCELECTRICGENERATOR = 264262732;\nvar IFCELECTRICGENERATORTYPE = 1534661035;\nvar IFCELECTRICMOTOR = 402227799;\nvar IFCELECTRICMOTORTYPE = 1217240411;\nvar IFCELECTRICTIMECONTROL = 1003880860;\nvar IFCELECTRICTIMECONTROLTYPE = 712377611;\nvar IFCELEMENT = 1758889154;\nvar IFCELEMENTASSEMBLY = 4123344466;\nvar IFCELEMENTASSEMBLYTYPE = 2397081782;\nvar IFCELEMENTCOMPONENT = 1623761950;\nvar IFCELEMENTCOMPONENTTYPE = 2590856083;\nvar IFCELEMENTQUANTITY = 1883228015;\nvar IFCELEMENTTYPE = 339256511;\nvar IFCELEMENTARYSURFACE = 2777663545;\nvar IFCELLIPSE = 1704287377;\nvar IFCELLIPSEPROFILEDEF = 2835456948;\nvar IFCENERGYCONVERSIONDEVICE = 1658829314;\nvar IFCENERGYCONVERSIONDEVICETYPE = 2107101300;\nvar IFCENGINE = 2814081492;\nvar IFCENGINETYPE = 132023988;\nvar IFCEVAPORATIVECOOLER = 3747195512;\nvar IFCEVAPORATIVECOOLERTYPE = 3174744832;\nvar IFCEVAPORATOR = 484807127;\nvar IFCEVAPORATORTYPE = 3390157468;\nvar IFCEVENT = 4148101412;\nvar IFCEVENTTIME = 211053100;\nvar IFCEVENTTYPE = 4024345920;\nvar IFCEXTENDEDPROPERTIES = 297599258;\nvar IFCEXTERNALINFORMATION = 4294318154;\nvar IFCEXTERNALREFERENCE = 3200245327;\nvar IFCEXTERNALREFERENCERELATIONSHIP = 1437805879;\nvar IFCEXTERNALSPATIALELEMENT = 1209101575;\nvar IFCEXTERNALSPATIALSTRUCTUREELEMENT = 2853485674;\nvar IFCEXTERNALLYDEFINEDHATCHSTYLE = 2242383968;\nvar IFCEXTERNALLYDEFINEDSURFACESTYLE = 1040185647;\nvar IFCEXTERNALLYDEFINEDTEXTFONT = 3548104201;\nvar IFCEXTRUDEDAREASOLID = 477187591;\nvar IFCEXTRUDEDAREASOLIDTAPERED = 2804161546;\nvar IFCFACE = 2556980723;\nvar IFCFACEBASEDSURFACEMODEL = 2047409740;\nvar IFCFACEBOUND = 1809719519;\nvar IFCFACEOUTERBOUND = 803316827;\nvar IFCFACESURFACE = 3008276851;\nvar IFCFACETEDBREP = 807026263;\nvar IFCFACETEDBREPWITHVOIDS = 3737207727;\nvar IFCFACILITY = 24185140;\nvar IFCFACILITYPART = 1310830890;\nvar IFCFAILURECONNECTIONCONDITION = 4219587988;\nvar IFCFAN = 3415622556;\nvar IFCFANTYPE = 346874300;\nvar IFCFASTENER = 647756555;\nvar IFCFASTENERTYPE = 2489546625;\nvar IFCFEATUREELEMENT = 2827207264;\nvar IFCFEATUREELEMENTADDITION = 2143335405;\nvar IFCFEATUREELEMENTSUBTRACTION = 1287392070;\nvar IFCFILLAREASTYLE = 738692330;\nvar IFCFILLAREASTYLEHATCHING = 374418227;\nvar IFCFILLAREASTYLETILES = 315944413;\nvar IFCFILTER = 819412036;\nvar IFCFILTERTYPE = 1810631287;\nvar IFCFIRESUPPRESSIONTERMINAL = 1426591983;\nvar IFCFIRESUPPRESSIONTERMINALTYPE = 4222183408;\nvar IFCFIXEDREFERENCESWEPTAREASOLID = 2652556860;\nvar IFCFLOWCONTROLLER = 2058353004;\nvar IFCFLOWCONTROLLERTYPE = 3907093117;\nvar IFCFLOWFITTING = 4278956645;\nvar IFCFLOWFITTINGTYPE = 3198132628;\nvar IFCFLOWINSTRUMENT = 182646315;\nvar IFCFLOWINSTRUMENTTYPE = 4037862832;\nvar IFCFLOWMETER = 2188021234;\nvar IFCFLOWMETERTYPE = 3815607619;\nvar IFCFLOWMOVINGDEVICE = 3132237377;\nvar IFCFLOWMOVINGDEVICETYPE = 1482959167;\nvar IFCFLOWSEGMENT = 987401354;\nvar IFCFLOWSEGMENTTYPE = 1834744321;\nvar IFCFLOWSTORAGEDEVICE = 707683696;\nvar IFCFLOWSTORAGEDEVICETYPE = 1339347760;\nvar IFCFLOWTERMINAL = 2223149337;\nvar IFCFLOWTERMINALTYPE = 2297155007;\nvar IFCFLOWTREATMENTDEVICE = 3508470533;\nvar IFCFLOWTREATMENTDEVICETYPE = 3009222698;\nvar IFCFOOTING = 900683007;\nvar IFCFOOTINGTYPE = 1893162501;\nvar IFCFURNISHINGELEMENT = 263784265;\nvar IFCFURNISHINGELEMENTTYPE = 4238390223;\nvar IFCFURNITURE = 1509553395;\nvar IFCFURNITURETYPE = 1268542332;\nvar IFCGEOGRAPHICELEMENT = 3493046030;\nvar IFCGEOGRAPHICELEMENTTYPE = 4095422895;\nvar IFCGEOMETRICCURVESET = 987898635;\nvar IFCGEOMETRICREPRESENTATIONCONTEXT = 3448662350;\nvar IFCGEOMETRICREPRESENTATIONITEM = 2453401579;\nvar IFCGEOMETRICREPRESENTATIONSUBCONTEXT = 4142052618;\nvar IFCGEOMETRICSET = 3590301190;\nvar IFCGRID = 3009204131;\nvar IFCGRIDAXIS = 852622518;\nvar IFCGRIDPLACEMENT = 178086475;\nvar IFCGROUP = 2706460486;\nvar IFCHALFSPACESOLID = 812098782;\nvar IFCHEATEXCHANGER = 3319311131;\nvar IFCHEATEXCHANGERTYPE = 1251058090;\nvar IFCHUMIDIFIER = 2068733104;\nvar IFCHUMIDIFIERTYPE = 1806887404;\nvar IFCISHAPEPROFILEDEF = 1484403080;\nvar IFCIMAGETEXTURE = 3905492369;\nvar IFCINDEXEDCOLOURMAP = 3570813810;\nvar IFCINDEXEDPOLYCURVE = 2571569899;\nvar IFCINDEXEDPOLYGONALFACE = 178912537;\nvar IFCINDEXEDPOLYGONALFACEWITHVOIDS = 2294589976;\nvar IFCINDEXEDTEXTUREMAP = 1437953363;\nvar IFCINDEXEDTRIANGLETEXTUREMAP = 2133299955;\nvar IFCINTERCEPTOR = 4175244083;\nvar IFCINTERCEPTORTYPE = 3946677679;\nvar IFCINTERSECTIONCURVE = 3113134337;\nvar IFCINVENTORY = 2391368822;\nvar IFCIRREGULARTIMESERIES = 3741457305;\nvar IFCIRREGULARTIMESERIESVALUE = 3020489413;\nvar IFCJUNCTIONBOX = 2176052936;\nvar IFCJUNCTIONBOXTYPE = 4288270099;\nvar IFCLSHAPEPROFILEDEF = 572779678;\nvar IFCLABORRESOURCE = 3827777499;\nvar IFCLABORRESOURCETYPE = 428585644;\nvar IFCLAGTIME = 1585845231;\nvar IFCLAMP = 76236018;\nvar IFCLAMPTYPE = 1051575348;\nvar IFCLIBRARYINFORMATION = 2655187982;\nvar IFCLIBRARYREFERENCE = 3452421091;\nvar IFCLIGHTDISTRIBUTIONDATA = 4162380809;\nvar IFCLIGHTFIXTURE = 629592764;\nvar IFCLIGHTFIXTURETYPE = 1161773419;\nvar IFCLIGHTINTENSITYDISTRIBUTION = 1566485204;\nvar IFCLIGHTSOURCE = 1402838566;\nvar IFCLIGHTSOURCEAMBIENT = 125510826;\nvar IFCLIGHTSOURCEDIRECTIONAL = 2604431987;\nvar IFCLIGHTSOURCEGONIOMETRIC = 4266656042;\nvar IFCLIGHTSOURCEPOSITIONAL = 1520743889;\nvar IFCLIGHTSOURCESPOT = 3422422726;\nvar IFCLINE = 1281925730;\nvar IFCLINESEGMENT2D = 3092502836;\nvar IFCLINEARPLACEMENT = 388784114;\nvar IFCLINEARPOSITIONINGELEMENT = 1154579445;\nvar IFCLOCALPLACEMENT = 2624227202;\nvar IFCLOOP = 1008929658;\nvar IFCMANIFOLDSOLIDBREP = 1425443689;\nvar IFCMAPCONVERSION = 3057273783;\nvar IFCMAPPEDITEM = 2347385850;\nvar IFCMATERIAL = 1838606355;\nvar IFCMATERIALCLASSIFICATIONRELATIONSHIP = 1847130766;\nvar IFCMATERIALCONSTITUENT = 3708119e3;\nvar IFCMATERIALCONSTITUENTSET = 2852063980;\nvar IFCMATERIALDEFINITION = 760658860;\nvar IFCMATERIALDEFINITIONREPRESENTATION = 2022407955;\nvar IFCMATERIALLAYER = 248100487;\nvar IFCMATERIALLAYERSET = 3303938423;\nvar IFCMATERIALLAYERSETUSAGE = 1303795690;\nvar IFCMATERIALLAYERWITHOFFSETS = 1847252529;\nvar IFCMATERIALLIST = 2199411900;\nvar IFCMATERIALPROFILE = 2235152071;\nvar IFCMATERIALPROFILESET = 164193824;\nvar IFCMATERIALPROFILESETUSAGE = 3079605661;\nvar IFCMATERIALPROFILESETUSAGETAPERING = 3404854881;\nvar IFCMATERIALPROFILEWITHOFFSETS = 552965576;\nvar IFCMATERIALPROPERTIES = 3265635763;\nvar IFCMATERIALRELATIONSHIP = 853536259;\nvar IFCMATERIALUSAGEDEFINITION = 1507914824;\nvar IFCMEASUREWITHUNIT = 2597039031;\nvar IFCMECHANICALFASTENER = 377706215;\nvar IFCMECHANICALFASTENERTYPE = 2108223431;\nvar IFCMEDICALDEVICE = 1437502449;\nvar IFCMEDICALDEVICETYPE = 1114901282;\nvar IFCMEMBER = 1073191201;\nvar IFCMEMBERSTANDARDCASE = 1911478936;\nvar IFCMEMBERTYPE = 3181161470;\nvar IFCMETRIC = 3368373690;\nvar IFCMIRROREDPROFILEDEF = 2998442950;\nvar IFCMONETARYUNIT = 2706619895;\nvar IFCMOTORCONNECTION = 2474470126;\nvar IFCMOTORCONNECTIONTYPE = 977012517;\nvar IFCNAMEDUNIT = 1918398963;\nvar IFCOBJECT = 3888040117;\nvar IFCOBJECTDEFINITION = 219451334;\nvar IFCOBJECTPLACEMENT = 3701648758;\nvar IFCOBJECTIVE = 2251480897;\nvar IFCOCCUPANT = 4143007308;\nvar IFCOFFSETCURVE = 590820931;\nvar IFCOFFSETCURVE2D = 3388369263;\nvar IFCOFFSETCURVE3D = 3505215534;\nvar IFCOFFSETCURVEBYDISTANCES = 2485787929;\nvar IFCOPENSHELL = 2665983363;\nvar IFCOPENINGELEMENT = 3588315303;\nvar IFCOPENINGSTANDARDCASE = 3079942009;\nvar IFCORGANIZATION = 4251960020;\nvar IFCORGANIZATIONRELATIONSHIP = 1411181986;\nvar IFCORIENTATIONEXPRESSION = 643959842;\nvar IFCORIENTEDEDGE = 1029017970;\nvar IFCOUTERBOUNDARYCURVE = 144952367;\nvar IFCOUTLET = 3694346114;\nvar IFCOUTLETTYPE = 2837617999;\nvar IFCOWNERHISTORY = 1207048766;\nvar IFCPARAMETERIZEDPROFILEDEF = 2529465313;\nvar IFCPATH = 2519244187;\nvar IFCPCURVE = 1682466193;\nvar IFCPERFORMANCEHISTORY = 2382730787;\nvar IFCPERMEABLECOVERINGPROPERTIES = 3566463478;\nvar IFCPERMIT = 3327091369;\nvar IFCPERSON = 2077209135;\nvar IFCPERSONANDORGANIZATION = 101040310;\nvar IFCPHYSICALCOMPLEXQUANTITY = 3021840470;\nvar IFCPHYSICALQUANTITY = 2483315170;\nvar IFCPHYSICALSIMPLEQUANTITY = 2226359599;\nvar IFCPILE = 1687234759;\nvar IFCPILETYPE = 1158309216;\nvar IFCPIPEFITTING = 310824031;\nvar IFCPIPEFITTINGTYPE = 804291784;\nvar IFCPIPESEGMENT = 3612865200;\nvar IFCPIPESEGMENTTYPE = 4231323485;\nvar IFCPIXELTEXTURE = 597895409;\nvar IFCPLACEMENT = 2004835150;\nvar IFCPLANARBOX = 603570806;\nvar IFCPLANAREXTENT = 1663979128;\nvar IFCPLANE = 220341763;\nvar IFCPLATE = 3171933400;\nvar IFCPLATESTANDARDCASE = 1156407060;\nvar IFCPLATETYPE = 4017108033;\nvar IFCPOINT = 2067069095;\nvar IFCPOINTONCURVE = 4022376103;\nvar IFCPOINTONSURFACE = 1423911732;\nvar IFCPOLYLOOP = 2924175390;\nvar IFCPOLYGONALBOUNDEDHALFSPACE = 2775532180;\nvar IFCPOLYGONALFACESET = 2839578677;\nvar IFCPOLYLINE = 3724593414;\nvar IFCPORT = 3740093272;\nvar IFCPOSITIONINGELEMENT = 1946335990;\nvar IFCPOSTALADDRESS = 3355820592;\nvar IFCPREDEFINEDCOLOUR = 759155922;\nvar IFCPREDEFINEDCURVEFONT = 2559016684;\nvar IFCPREDEFINEDITEM = 3727388367;\nvar IFCPREDEFINEDPROPERTIES = 3778827333;\nvar IFCPREDEFINEDPROPERTYSET = 3967405729;\nvar IFCPREDEFINEDTEXTFONT = 1775413392;\nvar IFCPRESENTATIONITEM = 677532197;\nvar IFCPRESENTATIONLAYERASSIGNMENT = 2022622350;\nvar IFCPRESENTATIONLAYERWITHSTYLE = 1304840413;\nvar IFCPRESENTATIONSTYLE = 3119450353;\nvar IFCPRESENTATIONSTYLEASSIGNMENT = 2417041796;\nvar IFCPROCEDURE = 2744685151;\nvar IFCPROCEDURETYPE = 569719735;\nvar IFCPROCESS = 2945172077;\nvar IFCPRODUCT = 4208778838;\nvar IFCPRODUCTDEFINITIONSHAPE = 673634403;\nvar IFCPRODUCTREPRESENTATION = 2095639259;\nvar IFCPROFILEDEF = 3958567839;\nvar IFCPROFILEPROPERTIES = 2802850158;\nvar IFCPROJECT = 103090709;\nvar IFCPROJECTLIBRARY = 653396225;\nvar IFCPROJECTORDER = 2904328755;\nvar IFCPROJECTEDCRS = 3843373140;\nvar IFCPROJECTIONELEMENT = 3651124850;\nvar IFCPROPERTY = 2598011224;\nvar IFCPROPERTYABSTRACTION = 986844984;\nvar IFCPROPERTYBOUNDEDVALUE = 871118103;\nvar IFCPROPERTYDEFINITION = 1680319473;\nvar IFCPROPERTYDEPENDENCYRELATIONSHIP = 148025276;\nvar IFCPROPERTYENUMERATEDVALUE = 4166981789;\nvar IFCPROPERTYENUMERATION = 3710013099;\nvar IFCPROPERTYLISTVALUE = 2752243245;\nvar IFCPROPERTYREFERENCEVALUE = 941946838;\nvar IFCPROPERTYSET = 1451395588;\nvar IFCPROPERTYSETDEFINITION = 3357820518;\nvar IFCPROPERTYSETTEMPLATE = 492091185;\nvar IFCPROPERTYSINGLEVALUE = 3650150729;\nvar IFCPROPERTYTABLEVALUE = 110355661;\nvar IFCPROPERTYTEMPLATE = 3521284610;\nvar IFCPROPERTYTEMPLATEDEFINITION = 1482703590;\nvar IFCPROTECTIVEDEVICE = 738039164;\nvar IFCPROTECTIVEDEVICETRIPPINGUNIT = 2295281155;\nvar IFCPROTECTIVEDEVICETRIPPINGUNITTYPE = 655969474;\nvar IFCPROTECTIVEDEVICETYPE = 1842657554;\nvar IFCPROXY = 3219374653;\nvar IFCPUMP = 90941305;\nvar IFCPUMPTYPE = 2250791053;\nvar IFCQUANTITYAREA = 2044713172;\nvar IFCQUANTITYCOUNT = 2093928680;\nvar IFCQUANTITYLENGTH = 931644368;\nvar IFCQUANTITYSET = 2090586900;\nvar IFCQUANTITYTIME = 3252649465;\nvar IFCQUANTITYVOLUME = 2405470396;\nvar IFCQUANTITYWEIGHT = 825690147;\nvar IFCRAILING = 2262370178;\nvar IFCRAILINGTYPE = 2893384427;\nvar IFCRAMP = 3024970846;\nvar IFCRAMPFLIGHT = 3283111854;\nvar IFCRAMPFLIGHTTYPE = 2324767716;\nvar IFCRAMPTYPE = 1469900589;\nvar IFCRATIONALBSPLINECURVEWITHKNOTS = 1232101972;\nvar IFCRATIONALBSPLINESURFACEWITHKNOTS = 683857671;\nvar IFCRECTANGLEHOLLOWPROFILEDEF = 2770003689;\nvar IFCRECTANGLEPROFILEDEF = 3615266464;\nvar IFCRECTANGULARPYRAMID = 2798486643;\nvar IFCRECTANGULARTRIMMEDSURFACE = 3454111270;\nvar IFCRECURRENCEPATTERN = 3915482550;\nvar IFCREFERENCE = 2433181523;\nvar IFCREFERENT = 4021432810;\nvar IFCREGULARTIMESERIES = 3413951693;\nvar IFCREINFORCEMENTBARPROPERTIES = 1580146022;\nvar IFCREINFORCEMENTDEFINITIONPROPERTIES = 3765753017;\nvar IFCREINFORCINGBAR = 979691226;\nvar IFCREINFORCINGBARTYPE = 2572171363;\nvar IFCREINFORCINGELEMENT = 3027567501;\nvar IFCREINFORCINGELEMENTTYPE = 964333572;\nvar IFCREINFORCINGMESH = 2320036040;\nvar IFCREINFORCINGMESHTYPE = 2310774935;\nvar IFCRELAGGREGATES = 160246688;\nvar IFCRELASSIGNS = 3939117080;\nvar IFCRELASSIGNSTOACTOR = 1683148259;\nvar IFCRELASSIGNSTOCONTROL = 2495723537;\nvar IFCRELASSIGNSTOGROUP = 1307041759;\nvar IFCRELASSIGNSTOGROUPBYFACTOR = 1027710054;\nvar IFCRELASSIGNSTOPROCESS = 4278684876;\nvar IFCRELASSIGNSTOPRODUCT = 2857406711;\nvar IFCRELASSIGNSTORESOURCE = 205026976;\nvar IFCRELASSOCIATES = 1865459582;\nvar IFCRELASSOCIATESAPPROVAL = 4095574036;\nvar IFCRELASSOCIATESCLASSIFICATION = 919958153;\nvar IFCRELASSOCIATESCONSTRAINT = 2728634034;\nvar IFCRELASSOCIATESDOCUMENT = 982818633;\nvar IFCRELASSOCIATESLIBRARY = 3840914261;\nvar IFCRELASSOCIATESMATERIAL = 2655215786;\nvar IFCRELCONNECTS = 826625072;\nvar IFCRELCONNECTSELEMENTS = 1204542856;\nvar IFCRELCONNECTSPATHELEMENTS = 3945020480;\nvar IFCRELCONNECTSPORTTOELEMENT = 4201705270;\nvar IFCRELCONNECTSPORTS = 3190031847;\nvar IFCRELCONNECTSSTRUCTURALACTIVITY = 2127690289;\nvar IFCRELCONNECTSSTRUCTURALMEMBER = 1638771189;\nvar IFCRELCONNECTSWITHECCENTRICITY = 504942748;\nvar IFCRELCONNECTSWITHREALIZINGELEMENTS = 3678494232;\nvar IFCRELCONTAINEDINSPATIALSTRUCTURE = 3242617779;\nvar IFCRELCOVERSBLDGELEMENTS = 886880790;\nvar IFCRELCOVERSSPACES = 2802773753;\nvar IFCRELDECLARES = 2565941209;\nvar IFCRELDECOMPOSES = 2551354335;\nvar IFCRELDEFINES = 693640335;\nvar IFCRELDEFINESBYOBJECT = 1462361463;\nvar IFCRELDEFINESBYPROPERTIES = 4186316022;\nvar IFCRELDEFINESBYTEMPLATE = 307848117;\nvar IFCRELDEFINESBYTYPE = 781010003;\nvar IFCRELFILLSELEMENT = 3940055652;\nvar IFCRELFLOWCONTROLELEMENTS = 279856033;\nvar IFCRELINTERFERESELEMENTS = 427948657;\nvar IFCRELNESTS = 3268803585;\nvar IFCRELPOSITIONS = 1441486842;\nvar IFCRELPROJECTSELEMENT = 750771296;\nvar IFCRELREFERENCEDINSPATIALSTRUCTURE = 1245217292;\nvar IFCRELSEQUENCE = 4122056220;\nvar IFCRELSERVICESBUILDINGS = 366585022;\nvar IFCRELSPACEBOUNDARY = 3451746338;\nvar IFCRELSPACEBOUNDARY1STLEVEL = 3523091289;\nvar IFCRELSPACEBOUNDARY2NDLEVEL = 1521410863;\nvar IFCRELVOIDSELEMENT = 1401173127;\nvar IFCRELATIONSHIP = 478536968;\nvar IFCREPARAMETRISEDCOMPOSITECURVESEGMENT = 816062949;\nvar IFCREPRESENTATION = 1076942058;\nvar IFCREPRESENTATIONCONTEXT = 3377609919;\nvar IFCREPRESENTATIONITEM = 3008791417;\nvar IFCREPRESENTATIONMAP = 1660063152;\nvar IFCRESOURCE = 2914609552;\nvar IFCRESOURCEAPPROVALRELATIONSHIP = 2943643501;\nvar IFCRESOURCECONSTRAINTRELATIONSHIP = 1608871552;\nvar IFCRESOURCELEVELRELATIONSHIP = 2439245199;\nvar IFCRESOURCETIME = 1042787934;\nvar IFCREVOLVEDAREASOLID = 1856042241;\nvar IFCREVOLVEDAREASOLIDTAPERED = 3243963512;\nvar IFCRIGHTCIRCULARCONE = 4158566097;\nvar IFCRIGHTCIRCULARCYLINDER = 3626867408;\nvar IFCROOF = 2016517767;\nvar IFCROOFTYPE = 2781568857;\nvar IFCROOT = 2341007311;\nvar IFCROUNDEDRECTANGLEPROFILEDEF = 2778083089;\nvar IFCSIUNIT = 448429030;\nvar IFCSANITARYTERMINAL = 3053780830;\nvar IFCSANITARYTERMINALTYPE = 1768891740;\nvar IFCSCHEDULINGTIME = 1054537805;\nvar IFCSEAMCURVE = 2157484638;\nvar IFCSECTIONPROPERTIES = 2042790032;\nvar IFCSECTIONREINFORCEMENTPROPERTIES = 4165799628;\nvar IFCSECTIONEDSOLID = 1862484736;\nvar IFCSECTIONEDSOLIDHORIZONTAL = 1290935644;\nvar IFCSECTIONEDSPINE = 1509187699;\nvar IFCSENSOR = 4086658281;\nvar IFCSENSORTYPE = 1783015770;\nvar IFCSHADINGDEVICE = 1329646415;\nvar IFCSHADINGDEVICETYPE = 4074543187;\nvar IFCSHAPEASPECT = 867548509;\nvar IFCSHAPEMODEL = 3982875396;\nvar IFCSHAPEREPRESENTATION = 4240577450;\nvar IFCSHELLBASEDSURFACEMODEL = 4124623270;\nvar IFCSIMPLEPROPERTY = 3692461612;\nvar IFCSIMPLEPROPERTYTEMPLATE = 3663146110;\nvar IFCSITE = 4097777520;\nvar IFCSLAB = 1529196076;\nvar IFCSLABELEMENTEDCASE = 3127900445;\nvar IFCSLABSTANDARDCASE = 3027962421;\nvar IFCSLABTYPE = 2533589738;\nvar IFCSLIPPAGECONNECTIONCONDITION = 2609359061;\nvar IFCSOLARDEVICE = 3420628829;\nvar IFCSOLARDEVICETYPE = 1072016465;\nvar IFCSOLIDMODEL = 723233188;\nvar IFCSPACE = 3856911033;\nvar IFCSPACEHEATER = 1999602285;\nvar IFCSPACEHEATERTYPE = 1305183839;\nvar IFCSPACETYPE = 3812236995;\nvar IFCSPATIALELEMENT = 1412071761;\nvar IFCSPATIALELEMENTTYPE = 710998568;\nvar IFCSPATIALSTRUCTUREELEMENT = 2706606064;\nvar IFCSPATIALSTRUCTUREELEMENTTYPE = 3893378262;\nvar IFCSPATIALZONE = 463610769;\nvar IFCSPATIALZONETYPE = 2481509218;\nvar IFCSPHERE = 451544542;\nvar IFCSPHERICALSURFACE = 4015995234;\nvar IFCSTACKTERMINAL = 1404847402;\nvar IFCSTACKTERMINALTYPE = 3112655638;\nvar IFCSTAIR = 331165859;\nvar IFCSTAIRFLIGHT = 4252922144;\nvar IFCSTAIRFLIGHTTYPE = 1039846685;\nvar IFCSTAIRTYPE = 338393293;\nvar IFCSTRUCTURALACTION = 682877961;\nvar IFCSTRUCTURALACTIVITY = 3544373492;\nvar IFCSTRUCTURALANALYSISMODEL = 2515109513;\nvar IFCSTRUCTURALCONNECTION = 1179482911;\nvar IFCSTRUCTURALCONNECTIONCONDITION = 2273995522;\nvar IFCSTRUCTURALCURVEACTION = 1004757350;\nvar IFCSTRUCTURALCURVECONNECTION = 4243806635;\nvar IFCSTRUCTURALCURVEMEMBER = 214636428;\nvar IFCSTRUCTURALCURVEMEMBERVARYING = 2445595289;\nvar IFCSTRUCTURALCURVEREACTION = 2757150158;\nvar IFCSTRUCTURALITEM = 3136571912;\nvar IFCSTRUCTURALLINEARACTION = 1807405624;\nvar IFCSTRUCTURALLOAD = 2162789131;\nvar IFCSTRUCTURALLOADCASE = 385403989;\nvar IFCSTRUCTURALLOADCONFIGURATION = 3478079324;\nvar IFCSTRUCTURALLOADGROUP = 1252848954;\nvar IFCSTRUCTURALLOADLINEARFORCE = 1595516126;\nvar IFCSTRUCTURALLOADORRESULT = 609421318;\nvar IFCSTRUCTURALLOADPLANARFORCE = 2668620305;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENT = 2473145415;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION = 1973038258;\nvar IFCSTRUCTURALLOADSINGLEFORCE = 1597423693;\nvar IFCSTRUCTURALLOADSINGLEFORCEWARPING = 1190533807;\nvar IFCSTRUCTURALLOADSTATIC = 2525727697;\nvar IFCSTRUCTURALLOADTEMPERATURE = 3408363356;\nvar IFCSTRUCTURALMEMBER = 530289379;\nvar IFCSTRUCTURALPLANARACTION = 1621171031;\nvar IFCSTRUCTURALPOINTACTION = 2082059205;\nvar IFCSTRUCTURALPOINTCONNECTION = 734778138;\nvar IFCSTRUCTURALPOINTREACTION = 1235345126;\nvar IFCSTRUCTURALREACTION = 3689010777;\nvar IFCSTRUCTURALRESULTGROUP = 2986769608;\nvar IFCSTRUCTURALSURFACEACTION = 3657597509;\nvar IFCSTRUCTURALSURFACECONNECTION = 1975003073;\nvar IFCSTRUCTURALSURFACEMEMBER = 3979015343;\nvar IFCSTRUCTURALSURFACEMEMBERVARYING = 2218152070;\nvar IFCSTRUCTURALSURFACEREACTION = 603775116;\nvar IFCSTYLEMODEL = 2830218821;\nvar IFCSTYLEDITEM = 3958052878;\nvar IFCSTYLEDREPRESENTATION = 3049322572;\nvar IFCSUBCONTRACTRESOURCE = 148013059;\nvar IFCSUBCONTRACTRESOURCETYPE = 4095615324;\nvar IFCSUBEDGE = 2233826070;\nvar IFCSURFACE = 2513912981;\nvar IFCSURFACECURVE = 699246055;\nvar IFCSURFACECURVESWEPTAREASOLID = 2028607225;\nvar IFCSURFACEFEATURE = 3101698114;\nvar IFCSURFACEOFLINEAREXTRUSION = 2809605785;\nvar IFCSURFACEOFREVOLUTION = 4124788165;\nvar IFCSURFACEREINFORCEMENTAREA = 2934153892;\nvar IFCSURFACESTYLE = 1300840506;\nvar IFCSURFACESTYLELIGHTING = 3303107099;\nvar IFCSURFACESTYLEREFRACTION = 1607154358;\nvar IFCSURFACESTYLERENDERING = 1878645084;\nvar IFCSURFACESTYLESHADING = 846575682;\nvar IFCSURFACESTYLEWITHTEXTURES = 1351298697;\nvar IFCSURFACETEXTURE = 626085974;\nvar IFCSWEPTAREASOLID = 2247615214;\nvar IFCSWEPTDISKSOLID = 1260650574;\nvar IFCSWEPTDISKSOLIDPOLYGONAL = 1096409881;\nvar IFCSWEPTSURFACE = 230924584;\nvar IFCSWITCHINGDEVICE = 1162798199;\nvar IFCSWITCHINGDEVICETYPE = 2315554128;\nvar IFCSYSTEM = 2254336722;\nvar IFCSYSTEMFURNITUREELEMENT = 413509423;\nvar IFCSYSTEMFURNITUREELEMENTTYPE = 1580310250;\nvar IFCTSHAPEPROFILEDEF = 3071757647;\nvar IFCTABLE = 985171141;\nvar IFCTABLECOLUMN = 2043862942;\nvar IFCTABLEROW = 531007025;\nvar IFCTANK = 812556717;\nvar IFCTANKTYPE = 5716631;\nvar IFCTASK = 3473067441;\nvar IFCTASKTIME = 1549132990;\nvar IFCTASKTIMERECURRING = 2771591690;\nvar IFCTASKTYPE = 3206491090;\nvar IFCTELECOMADDRESS = 912023232;\nvar IFCTENDON = 3824725483;\nvar IFCTENDONANCHOR = 2347447852;\nvar IFCTENDONANCHORTYPE = 3081323446;\nvar IFCTENDONCONDUIT = 3663046924;\nvar IFCTENDONCONDUITTYPE = 2281632017;\nvar IFCTENDONTYPE = 2415094496;\nvar IFCTESSELLATEDFACESET = 2387106220;\nvar IFCTESSELLATEDITEM = 901063453;\nvar IFCTEXTLITERAL = 4282788508;\nvar IFCTEXTLITERALWITHEXTENT = 3124975700;\nvar IFCTEXTSTYLE = 1447204868;\nvar IFCTEXTSTYLEFONTMODEL = 1983826977;\nvar IFCTEXTSTYLEFORDEFINEDFONT = 2636378356;\nvar IFCTEXTSTYLETEXTMODEL = 1640371178;\nvar IFCTEXTURECOORDINATE = 280115917;\nvar IFCTEXTURECOORDINATEGENERATOR = 1742049831;\nvar IFCTEXTUREMAP = 2552916305;\nvar IFCTEXTUREVERTEX = 1210645708;\nvar IFCTEXTUREVERTEXLIST = 3611470254;\nvar IFCTIMEPERIOD = 1199560280;\nvar IFCTIMESERIES = 3101149627;\nvar IFCTIMESERIESVALUE = 581633288;\nvar IFCTOPOLOGICALREPRESENTATIONITEM = 1377556343;\nvar IFCTOPOLOGYREPRESENTATION = 1735638870;\nvar IFCTOROIDALSURFACE = 1935646853;\nvar IFCTRANSFORMER = 3825984169;\nvar IFCTRANSFORMERTYPE = 1692211062;\nvar IFCTRANSITIONCURVESEGMENT2D = 2595432518;\nvar IFCTRANSPORTELEMENT = 1620046519;\nvar IFCTRANSPORTELEMENTTYPE = 2097647324;\nvar IFCTRAPEZIUMPROFILEDEF = 2715220739;\nvar IFCTRIANGULATEDFACESET = 2916149573;\nvar IFCTRIANGULATEDIRREGULARNETWORK = 1229763772;\nvar IFCTRIMMEDCURVE = 3593883385;\nvar IFCTUBEBUNDLE = 3026737570;\nvar IFCTUBEBUNDLETYPE = 1600972822;\nvar IFCTYPEOBJECT = 1628702193;\nvar IFCTYPEPROCESS = 3736923433;\nvar IFCTYPEPRODUCT = 2347495698;\nvar IFCTYPERESOURCE = 3698973494;\nvar IFCUSHAPEPROFILEDEF = 427810014;\nvar IFCUNITASSIGNMENT = 180925521;\nvar IFCUNITARYCONTROLELEMENT = 630975310;\nvar IFCUNITARYCONTROLELEMENTTYPE = 3179687236;\nvar IFCUNITARYEQUIPMENT = 4292641817;\nvar IFCUNITARYEQUIPMENTTYPE = 1911125066;\nvar IFCVALVE = 4207607924;\nvar IFCVALVETYPE = 728799441;\nvar IFCVECTOR = 1417489154;\nvar IFCVERTEX = 2799835756;\nvar IFCVERTEXLOOP = 2759199220;\nvar IFCVERTEXPOINT = 1907098498;\nvar IFCVIBRATIONDAMPER = 1530820697;\nvar IFCVIBRATIONDAMPERTYPE = 3956297820;\nvar IFCVIBRATIONISOLATOR = 2391383451;\nvar IFCVIBRATIONISOLATORTYPE = 3313531582;\nvar IFCVIRTUALELEMENT = 2769231204;\nvar IFCVIRTUALGRIDINTERSECTION = 891718957;\nvar IFCVOIDINGFEATURE = 926996030;\nvar IFCWALL = 2391406946;\nvar IFCWALLELEMENTEDCASE = 4156078855;\nvar IFCWALLSTANDARDCASE = 3512223829;\nvar IFCWALLTYPE = 1898987631;\nvar IFCWASTETERMINAL = 4237592921;\nvar IFCWASTETERMINALTYPE = 1133259667;\nvar IFCWINDOW = 3304561284;\nvar IFCWINDOWLININGPROPERTIES = 336235671;\nvar IFCWINDOWPANELPROPERTIES = 512836454;\nvar IFCWINDOWSTANDARDCASE = 486154966;\nvar IFCWINDOWSTYLE = 1299126871;\nvar IFCWINDOWTYPE = 4009809668;\nvar IFCWORKCALENDAR = 4088093105;\nvar IFCWORKCONTROL = 1028945134;\nvar IFCWORKPLAN = 4218914973;\nvar IFCWORKSCHEDULE = 3342526732;\nvar IFCWORKTIME = 1236880293;\nvar IFCZSHAPEPROFILEDEF = 2543172580;\nvar IFCZONE = 1033361043;\nvar IfcElements = [\n  4288193352,\n  1634111441,\n  177149247,\n  2056796094,\n  3087945054,\n  277319702,\n  753842376,\n  2906023776,\n  32344328,\n  2979338954,\n  1095909175,\n  2938176219,\n  635142910,\n  3758799889,\n  1051757585,\n  4217484030,\n  3902619387,\n  3296154744,\n  1677625105,\n  639361253,\n  843113511,\n  905975707,\n  3221913625,\n  3571504051,\n  2272882330,\n  25142252,\n  4136498852,\n  3640358203,\n  1973544240,\n  3495092785,\n  4074379575,\n  1335981549,\n  1052013943,\n  1062813311,\n  1945004755,\n  3040386961,\n  395920057,\n  3242481149,\n  342316401,\n  3518393246,\n  1360408905,\n  1904799276,\n  862014818,\n  3310460725,\n  264262732,\n  402227799,\n  1003880860,\n  4123344466,\n  1658829314,\n  2814081492,\n  3747195512,\n  484807127,\n  3415622556,\n  647756555,\n  819412036,\n  1426591983,\n  2058353004,\n  4278956645,\n  182646315,\n  2188021234,\n  3132237377,\n  987401354,\n  707683696,\n  2223149337,\n  3508470533,\n  900683007,\n  263784265,\n  1509553395,\n  3493046030,\n  3319311131,\n  2068733104,\n  4175244083,\n  2176052936,\n  76236018,\n  629592764,\n  377706215,\n  1437502449,\n  1073191201,\n  1911478936,\n  2474470126,\n  3588315303,\n  3079942009,\n  3694346114,\n  1687234759,\n  310824031,\n  3612865200,\n  3171933400,\n  1156407060,\n  3651124850,\n  738039164,\n  2295281155,\n  90941305,\n  2262370178,\n  3024970846,\n  3283111854,\n  979691226,\n  2320036040,\n  2016517767,\n  3053780830,\n  4086658281,\n  1329646415,\n  1529196076,\n  3127900445,\n  3027962421,\n  3420628829,\n  1999602285,\n  1404847402,\n  331165859,\n  4252922144,\n  3101698114,\n  1162798199,\n  413509423,\n  812556717,\n  3824725483,\n  2347447852,\n  3825984169,\n  1620046519,\n  3026737570,\n  630975310,\n  4292641817,\n  4207607924,\n  2391383451,\n  2769231204,\n  926996030,\n  2391406946,\n  4156078855,\n  3512223829,\n  4237592921,\n  3304561284,\n  486154966\n];\n\n// dist/ifc2x4_helper.ts\nvar FromRawLineData = {};\nFromRawLineData[IFCACTIONREQUEST] = (d) => {\n  return IfcActionRequest.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTOR] = (d) => {\n  return IfcActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTORROLE] = (d) => {\n  return IfcActorRole.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATOR] = (d) => {\n  return IfcActuator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATORTYPE] = (d) => {\n  return IfcActuatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADDRESS] = (d) => {\n  return IfcAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREP] = (d) => {\n  return IfcAdvancedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREPWITHVOIDS] = (d) => {\n  return IfcAdvancedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDFACE] = (d) => {\n  return IfcAdvancedFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINAL] = (d) => {\n  return IfcAirTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOX] = (d) => {\n  return IfcAirTerminalBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOXTYPE] = (d) => {\n  return IfcAirTerminalBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALTYPE] = (d) => {\n  return IfcAirTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERY] = (d) => {\n  return IfcAirToAirHeatRecovery.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERYTYPE] = (d) => {\n  return IfcAirToAirHeatRecoveryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARM] = (d) => {\n  return IfcAlarm.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARMTYPE] = (d) => {\n  return IfcAlarmType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT] = (d) => {\n  return IfcAlignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTAL] = (d) => {\n  return IfcAlignment2DHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTALSEGMENT] = (d) => {\n  return IfcAlignment2DHorizontalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DSEGMENT] = (d) => {\n  return IfcAlignment2DSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGCIRCULARARC] = (d) => {\n  return IfcAlignment2DVerSegCircularArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGLINE] = (d) => {\n  return IfcAlignment2DVerSegLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGPARABOLICARC] = (d) => {\n  return IfcAlignment2DVerSegParabolicArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICAL] = (d) => {\n  return IfcAlignment2DVertical.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICALSEGMENT] = (d) => {\n  return IfcAlignment2DVerticalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENTCURVE] = (d) => {\n  return IfcAlignmentCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATION] = (d) => {\n  return IfcAnnotation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATIONFILLAREA] = (d) => {\n  return IfcAnnotationFillArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLICATION] = (d) => {\n  return IfcApplication.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLIEDVALUE] = (d) => {\n  return IfcAppliedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVAL] = (d) => {\n  return IfcApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVALRELATIONSHIP] = (d) => {\n  return IfcApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYCLOSEDPROFILEDEF] = (d) => {\n  return IfcArbitraryClosedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYOPENPROFILEDEF] = (d) => {\n  return IfcArbitraryOpenProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYPROFILEDEFWITHVOIDS] = (d) => {\n  return IfcArbitraryProfileDefWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASSET] = (d) => {\n  return IfcAsset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASYMMETRICISHAPEPROFILEDEF] = (d) => {\n  return IfcAsymmetricIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCE] = (d) => {\n  return IfcAudioVisualAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCETYPE] = (d) => {\n  return IfcAudioVisualApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS1PLACEMENT] = (d) => {\n  return IfcAxis1Placement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT2D] = (d) => {\n  return IfcAxis2Placement2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT3D] = (d) => {\n  return IfcAxis2Placement3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVE] = (d) => {\n  return IfcBSplineCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACE] = (d) => {\n  return IfcBSplineSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAM] = (d) => {\n  return IfcBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMSTANDARDCASE] = (d) => {\n  return IfcBeamStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMTYPE] = (d) => {\n  return IfcBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARING] = (d) => {\n  return IfcBearing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARINGTYPE] = (d) => {\n  return IfcBearingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOBTEXTURE] = (d) => {\n  return IfcBlobTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOCK] = (d) => {\n  return IfcBlock.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILER] = (d) => {\n  return IfcBoiler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILERTYPE] = (d) => {\n  return IfcBoilerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANCLIPPINGRESULT] = (d) => {\n  return IfcBooleanClippingResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANRESULT] = (d) => {\n  return IfcBooleanResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCONDITION] = (d) => {\n  return IfcBoundaryCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCURVE] = (d) => {\n  return IfcBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYEDGECONDITION] = (d) => {\n  return IfcBoundaryEdgeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYFACECONDITION] = (d) => {\n  return IfcBoundaryFaceCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITION] = (d) => {\n  return IfcBoundaryNodeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITIONWARPING] = (d) => {\n  return IfcBoundaryNodeConditionWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDCURVE] = (d) => {\n  return IfcBoundedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDSURFACE] = (d) => {\n  return IfcBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDINGBOX] = (d) => {\n  return IfcBoundingBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOXEDHALFSPACE] = (d) => {\n  return IfcBoxedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGE] = (d) => {\n  return IfcBridge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGEPART] = (d) => {\n  return IfcBridgePart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDING] = (d) => {\n  return IfcBuilding.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENT] = (d) => {\n  return IfcBuildingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPART] = (d) => {\n  return IfcBuildingElementPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPARTTYPE] = (d) => {\n  return IfcBuildingElementPartType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXY] = (d) => {\n  return IfcBuildingElementProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXYTYPE] = (d) => {\n  return IfcBuildingElementProxyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTTYPE] = (d) => {\n  return IfcBuildingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSTOREY] = (d) => {\n  return IfcBuildingStorey.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSYSTEM] = (d) => {\n  return IfcBuildingSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNER] = (d) => {\n  return IfcBurner.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNERTYPE] = (d) => {\n  return IfcBurnerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSHAPEPROFILEDEF] = (d) => {\n  return IfcCShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTING] = (d) => {\n  return IfcCableCarrierFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTINGTYPE] = (d) => {\n  return IfcCableCarrierFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENT] = (d) => {\n  return IfcCableCarrierSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENTTYPE] = (d) => {\n  return IfcCableCarrierSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTING] = (d) => {\n  return IfcCableFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTINGTYPE] = (d) => {\n  return IfcCableFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENT] = (d) => {\n  return IfcCableSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENTTYPE] = (d) => {\n  return IfcCableSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATION] = (d) => {\n  return IfcCaissonFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATIONTYPE] = (d) => {\n  return IfcCaissonFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINT] = (d) => {\n  return IfcCartesianPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST] = (d) => {\n  return IfcCartesianPointList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST2D] = (d) => {\n  return IfcCartesianPointList2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST3D] = (d) => {\n  return IfcCartesianPointList3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR] = (d) => {\n  return IfcCartesianTransformationOperator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2D] = (d) => {\n  return IfcCartesianTransformationOperator2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator2DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3D] = (d) => {\n  return IfcCartesianTransformationOperator3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator3DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCENTERLINEPROFILEDEF] = (d) => {\n  return IfcCenterLineProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLER] = (d) => {\n  return IfcChiller.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLERTYPE] = (d) => {\n  return IfcChillerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEY] = (d) => {\n  return IfcChimney.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEYTYPE] = (d) => {\n  return IfcChimneyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLE] = (d) => {\n  return IfcCircle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcCircleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEPROFILEDEF] = (d) => {\n  return IfcCircleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCULARARCSEGMENT2D] = (d) => {\n  return IfcCircularArcSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENT] = (d) => {\n  return IfcCivilElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENTTYPE] = (d) => {\n  return IfcCivilElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATION] = (d) => {\n  return IfcClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATIONREFERENCE] = (d) => {\n  return IfcClassificationReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLOSEDSHELL] = (d) => {\n  return IfcClosedShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOIL] = (d) => {\n  return IfcCoil.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOILTYPE] = (d) => {\n  return IfcCoilType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGB] = (d) => {\n  return IfcColourRgb.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGBLIST] = (d) => {\n  return IfcColourRgbList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURSPECIFICATION] = (d) => {\n  return IfcColourSpecification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMN] = (d) => {\n  return IfcColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNSTANDARDCASE] = (d) => {\n  return IfcColumnStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNTYPE] = (d) => {\n  return IfcColumnType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCE] = (d) => {\n  return IfcCommunicationsAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCETYPE] = (d) => {\n  return IfcCommunicationsApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTY] = (d) => {\n  return IfcComplexProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTYTEMPLATE] = (d) => {\n  return IfcComplexPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVE] = (d) => {\n  return IfcCompositeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVEONSURFACE] = (d) => {\n  return IfcCompositeCurveOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITEPROFILEDEF] = (d) => {\n  return IfcCompositeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSOR] = (d) => {\n  return IfcCompressor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSORTYPE] = (d) => {\n  return IfcCompressorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSER] = (d) => {\n  return IfcCondenser.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSERTYPE] = (d) => {\n  return IfcCondenserType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONIC] = (d) => {\n  return IfcConic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTEDFACESET] = (d) => {\n  return IfcConnectedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONCURVEGEOMETRY] = (d) => {\n  return IfcConnectionCurveGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONGEOMETRY] = (d) => {\n  return IfcConnectionGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTECCENTRICITY] = (d) => {\n  return IfcConnectionPointEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTGEOMETRY] = (d) => {\n  return IfcConnectionPointGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONSURFACEGEOMETRY] = (d) => {\n  return IfcConnectionSurfaceGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONVOLUMEGEOMETRY] = (d) => {\n  return IfcConnectionVolumeGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRAINT] = (d) => {\n  return IfcConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCE] = (d) => {\n  return IfcConstructionEquipmentResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE] = (d) => {\n  return IfcConstructionEquipmentResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCE] = (d) => {\n  return IfcConstructionMaterialResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCETYPE] = (d) => {\n  return IfcConstructionMaterialResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCE] = (d) => {\n  return IfcConstructionProductResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCETYPE] = (d) => {\n  return IfcConstructionProductResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCE] = (d) => {\n  return IfcConstructionResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCETYPE] = (d) => {\n  return IfcConstructionResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXT] = (d) => {\n  return IfcContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXTDEPENDENTUNIT] = (d) => {\n  return IfcContextDependentUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROL] = (d) => {\n  return IfcControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLER] = (d) => {\n  return IfcController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLERTYPE] = (d) => {\n  return IfcControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNIT] = (d) => {\n  return IfcConversionBasedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNITWITHOFFSET] = (d) => {\n  return IfcConversionBasedUnitWithOffset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAM] = (d) => {\n  return IfcCooledBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAMTYPE] = (d) => {\n  return IfcCooledBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWER] = (d) => {\n  return IfcCoolingTower.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWERTYPE] = (d) => {\n  return IfcCoolingTowerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEOPERATION] = (d) => {\n  return IfcCoordinateOperation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEREFERENCESYSTEM] = (d) => {\n  return IfcCoordinateReferenceSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTITEM] = (d) => {\n  return IfcCostItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTSCHEDULE] = (d) => {\n  return IfcCostSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTVALUE] = (d) => {\n  return IfcCostValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERING] = (d) => {\n  return IfcCovering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERINGTYPE] = (d) => {\n  return IfcCoveringType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCE] = (d) => {\n  return IfcCrewResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCETYPE] = (d) => {\n  return IfcCrewResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGPRIMITIVE3D] = (d) => {\n  return IfcCsgPrimitive3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGSOLID] = (d) => {\n  return IfcCsgSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURRENCYRELATIONSHIP] = (d) => {\n  return IfcCurrencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALL] = (d) => {\n  return IfcCurtainWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALLTYPE] = (d) => {\n  return IfcCurtainWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVE] = (d) => {\n  return IfcCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDPLANE] = (d) => {\n  return IfcCurveBoundedPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDSURFACE] = (d) => {\n  return IfcCurveBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESEGMENT2D] = (d) => {\n  return IfcCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLE] = (d) => {\n  return IfcCurveStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONT] = (d) => {\n  return IfcCurveStyleFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTANDSCALING] = (d) => {\n  return IfcCurveStyleFontAndScaling.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTPATTERN] = (d) => {\n  return IfcCurveStyleFontPattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCYLINDRICALSURFACE] = (d) => {\n  return IfcCylindricalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPER] = (d) => {\n  return IfcDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPERTYPE] = (d) => {\n  return IfcDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATION] = (d) => {\n  return IfcDeepFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATIONTYPE] = (d) => {\n  return IfcDeepFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDPROFILEDEF] = (d) => {\n  return IfcDerivedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNIT] = (d) => {\n  return IfcDerivedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNITELEMENT] = (d) => {\n  return IfcDerivedUnitElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIMENSIONALEXPONENTS] = (d) => {\n  return IfcDimensionalExponents.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIRECTION] = (d) => {\n  return IfcDirection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORY] = (d) => {\n  return IfcDiscreteAccessory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORYTYPE] = (d) => {\n  return IfcDiscreteAccessoryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTANCEEXPRESSION] = (d) => {\n  return IfcDistanceExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENT] = (d) => {\n  return IfcDistributionChamberElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENTTYPE] = (d) => {\n  return IfcDistributionChamberElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCIRCUIT] = (d) => {\n  return IfcDistributionCircuit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENT] = (d) => {\n  return IfcDistributionControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENTTYPE] = (d) => {\n  return IfcDistributionControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENT] = (d) => {\n  return IfcDistributionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENTTYPE] = (d) => {\n  return IfcDistributionElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENT] = (d) => {\n  return IfcDistributionFlowElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENTTYPE] = (d) => {\n  return IfcDistributionFlowElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONPORT] = (d) => {\n  return IfcDistributionPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONSYSTEM] = (d) => {\n  return IfcDistributionSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATION] = (d) => {\n  return IfcDocumentInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATIONRELATIONSHIP] = (d) => {\n  return IfcDocumentInformationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTREFERENCE] = (d) => {\n  return IfcDocumentReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOOR] = (d) => {\n  return IfcDoor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORLININGPROPERTIES] = (d) => {\n  return IfcDoorLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORPANELPROPERTIES] = (d) => {\n  return IfcDoorPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTANDARDCASE] = (d) => {\n  return IfcDoorStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTYLE] = (d) => {\n  return IfcDoorStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORTYPE] = (d) => {\n  return IfcDoorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCOLOUR] = (d) => {\n  return IfcDraughtingPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCURVEFONT] = (d) => {\n  return IfcDraughtingPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTING] = (d) => {\n  return IfcDuctFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTINGTYPE] = (d) => {\n  return IfcDuctFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENT] = (d) => {\n  return IfcDuctSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENTTYPE] = (d) => {\n  return IfcDuctSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCER] = (d) => {\n  return IfcDuctSilencer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCERTYPE] = (d) => {\n  return IfcDuctSilencerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGE] = (d) => {\n  return IfcEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGECURVE] = (d) => {\n  return IfcEdgeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGELOOP] = (d) => {\n  return IfcEdgeLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCE] = (d) => {\n  return IfcElectricAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCETYPE] = (d) => {\n  return IfcElectricApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARD] = (d) => {\n  return IfcElectricDistributionBoard.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARDTYPE] = (d) => {\n  return IfcElectricDistributionBoardType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICE] = (d) => {\n  return IfcElectricFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcElectricFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATOR] = (d) => {\n  return IfcElectricGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATORTYPE] = (d) => {\n  return IfcElectricGeneratorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTOR] = (d) => {\n  return IfcElectricMotor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTORTYPE] = (d) => {\n  return IfcElectricMotorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROL] = (d) => {\n  return IfcElectricTimeControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROLTYPE] = (d) => {\n  return IfcElectricTimeControlType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENT] = (d) => {\n  return IfcElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLY] = (d) => {\n  return IfcElementAssembly.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLYTYPE] = (d) => {\n  return IfcElementAssemblyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENT] = (d) => {\n  return IfcElementComponent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENTTYPE] = (d) => {\n  return IfcElementComponentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTQUANTITY] = (d) => {\n  return IfcElementQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTTYPE] = (d) => {\n  return IfcElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTARYSURFACE] = (d) => {\n  return IfcElementarySurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSE] = (d) => {\n  return IfcEllipse.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSEPROFILEDEF] = (d) => {\n  return IfcEllipseProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICE] = (d) => {\n  return IfcEnergyConversionDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICETYPE] = (d) => {\n  return IfcEnergyConversionDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINE] = (d) => {\n  return IfcEngine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINETYPE] = (d) => {\n  return IfcEngineType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLER] = (d) => {\n  return IfcEvaporativeCooler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLERTYPE] = (d) => {\n  return IfcEvaporativeCoolerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATOR] = (d) => {\n  return IfcEvaporator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATORTYPE] = (d) => {\n  return IfcEvaporatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENT] = (d) => {\n  return IfcEvent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTIME] = (d) => {\n  return IfcEventTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTYPE] = (d) => {\n  return IfcEventType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTENDEDPROPERTIES] = (d) => {\n  return IfcExtendedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALINFORMATION] = (d) => {\n  return IfcExternalInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCE] = (d) => {\n  return IfcExternalReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCERELATIONSHIP] = (d) => {\n  return IfcExternalReferenceRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALELEMENT] = (d) => {\n  return IfcExternalSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcExternalSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDHATCHSTYLE] = (d) => {\n  return IfcExternallyDefinedHatchStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDSURFACESTYLE] = (d) => {\n  return IfcExternallyDefinedSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDTEXTFONT] = (d) => {\n  return IfcExternallyDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLID] = (d) => {\n  return IfcExtrudedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLIDTAPERED] = (d) => {\n  return IfcExtrudedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACE] = (d) => {\n  return IfcFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBASEDSURFACEMODEL] = (d) => {\n  return IfcFaceBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBOUND] = (d) => {\n  return IfcFaceBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEOUTERBOUND] = (d) => {\n  return IfcFaceOuterBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACESURFACE] = (d) => {\n  return IfcFaceSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREP] = (d) => {\n  return IfcFacetedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREPWITHVOIDS] = (d) => {\n  return IfcFacetedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITY] = (d) => {\n  return IfcFacility.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITYPART] = (d) => {\n  return IfcFacilityPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAILURECONNECTIONCONDITION] = (d) => {\n  return IfcFailureConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAN] = (d) => {\n  return IfcFan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFANTYPE] = (d) => {\n  return IfcFanType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENER] = (d) => {\n  return IfcFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENERTYPE] = (d) => {\n  return IfcFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENT] = (d) => {\n  return IfcFeatureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTADDITION] = (d) => {\n  return IfcFeatureElementAddition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTSUBTRACTION] = (d) => {\n  return IfcFeatureElementSubtraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLE] = (d) => {\n  return IfcFillAreaStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLEHATCHING] = (d) => {\n  return IfcFillAreaStyleHatching.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLETILES] = (d) => {\n  return IfcFillAreaStyleTiles.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTER] = (d) => {\n  return IfcFilter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTERTYPE] = (d) => {\n  return IfcFilterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINAL] = (d) => {\n  return IfcFireSuppressionTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINALTYPE] = (d) => {\n  return IfcFireSuppressionTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIXEDREFERENCESWEPTAREASOLID] = (d) => {\n  return IfcFixedReferenceSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLER] = (d) => {\n  return IfcFlowController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLERTYPE] = (d) => {\n  return IfcFlowControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTING] = (d) => {\n  return IfcFlowFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTINGTYPE] = (d) => {\n  return IfcFlowFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENT] = (d) => {\n  return IfcFlowInstrument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENTTYPE] = (d) => {\n  return IfcFlowInstrumentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETER] = (d) => {\n  return IfcFlowMeter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETERTYPE] = (d) => {\n  return IfcFlowMeterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICE] = (d) => {\n  return IfcFlowMovingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICETYPE] = (d) => {\n  return IfcFlowMovingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENT] = (d) => {\n  return IfcFlowSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENTTYPE] = (d) => {\n  return IfcFlowSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICE] = (d) => {\n  return IfcFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINAL] = (d) => {\n  return IfcFlowTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINALTYPE] = (d) => {\n  return IfcFlowTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICE] = (d) => {\n  return IfcFlowTreatmentDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICETYPE] = (d) => {\n  return IfcFlowTreatmentDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTING] = (d) => {\n  return IfcFooting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTINGTYPE] = (d) => {\n  return IfcFootingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENT] = (d) => {\n  return IfcFurnishingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENTTYPE] = (d) => {\n  return IfcFurnishingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURE] = (d) => {\n  return IfcFurniture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURETYPE] = (d) => {\n  return IfcFurnitureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENT] = (d) => {\n  return IfcGeographicElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENTTYPE] = (d) => {\n  return IfcGeographicElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICCURVESET] = (d) => {\n  return IfcGeometricCurveSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONCONTEXT] = (d) => {\n  return IfcGeometricRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONITEM] = (d) => {\n  return IfcGeometricRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONSUBCONTEXT] = (d) => {\n  return IfcGeometricRepresentationSubContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICSET] = (d) => {\n  return IfcGeometricSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRID] = (d) => {\n  return IfcGrid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDAXIS] = (d) => {\n  return IfcGridAxis.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDPLACEMENT] = (d) => {\n  return IfcGridPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGROUP] = (d) => {\n  return IfcGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHALFSPACESOLID] = (d) => {\n  return IfcHalfSpaceSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGER] = (d) => {\n  return IfcHeatExchanger.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGERTYPE] = (d) => {\n  return IfcHeatExchangerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIER] = (d) => {\n  return IfcHumidifier.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIERTYPE] = (d) => {\n  return IfcHumidifierType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCISHAPEPROFILEDEF] = (d) => {\n  return IfcIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIMAGETEXTURE] = (d) => {\n  return IfcImageTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDCOLOURMAP] = (d) => {\n  return IfcIndexedColourMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYCURVE] = (d) => {\n  return IfcIndexedPolyCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACE] = (d) => {\n  return IfcIndexedPolygonalFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACEWITHVOIDS] = (d) => {\n  return IfcIndexedPolygonalFaceWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTEXTUREMAP] = (d) => {\n  return IfcIndexedTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTRIANGLETEXTUREMAP] = (d) => {\n  return IfcIndexedTriangleTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTOR] = (d) => {\n  return IfcInterceptor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTORTYPE] = (d) => {\n  return IfcInterceptorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERSECTIONCURVE] = (d) => {\n  return IfcIntersectionCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINVENTORY] = (d) => {\n  return IfcInventory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIES] = (d) => {\n  return IfcIrregularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIESVALUE] = (d) => {\n  return IfcIrregularTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOX] = (d) => {\n  return IfcJunctionBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOXTYPE] = (d) => {\n  return IfcJunctionBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLSHAPEPROFILEDEF] = (d) => {\n  return IfcLShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCE] = (d) => {\n  return IfcLaborResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCETYPE] = (d) => {\n  return IfcLaborResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAGTIME] = (d) => {\n  return IfcLagTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMP] = (d) => {\n  return IfcLamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMPTYPE] = (d) => {\n  return IfcLampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYINFORMATION] = (d) => {\n  return IfcLibraryInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYREFERENCE] = (d) => {\n  return IfcLibraryReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTDISTRIBUTIONDATA] = (d) => {\n  return IfcLightDistributionData.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURE] = (d) => {\n  return IfcLightFixture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURETYPE] = (d) => {\n  return IfcLightFixtureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTINTENSITYDISTRIBUTION] = (d) => {\n  return IfcLightIntensityDistribution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCE] = (d) => {\n  return IfcLightSource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEAMBIENT] = (d) => {\n  return IfcLightSourceAmbient.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEDIRECTIONAL] = (d) => {\n  return IfcLightSourceDirectional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEGONIOMETRIC] = (d) => {\n  return IfcLightSourceGoniometric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEPOSITIONAL] = (d) => {\n  return IfcLightSourcePositional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCESPOT] = (d) => {\n  return IfcLightSourceSpot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINE] = (d) => {\n  return IfcLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINESEGMENT2D] = (d) => {\n  return IfcLineSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPLACEMENT] = (d) => {\n  return IfcLinearPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPOSITIONINGELEMENT] = (d) => {\n  return IfcLinearPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOCALPLACEMENT] = (d) => {\n  return IfcLocalPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOOP] = (d) => {\n  return IfcLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMANIFOLDSOLIDBREP] = (d) => {\n  return IfcManifoldSolidBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPCONVERSION] = (d) => {\n  return IfcMapConversion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPPEDITEM] = (d) => {\n  return IfcMappedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIAL] = (d) => {\n  return IfcMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCLASSIFICATIONRELATIONSHIP] = (d) => {\n  return IfcMaterialClassificationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENT] = (d) => {\n  return IfcMaterialConstituent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENTSET] = (d) => {\n  return IfcMaterialConstituentSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITION] = (d) => {\n  return IfcMaterialDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITIONREPRESENTATION] = (d) => {\n  return IfcMaterialDefinitionRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYER] = (d) => {\n  return IfcMaterialLayer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSET] = (d) => {\n  return IfcMaterialLayerSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSETUSAGE] = (d) => {\n  return IfcMaterialLayerSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERWITHOFFSETS] = (d) => {\n  return IfcMaterialLayerWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLIST] = (d) => {\n  return IfcMaterialList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILE] = (d) => {\n  return IfcMaterialProfile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESET] = (d) => {\n  return IfcMaterialProfileSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGE] = (d) => {\n  return IfcMaterialProfileSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGETAPERING] = (d) => {\n  return IfcMaterialProfileSetUsageTapering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILEWITHOFFSETS] = (d) => {\n  return IfcMaterialProfileWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROPERTIES] = (d) => {\n  return IfcMaterialProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALRELATIONSHIP] = (d) => {\n  return IfcMaterialRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALUSAGEDEFINITION] = (d) => {\n  return IfcMaterialUsageDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEASUREWITHUNIT] = (d) => {\n  return IfcMeasureWithUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENER] = (d) => {\n  return IfcMechanicalFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENERTYPE] = (d) => {\n  return IfcMechanicalFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICE] = (d) => {\n  return IfcMedicalDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICETYPE] = (d) => {\n  return IfcMedicalDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBER] = (d) => {\n  return IfcMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERSTANDARDCASE] = (d) => {\n  return IfcMemberStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERTYPE] = (d) => {\n  return IfcMemberType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMETRIC] = (d) => {\n  return IfcMetric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMIRROREDPROFILEDEF] = (d) => {\n  return IfcMirroredProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMONETARYUNIT] = (d) => {\n  return IfcMonetaryUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTION] = (d) => {\n  return IfcMotorConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTIONTYPE] = (d) => {\n  return IfcMotorConnectionType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCNAMEDUNIT] = (d) => {\n  return IfcNamedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECT] = (d) => {\n  return IfcObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTDEFINITION] = (d) => {\n  return IfcObjectDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTPLACEMENT] = (d) => {\n  return IfcObjectPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTIVE] = (d) => {\n  return IfcObjective.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOCCUPANT] = (d) => {\n  return IfcOccupant.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE] = (d) => {\n  return IfcOffsetCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE2D] = (d) => {\n  return IfcOffsetCurve2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE3D] = (d) => {\n  return IfcOffsetCurve3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVEBYDISTANCES] = (d) => {\n  return IfcOffsetCurveByDistances.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENSHELL] = (d) => {\n  return IfcOpenShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGELEMENT] = (d) => {\n  return IfcOpeningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGSTANDARDCASE] = (d) => {\n  return IfcOpeningStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATION] = (d) => {\n  return IfcOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATIONRELATIONSHIP] = (d) => {\n  return IfcOrganizationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTATIONEXPRESSION] = (d) => {\n  return IfcOrientationExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTEDEDGE] = (d) => {\n  return IfcOrientedEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTERBOUNDARYCURVE] = (d) => {\n  return IfcOuterBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLET] = (d) => {\n  return IfcOutlet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLETTYPE] = (d) => {\n  return IfcOutletType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOWNERHISTORY] = (d) => {\n  return IfcOwnerHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPARAMETERIZEDPROFILEDEF] = (d) => {\n  return IfcParameterizedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPATH] = (d) => {\n  return IfcPath.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPCURVE] = (d) => {\n  return IfcPcurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERFORMANCEHISTORY] = (d) => {\n  return IfcPerformanceHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMEABLECOVERINGPROPERTIES] = (d) => {\n  return IfcPermeableCoveringProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMIT] = (d) => {\n  return IfcPermit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSON] = (d) => {\n  return IfcPerson.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSONANDORGANIZATION] = (d) => {\n  return IfcPersonAndOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALCOMPLEXQUANTITY] = (d) => {\n  return IfcPhysicalComplexQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALQUANTITY] = (d) => {\n  return IfcPhysicalQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALSIMPLEQUANTITY] = (d) => {\n  return IfcPhysicalSimpleQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILE] = (d) => {\n  return IfcPile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILETYPE] = (d) => {\n  return IfcPileType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTING] = (d) => {\n  return IfcPipeFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTINGTYPE] = (d) => {\n  return IfcPipeFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENT] = (d) => {\n  return IfcPipeSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENTTYPE] = (d) => {\n  return IfcPipeSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIXELTEXTURE] = (d) => {\n  return IfcPixelTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLACEMENT] = (d) => {\n  return IfcPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANARBOX] = (d) => {\n  return IfcPlanarBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANAREXTENT] = (d) => {\n  return IfcPlanarExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANE] = (d) => {\n  return IfcPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATE] = (d) => {\n  return IfcPlate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATESTANDARDCASE] = (d) => {\n  return IfcPlateStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATETYPE] = (d) => {\n  return IfcPlateType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINT] = (d) => {\n  return IfcPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONCURVE] = (d) => {\n  return IfcPointOnCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONSURFACE] = (d) => {\n  return IfcPointOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLOOP] = (d) => {\n  return IfcPolyLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALBOUNDEDHALFSPACE] = (d) => {\n  return IfcPolygonalBoundedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALFACESET] = (d) => {\n  return IfcPolygonalFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLINE] = (d) => {\n  return IfcPolyline.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPORT] = (d) => {\n  return IfcPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSITIONINGELEMENT] = (d) => {\n  return IfcPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSTALADDRESS] = (d) => {\n  return IfcPostalAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCOLOUR] = (d) => {\n  return IfcPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCURVEFONT] = (d) => {\n  return IfcPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDITEM] = (d) => {\n  return IfcPreDefinedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTIES] = (d) => {\n  return IfcPreDefinedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTYSET] = (d) => {\n  return IfcPreDefinedPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDTEXTFONT] = (d) => {\n  return IfcPreDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONITEM] = (d) => {\n  return IfcPresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERASSIGNMENT] = (d) => {\n  return IfcPresentationLayerAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERWITHSTYLE] = (d) => {\n  return IfcPresentationLayerWithStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLE] = (d) => {\n  return IfcPresentationStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLEASSIGNMENT] = (d) => {\n  return IfcPresentationStyleAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURE] = (d) => {\n  return IfcProcedure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURETYPE] = (d) => {\n  return IfcProcedureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCESS] = (d) => {\n  return IfcProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCT] = (d) => {\n  return IfcProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTDEFINITIONSHAPE] = (d) => {\n  return IfcProductDefinitionShape.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTREPRESENTATION] = (d) => {\n  return IfcProductRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEDEF] = (d) => {\n  return IfcProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEPROPERTIES] = (d) => {\n  return IfcProfileProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECT] = (d) => {\n  return IfcProject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTLIBRARY] = (d) => {\n  return IfcProjectLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTORDER] = (d) => {\n  return IfcProjectOrder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTEDCRS] = (d) => {\n  return IfcProjectedCRS.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTIONELEMENT] = (d) => {\n  return IfcProjectionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTY] = (d) => {\n  return IfcProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYABSTRACTION] = (d) => {\n  return IfcPropertyAbstraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYBOUNDEDVALUE] = (d) => {\n  return IfcPropertyBoundedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEFINITION] = (d) => {\n  return IfcPropertyDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEPENDENCYRELATIONSHIP] = (d) => {\n  return IfcPropertyDependencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATEDVALUE] = (d) => {\n  return IfcPropertyEnumeratedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATION] = (d) => {\n  return IfcPropertyEnumeration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYLISTVALUE] = (d) => {\n  return IfcPropertyListValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYREFERENCEVALUE] = (d) => {\n  return IfcPropertyReferenceValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSET] = (d) => {\n  return IfcPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETDEFINITION] = (d) => {\n  return IfcPropertySetDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETTEMPLATE] = (d) => {\n  return IfcPropertySetTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSINGLEVALUE] = (d) => {\n  return IfcPropertySingleValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTABLEVALUE] = (d) => {\n  return IfcPropertyTableValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATE] = (d) => {\n  return IfcPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATEDEFINITION] = (d) => {\n  return IfcPropertyTemplateDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICE] = (d) => {\n  return IfcProtectiveDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNIT] = (d) => {\n  return IfcProtectiveDeviceTrippingUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNITTYPE] = (d) => {\n  return IfcProtectiveDeviceTrippingUnitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETYPE] = (d) => {\n  return IfcProtectiveDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROXY] = (d) => {\n  return IfcProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMP] = (d) => {\n  return IfcPump.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMPTYPE] = (d) => {\n  return IfcPumpType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYAREA] = (d) => {\n  return IfcQuantityArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYCOUNT] = (d) => {\n  return IfcQuantityCount.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYLENGTH] = (d) => {\n  return IfcQuantityLength.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYSET] = (d) => {\n  return IfcQuantitySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYTIME] = (d) => {\n  return IfcQuantityTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYVOLUME] = (d) => {\n  return IfcQuantityVolume.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYWEIGHT] = (d) => {\n  return IfcQuantityWeight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILING] = (d) => {\n  return IfcRailing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILINGTYPE] = (d) => {\n  return IfcRailingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMP] = (d) => {\n  return IfcRamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHT] = (d) => {\n  return IfcRampFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHTTYPE] = (d) => {\n  return IfcRampFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPTYPE] = (d) => {\n  return IfcRampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcRectangleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARPYRAMID] = (d) => {\n  return IfcRectangularPyramid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARTRIMMEDSURFACE] = (d) => {\n  return IfcRectangularTrimmedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECURRENCEPATTERN] = (d) => {\n  return IfcRecurrencePattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENCE] = (d) => {\n  return IfcReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENT] = (d) => {\n  return IfcReferent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREGULARTIMESERIES] = (d) => {\n  return IfcRegularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTBARPROPERTIES] = (d) => {\n  return IfcReinforcementBarProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTDEFINITIONPROPERTIES] = (d) => {\n  return IfcReinforcementDefinitionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBAR] = (d) => {\n  return IfcReinforcingBar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBARTYPE] = (d) => {\n  return IfcReinforcingBarType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENT] = (d) => {\n  return IfcReinforcingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENTTYPE] = (d) => {\n  return IfcReinforcingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESH] = (d) => {\n  return IfcReinforcingMesh.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESHTYPE] = (d) => {\n  return IfcReinforcingMeshType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELAGGREGATES] = (d) => {\n  return IfcRelAggregates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNS] = (d) => {\n  return IfcRelAssigns.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOACTOR] = (d) => {\n  return IfcRelAssignsToActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOCONTROL] = (d) => {\n  return IfcRelAssignsToControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUP] = (d) => {\n  return IfcRelAssignsToGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUPBYFACTOR] = (d) => {\n  return IfcRelAssignsToGroupByFactor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPROCESS] = (d) => {\n  return IfcRelAssignsToProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPRODUCT] = (d) => {\n  return IfcRelAssignsToProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTORESOURCE] = (d) => {\n  return IfcRelAssignsToResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATES] = (d) => {\n  return IfcRelAssociates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESAPPROVAL] = (d) => {\n  return IfcRelAssociatesApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCLASSIFICATION] = (d) => {\n  return IfcRelAssociatesClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCONSTRAINT] = (d) => {\n  return IfcRelAssociatesConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESDOCUMENT] = (d) => {\n  return IfcRelAssociatesDocument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESLIBRARY] = (d) => {\n  return IfcRelAssociatesLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESMATERIAL] = (d) => {\n  return IfcRelAssociatesMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTS] = (d) => {\n  return IfcRelConnects.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSELEMENTS] = (d) => {\n  return IfcRelConnectsElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPATHELEMENTS] = (d) => {\n  return IfcRelConnectsPathElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTTOELEMENT] = (d) => {\n  return IfcRelConnectsPortToElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTS] = (d) => {\n  return IfcRelConnectsPorts.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALACTIVITY] = (d) => {\n  return IfcRelConnectsStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALMEMBER] = (d) => {\n  return IfcRelConnectsStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHECCENTRICITY] = (d) => {\n  return IfcRelConnectsWithEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHREALIZINGELEMENTS] = (d) => {\n  return IfcRelConnectsWithRealizingElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONTAINEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelContainedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSBLDGELEMENTS] = (d) => {\n  return IfcRelCoversBldgElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSSPACES] = (d) => {\n  return IfcRelCoversSpaces.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECLARES] = (d) => {\n  return IfcRelDeclares.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECOMPOSES] = (d) => {\n  return IfcRelDecomposes.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINES] = (d) => {\n  return IfcRelDefines.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYOBJECT] = (d) => {\n  return IfcRelDefinesByObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYPROPERTIES] = (d) => {\n  return IfcRelDefinesByProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTEMPLATE] = (d) => {\n  return IfcRelDefinesByTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTYPE] = (d) => {\n  return IfcRelDefinesByType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFILLSELEMENT] = (d) => {\n  return IfcRelFillsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFLOWCONTROLELEMENTS] = (d) => {\n  return IfcRelFlowControlElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELINTERFERESELEMENTS] = (d) => {\n  return IfcRelInterferesElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELNESTS] = (d) => {\n  return IfcRelNests.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPOSITIONS] = (d) => {\n  return IfcRelPositions.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPROJECTSELEMENT] = (d) => {\n  return IfcRelProjectsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELREFERENCEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelReferencedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSEQUENCE] = (d) => {\n  return IfcRelSequence.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSERVICESBUILDINGS] = (d) => {\n  return IfcRelServicesBuildings.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY] = (d) => {\n  return IfcRelSpaceBoundary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY1STLEVEL] = (d) => {\n  return IfcRelSpaceBoundary1stLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY2NDLEVEL] = (d) => {\n  return IfcRelSpaceBoundary2ndLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELVOIDSELEMENT] = (d) => {\n  return IfcRelVoidsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELATIONSHIP] = (d) => {\n  return IfcRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPARAMETRISEDCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcReparametrisedCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATION] = (d) => {\n  return IfcRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONCONTEXT] = (d) => {\n  return IfcRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONITEM] = (d) => {\n  return IfcRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONMAP] = (d) => {\n  return IfcRepresentationMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCE] = (d) => {\n  return IfcResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCEAPPROVALRELATIONSHIP] = (d) => {\n  return IfcResourceApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCECONSTRAINTRELATIONSHIP] = (d) => {\n  return IfcResourceConstraintRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCELEVELRELATIONSHIP] = (d) => {\n  return IfcResourceLevelRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCETIME] = (d) => {\n  return IfcResourceTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLID] = (d) => {\n  return IfcRevolvedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLIDTAPERED] = (d) => {\n  return IfcRevolvedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCONE] = (d) => {\n  return IfcRightCircularCone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCYLINDER] = (d) => {\n  return IfcRightCircularCylinder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOF] = (d) => {\n  return IfcRoof.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOFTYPE] = (d) => {\n  return IfcRoofType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOT] = (d) => {\n  return IfcRoot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROUNDEDRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRoundedRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIUNIT] = (d) => {\n  return IfcSIUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINAL] = (d) => {\n  return IfcSanitaryTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINALTYPE] = (d) => {\n  return IfcSanitaryTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSCHEDULINGTIME] = (d) => {\n  return IfcSchedulingTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSEAMCURVE] = (d) => {\n  return IfcSeamCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONPROPERTIES] = (d) => {\n  return IfcSectionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONREINFORCEMENTPROPERTIES] = (d) => {\n  return IfcSectionReinforcementProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLID] = (d) => {\n  return IfcSectionedSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLIDHORIZONTAL] = (d) => {\n  return IfcSectionedSolidHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSPINE] = (d) => {\n  return IfcSectionedSpine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSOR] = (d) => {\n  return IfcSensor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSORTYPE] = (d) => {\n  return IfcSensorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICE] = (d) => {\n  return IfcShadingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICETYPE] = (d) => {\n  return IfcShadingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEASPECT] = (d) => {\n  return IfcShapeAspect.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEMODEL] = (d) => {\n  return IfcShapeModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEREPRESENTATION] = (d) => {\n  return IfcShapeRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHELLBASEDSURFACEMODEL] = (d) => {\n  return IfcShellBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTY] = (d) => {\n  return IfcSimpleProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTYTEMPLATE] = (d) => {\n  return IfcSimplePropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSITE] = (d) => {\n  return IfcSite.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLAB] = (d) => {\n  return IfcSlab.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABELEMENTEDCASE] = (d) => {\n  return IfcSlabElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABSTANDARDCASE] = (d) => {\n  return IfcSlabStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABTYPE] = (d) => {\n  return IfcSlabType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLIPPAGECONNECTIONCONDITION] = (d) => {\n  return IfcSlippageConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICE] = (d) => {\n  return IfcSolarDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICETYPE] = (d) => {\n  return IfcSolarDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLIDMODEL] = (d) => {\n  return IfcSolidModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACE] = (d) => {\n  return IfcSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATER] = (d) => {\n  return IfcSpaceHeater.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATERTYPE] = (d) => {\n  return IfcSpaceHeaterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACETYPE] = (d) => {\n  return IfcSpaceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENT] = (d) => {\n  return IfcSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENTTYPE] = (d) => {\n  return IfcSpatialElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENTTYPE] = (d) => {\n  return IfcSpatialStructureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONE] = (d) => {\n  return IfcSpatialZone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONETYPE] = (d) => {\n  return IfcSpatialZoneType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERE] = (d) => {\n  return IfcSphere.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERICALSURFACE] = (d) => {\n  return IfcSphericalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINAL] = (d) => {\n  return IfcStackTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINALTYPE] = (d) => {\n  return IfcStackTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIR] = (d) => {\n  return IfcStair.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHT] = (d) => {\n  return IfcStairFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHTTYPE] = (d) => {\n  return IfcStairFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRTYPE] = (d) => {\n  return IfcStairType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTION] = (d) => {\n  return IfcStructuralAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTIVITY] = (d) => {\n  return IfcStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALANALYSISMODEL] = (d) => {\n  return IfcStructuralAnalysisModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTION] = (d) => {\n  return IfcStructuralConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTIONCONDITION] = (d) => {\n  return IfcStructuralConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEACTION] = (d) => {\n  return IfcStructuralCurveAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVECONNECTION] = (d) => {\n  return IfcStructuralCurveConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBER] = (d) => {\n  return IfcStructuralCurveMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBERVARYING] = (d) => {\n  return IfcStructuralCurveMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEREACTION] = (d) => {\n  return IfcStructuralCurveReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALITEM] = (d) => {\n  return IfcStructuralItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLINEARACTION] = (d) => {\n  return IfcStructuralLinearAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOAD] = (d) => {\n  return IfcStructuralLoad.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCASE] = (d) => {\n  return IfcStructuralLoadCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCONFIGURATION] = (d) => {\n  return IfcStructuralLoadConfiguration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADGROUP] = (d) => {\n  return IfcStructuralLoadGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADLINEARFORCE] = (d) => {\n  return IfcStructuralLoadLinearForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADORRESULT] = (d) => {\n  return IfcStructuralLoadOrResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADPLANARFORCE] = (d) => {\n  return IfcStructuralLoadPlanarForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENT] = (d) => {\n  return IfcStructuralLoadSingleDisplacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION] = (d) => {\n  return IfcStructuralLoadSingleDisplacementDistortion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCE] = (d) => {\n  return IfcStructuralLoadSingleForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCEWARPING] = (d) => {\n  return IfcStructuralLoadSingleForceWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSTATIC] = (d) => {\n  return IfcStructuralLoadStatic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADTEMPERATURE] = (d) => {\n  return IfcStructuralLoadTemperature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALMEMBER] = (d) => {\n  return IfcStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPLANARACTION] = (d) => {\n  return IfcStructuralPlanarAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTACTION] = (d) => {\n  return IfcStructuralPointAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTCONNECTION] = (d) => {\n  return IfcStructuralPointConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTREACTION] = (d) => {\n  return IfcStructuralPointReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALREACTION] = (d) => {\n  return IfcStructuralReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALRESULTGROUP] = (d) => {\n  return IfcStructuralResultGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEACTION] = (d) => {\n  return IfcStructuralSurfaceAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACECONNECTION] = (d) => {\n  return IfcStructuralSurfaceConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBER] = (d) => {\n  return IfcStructuralSurfaceMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBERVARYING] = (d) => {\n  return IfcStructuralSurfaceMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEREACTION] = (d) => {\n  return IfcStructuralSurfaceReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEMODEL] = (d) => {\n  return IfcStyleModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDITEM] = (d) => {\n  return IfcStyledItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDREPRESENTATION] = (d) => {\n  return IfcStyledRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCE] = (d) => {\n  return IfcSubContractResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCETYPE] = (d) => {\n  return IfcSubContractResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBEDGE] = (d) => {\n  return IfcSubedge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACE] = (d) => {\n  return IfcSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVE] = (d) => {\n  return IfcSurfaceCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVESWEPTAREASOLID] = (d) => {\n  return IfcSurfaceCurveSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEFEATURE] = (d) => {\n  return IfcSurfaceFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFLINEAREXTRUSION] = (d) => {\n  return IfcSurfaceOfLinearExtrusion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFREVOLUTION] = (d) => {\n  return IfcSurfaceOfRevolution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEREINFORCEMENTAREA] = (d) => {\n  return IfcSurfaceReinforcementArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLE] = (d) => {\n  return IfcSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLELIGHTING] = (d) => {\n  return IfcSurfaceStyleLighting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEREFRACTION] = (d) => {\n  return IfcSurfaceStyleRefraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLERENDERING] = (d) => {\n  return IfcSurfaceStyleRendering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLESHADING] = (d) => {\n  return IfcSurfaceStyleShading.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEWITHTEXTURES] = (d) => {\n  return IfcSurfaceStyleWithTextures.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACETEXTURE] = (d) => {\n  return IfcSurfaceTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTAREASOLID] = (d) => {\n  return IfcSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLID] = (d) => {\n  return IfcSweptDiskSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLIDPOLYGONAL] = (d) => {\n  return IfcSweptDiskSolidPolygonal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTSURFACE] = (d) => {\n  return IfcSweptSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICE] = (d) => {\n  return IfcSwitchingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICETYPE] = (d) => {\n  return IfcSwitchingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEM] = (d) => {\n  return IfcSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENT] = (d) => {\n  return IfcSystemFurnitureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENTTYPE] = (d) => {\n  return IfcSystemFurnitureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTSHAPEPROFILEDEF] = (d) => {\n  return IfcTShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLE] = (d) => {\n  return IfcTable.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLECOLUMN] = (d) => {\n  return IfcTableColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLEROW] = (d) => {\n  return IfcTableRow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANK] = (d) => {\n  return IfcTank.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANKTYPE] = (d) => {\n  return IfcTankType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASK] = (d) => {\n  return IfcTask.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIME] = (d) => {\n  return IfcTaskTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIMERECURRING] = (d) => {\n  return IfcTaskTimeRecurring.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTYPE] = (d) => {\n  return IfcTaskType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTELECOMADDRESS] = (d) => {\n  return IfcTelecomAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDON] = (d) => {\n  return IfcTendon.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHOR] = (d) => {\n  return IfcTendonAnchor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHORTYPE] = (d) => {\n  return IfcTendonAnchorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUIT] = (d) => {\n  return IfcTendonConduit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUITTYPE] = (d) => {\n  return IfcTendonConduitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONTYPE] = (d) => {\n  return IfcTendonType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDFACESET] = (d) => {\n  return IfcTessellatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDITEM] = (d) => {\n  return IfcTessellatedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERAL] = (d) => {\n  return IfcTextLiteral.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERALWITHEXTENT] = (d) => {\n  return IfcTextLiteralWithExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLE] = (d) => {\n  return IfcTextStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFONTMODEL] = (d) => {\n  return IfcTextStyleFontModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFORDEFINEDFONT] = (d) => {\n  return IfcTextStyleForDefinedFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLETEXTMODEL] = (d) => {\n  return IfcTextStyleTextModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATE] = (d) => {\n  return IfcTextureCoordinate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATEGENERATOR] = (d) => {\n  return IfcTextureCoordinateGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREMAP] = (d) => {\n  return IfcTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEX] = (d) => {\n  return IfcTextureVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEXLIST] = (d) => {\n  return IfcTextureVertexList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMEPERIOD] = (d) => {\n  return IfcTimePeriod.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIES] = (d) => {\n  return IfcTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIESVALUE] = (d) => {\n  return IfcTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGICALREPRESENTATIONITEM] = (d) => {\n  return IfcTopologicalRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGYREPRESENTATION] = (d) => {\n  return IfcTopologyRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOROIDALSURFACE] = (d) => {\n  return IfcToroidalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMER] = (d) => {\n  return IfcTransformer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMERTYPE] = (d) => {\n  return IfcTransformerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSITIONCURVESEGMENT2D] = (d) => {\n  return IfcTransitionCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENT] = (d) => {\n  return IfcTransportElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENTTYPE] = (d) => {\n  return IfcTransportElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRAPEZIUMPROFILEDEF] = (d) => {\n  return IfcTrapeziumProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDFACESET] = (d) => {\n  return IfcTriangulatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDIRREGULARNETWORK] = (d) => {\n  return IfcTriangulatedIrregularNetwork.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIMMEDCURVE] = (d) => {\n  return IfcTrimmedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLE] = (d) => {\n  return IfcTubeBundle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLETYPE] = (d) => {\n  return IfcTubeBundleType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEOBJECT] = (d) => {\n  return IfcTypeObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPROCESS] = (d) => {\n  return IfcTypeProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPRODUCT] = (d) => {\n  return IfcTypeProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPERESOURCE] = (d) => {\n  return IfcTypeResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUSHAPEPROFILEDEF] = (d) => {\n  return IfcUShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITASSIGNMENT] = (d) => {\n  return IfcUnitAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENT] = (d) => {\n  return IfcUnitaryControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENTTYPE] = (d) => {\n  return IfcUnitaryControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENT] = (d) => {\n  return IfcUnitaryEquipment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENTTYPE] = (d) => {\n  return IfcUnitaryEquipmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVE] = (d) => {\n  return IfcValve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVETYPE] = (d) => {\n  return IfcValveType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVECTOR] = (d) => {\n  return IfcVector.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEX] = (d) => {\n  return IfcVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXLOOP] = (d) => {\n  return IfcVertexLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXPOINT] = (d) => {\n  return IfcVertexPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPER] = (d) => {\n  return IfcVibrationDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPERTYPE] = (d) => {\n  return IfcVibrationDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATOR] = (d) => {\n  return IfcVibrationIsolator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATORTYPE] = (d) => {\n  return IfcVibrationIsolatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALELEMENT] = (d) => {\n  return IfcVirtualElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALGRIDINTERSECTION] = (d) => {\n  return IfcVirtualGridIntersection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVOIDINGFEATURE] = (d) => {\n  return IfcVoidingFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALL] = (d) => {\n  return IfcWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLELEMENTEDCASE] = (d) => {\n  return IfcWallElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLSTANDARDCASE] = (d) => {\n  return IfcWallStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLTYPE] = (d) => {\n  return IfcWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINAL] = (d) => {\n  return IfcWasteTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINALTYPE] = (d) => {\n  return IfcWasteTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOW] = (d) => {\n  return IfcWindow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWLININGPROPERTIES] = (d) => {\n  return IfcWindowLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWPANELPROPERTIES] = (d) => {\n  return IfcWindowPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTANDARDCASE] = (d) => {\n  return IfcWindowStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTYLE] = (d) => {\n  return IfcWindowStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWTYPE] = (d) => {\n  return IfcWindowType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCALENDAR] = (d) => {\n  return IfcWorkCalendar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCONTROL] = (d) => {\n  return IfcWorkControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKPLAN] = (d) => {\n  return IfcWorkPlan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKSCHEDULE] = (d) => {\n  return IfcWorkSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKTIME] = (d) => {\n  return IfcWorkTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZSHAPEPROFILEDEF] = (d) => {\n  return IfcZShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZONE] = (d) => {\n  return IfcZone.FromTape(d.ID, d.type, d.arguments);\n};\nvar Handle = class {\n  constructor(id) {\n    this.value = id;\n  }\n  toTape(args) {\n    args.push({ type: 5, value: this.value });\n  }\n};\nfunction Value(type, value) {\n  return { t: type, v: value };\n}\nvar IfcAbsorbedDoseMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAccelerationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAmountOfSubstanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAngularVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBinary = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoolean = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoxAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCardinalPointReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcContextDependentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCountMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCurvatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDate = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDateTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInMonthNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInWeekNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDescriptiveMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDimensionCount = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDoseEquivalentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDuration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDynamicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCapacitanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricChargeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricConductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCurrentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricVoltageMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcEnergyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontVariant = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontWeight = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcGloballyUniqueId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatingValueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIdentifier = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIlluminanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIntegerCountRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIonConcentrationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIsothermalMoistureCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcKinematicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLabel = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLanguageId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLogical = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityDistributionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassPerLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfElasticityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfLinearSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfRotationalSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMoistureDiffusivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMolecularWeightMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMomentOfInertiaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonetaryMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonthInYearNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNonNegativeLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNormalisedRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNumericMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPHMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcParameterValue = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlanarForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositivePlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPresentableText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRadioActivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcReal = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionalAreaIntegralMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcShearModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSolidAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecificHeatCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularExponent = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularRoughness = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureGradientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureRateOfChangeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextDecoration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextFontName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextTransformation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalAdmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalConductivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalExpansionCoefficientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalTransmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermodynamicTemperatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeStamp = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTorqueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcURIReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVaporPermeabilityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumetricFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingConstantMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcActionRequestTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionRequestTypeEnum.EMAIL = \"EMAIL\";\nIfcActionRequestTypeEnum.FAX = \"FAX\";\nIfcActionRequestTypeEnum.PHONE = \"PHONE\";\nIfcActionRequestTypeEnum.POST = \"POST\";\nIfcActionRequestTypeEnum.VERBAL = \"VERBAL\";\nIfcActionRequestTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionRequestTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionSourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionSourceTypeEnum.DEAD_LOAD_G = \"DEAD_LOAD_G\";\nIfcActionSourceTypeEnum.COMPLETION_G1 = \"COMPLETION_G1\";\nIfcActionSourceTypeEnum.LIVE_LOAD_Q = \"LIVE_LOAD_Q\";\nIfcActionSourceTypeEnum.SNOW_S = \"SNOW_S\";\nIfcActionSourceTypeEnum.WIND_W = \"WIND_W\";\nIfcActionSourceTypeEnum.PRESTRESSING_P = \"PRESTRESSING_P\";\nIfcActionSourceTypeEnum.SETTLEMENT_U = \"SETTLEMENT_U\";\nIfcActionSourceTypeEnum.TEMPERATURE_T = \"TEMPERATURE_T\";\nIfcActionSourceTypeEnum.EARTHQUAKE_E = \"EARTHQUAKE_E\";\nIfcActionSourceTypeEnum.FIRE = \"FIRE\";\nIfcActionSourceTypeEnum.IMPULSE = \"IMPULSE\";\nIfcActionSourceTypeEnum.IMPACT = \"IMPACT\";\nIfcActionSourceTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcActionSourceTypeEnum.ERECTION = \"ERECTION\";\nIfcActionSourceTypeEnum.PROPPING = \"PROPPING\";\nIfcActionSourceTypeEnum.SYSTEM_IMPERFECTION = \"SYSTEM_IMPERFECTION\";\nIfcActionSourceTypeEnum.SHRINKAGE = \"SHRINKAGE\";\nIfcActionSourceTypeEnum.CREEP = \"CREEP\";\nIfcActionSourceTypeEnum.LACK_OF_FIT = \"LACK_OF_FIT\";\nIfcActionSourceTypeEnum.BUOYANCY = \"BUOYANCY\";\nIfcActionSourceTypeEnum.ICE = \"ICE\";\nIfcActionSourceTypeEnum.CURRENT = \"CURRENT\";\nIfcActionSourceTypeEnum.WAVE = \"WAVE\";\nIfcActionSourceTypeEnum.RAIN = \"RAIN\";\nIfcActionSourceTypeEnum.BRAKES = \"BRAKES\";\nIfcActionSourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionSourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionTypeEnum.PERMANENT_G = \"PERMANENT_G\";\nIfcActionTypeEnum.VARIABLE_Q = \"VARIABLE_Q\";\nIfcActionTypeEnum.EXTRAORDINARY_A = \"EXTRAORDINARY_A\";\nIfcActionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActuatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActuatorTypeEnum.ELECTRICACTUATOR = \"ELECTRICACTUATOR\";\nIfcActuatorTypeEnum.HANDOPERATEDACTUATOR = \"HANDOPERATEDACTUATOR\";\nIfcActuatorTypeEnum.HYDRAULICACTUATOR = \"HYDRAULICACTUATOR\";\nIfcActuatorTypeEnum.PNEUMATICACTUATOR = \"PNEUMATICACTUATOR\";\nIfcActuatorTypeEnum.THERMOSTATICACTUATOR = \"THERMOSTATICACTUATOR\";\nIfcActuatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActuatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAddressTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAddressTypeEnum.OFFICE = \"OFFICE\";\nIfcAddressTypeEnum.SITE = \"SITE\";\nIfcAddressTypeEnum.HOME = \"HOME\";\nIfcAddressTypeEnum.DISTRIBUTIONPOINT = \"DISTRIBUTIONPOINT\";\nIfcAddressTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcAirTerminalBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalBoxTypeEnum.CONSTANTFLOW = \"CONSTANTFLOW\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREDEPENDANT = \"VARIABLEFLOWPRESSUREDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREINDEPENDANT = \"VARIABLEFLOWPRESSUREINDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalTypeEnum.DIFFUSER = \"DIFFUSER\";\nIfcAirTerminalTypeEnum.GRILLE = \"GRILLE\";\nIfcAirTerminalTypeEnum.LOUVRE = \"LOUVRE\";\nIfcAirTerminalTypeEnum.REGISTER = \"REGISTER\";\nIfcAirTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirToAirHeatRecoveryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECOUNTERFLOWEXCHANGER = \"FIXEDPLATECOUNTERFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECROSSFLOWEXCHANGER = \"FIXEDPLATECROSSFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATEPARALLELFLOWEXCHANGER = \"FIXEDPLATEPARALLELFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.ROTARYWHEEL = \"ROTARYWHEEL\";\nIfcAirToAirHeatRecoveryTypeEnum.RUNAROUNDCOILLOOP = \"RUNAROUNDCOILLOOP\";\nIfcAirToAirHeatRecoveryTypeEnum.HEATPIPE = \"HEATPIPE\";\nIfcAirToAirHeatRecoveryTypeEnum.TWINTOWERENTHALPYRECOVERYLOOPS = \"TWINTOWERENTHALPYRECOVERYLOOPS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONSEALEDTUBEHEATEXCHANGERS = \"THERMOSIPHONSEALEDTUBEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONCOILTYPEHEATEXCHANGERS = \"THERMOSIPHONCOILTYPEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirToAirHeatRecoveryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlarmTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlarmTypeEnum.BELL = \"BELL\";\nIfcAlarmTypeEnum.BREAKGLASSBUTTON = \"BREAKGLASSBUTTON\";\nIfcAlarmTypeEnum.LIGHT = \"LIGHT\";\nIfcAlarmTypeEnum.MANUALPULLBOX = \"MANUALPULLBOX\";\nIfcAlarmTypeEnum.SIREN = \"SIREN\";\nIfcAlarmTypeEnum.WHISTLE = \"WHISTLE\";\nIfcAlarmTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlarmTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlignmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlignmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlignmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisModelTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisModelTypeEnum.IN_PLANE_LOADING_2D = \"IN_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.OUT_PLANE_LOADING_2D = \"OUT_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.LOADING_3D = \"LOADING_3D\";\nIfcAnalysisModelTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisModelTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisTheoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisTheoryTypeEnum.FIRST_ORDER_THEORY = \"FIRST_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.SECOND_ORDER_THEORY = \"SECOND_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.THIRD_ORDER_THEORY = \"THIRD_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.FULL_NONLINEAR_THEORY = \"FULL_NONLINEAR_THEORY\";\nIfcAnalysisTheoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisTheoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcArithmeticOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcArithmeticOperatorEnum.ADD = \"ADD\";\nIfcArithmeticOperatorEnum.DIVIDE = \"DIVIDE\";\nIfcArithmeticOperatorEnum.MULTIPLY = \"MULTIPLY\";\nIfcArithmeticOperatorEnum.SUBTRACT = \"SUBTRACT\";\nvar IfcAssemblyPlaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAssemblyPlaceEnum.SITE = \"SITE\";\nIfcAssemblyPlaceEnum.FACTORY = \"FACTORY\";\nIfcAssemblyPlaceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAudioVisualApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAudioVisualApplianceTypeEnum.AMPLIFIER = \"AMPLIFIER\";\nIfcAudioVisualApplianceTypeEnum.CAMERA = \"CAMERA\";\nIfcAudioVisualApplianceTypeEnum.DISPLAY = \"DISPLAY\";\nIfcAudioVisualApplianceTypeEnum.MICROPHONE = \"MICROPHONE\";\nIfcAudioVisualApplianceTypeEnum.PLAYER = \"PLAYER\";\nIfcAudioVisualApplianceTypeEnum.PROJECTOR = \"PROJECTOR\";\nIfcAudioVisualApplianceTypeEnum.RECEIVER = \"RECEIVER\";\nIfcAudioVisualApplianceTypeEnum.SPEAKER = \"SPEAKER\";\nIfcAudioVisualApplianceTypeEnum.SWITCHER = \"SWITCHER\";\nIfcAudioVisualApplianceTypeEnum.TELEPHONE = \"TELEPHONE\";\nIfcAudioVisualApplianceTypeEnum.TUNER = \"TUNER\";\nIfcAudioVisualApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAudioVisualApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBSplineCurveForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineCurveForm.POLYLINE_FORM = \"POLYLINE_FORM\";\nIfcBSplineCurveForm.CIRCULAR_ARC = \"CIRCULAR_ARC\";\nIfcBSplineCurveForm.ELLIPTIC_ARC = \"ELLIPTIC_ARC\";\nIfcBSplineCurveForm.PARABOLIC_ARC = \"PARABOLIC_ARC\";\nIfcBSplineCurveForm.HYPERBOLIC_ARC = \"HYPERBOLIC_ARC\";\nIfcBSplineCurveForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBSplineSurfaceForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineSurfaceForm.PLANE_SURF = \"PLANE_SURF\";\nIfcBSplineSurfaceForm.CYLINDRICAL_SURF = \"CYLINDRICAL_SURF\";\nIfcBSplineSurfaceForm.CONICAL_SURF = \"CONICAL_SURF\";\nIfcBSplineSurfaceForm.SPHERICAL_SURF = \"SPHERICAL_SURF\";\nIfcBSplineSurfaceForm.TOROIDAL_SURF = \"TOROIDAL_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_REVOLUTION = \"SURF_OF_REVOLUTION\";\nIfcBSplineSurfaceForm.RULED_SURF = \"RULED_SURF\";\nIfcBSplineSurfaceForm.GENERALISED_CONE = \"GENERALISED_CONE\";\nIfcBSplineSurfaceForm.QUADRIC_SURF = \"QUADRIC_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_LINEAR_EXTRUSION = \"SURF_OF_LINEAR_EXTRUSION\";\nIfcBSplineSurfaceForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBeamTypeEnum.BEAM = \"BEAM\";\nIfcBeamTypeEnum.JOIST = \"JOIST\";\nIfcBeamTypeEnum.HOLLOWCORE = \"HOLLOWCORE\";\nIfcBeamTypeEnum.LINTEL = \"LINTEL\";\nIfcBeamTypeEnum.SPANDREL = \"SPANDREL\";\nIfcBeamTypeEnum.T_BEAM = \"T_BEAM\";\nIfcBeamTypeEnum.GIRDER_SEGMENT = \"GIRDER_SEGMENT\";\nIfcBeamTypeEnum.DIAPHRAGM = \"DIAPHRAGM\";\nIfcBeamTypeEnum.PIERCAP = \"PIERCAP\";\nIfcBeamTypeEnum.HATSTONE = \"HATSTONE\";\nIfcBeamTypeEnum.CORNICE = \"CORNICE\";\nIfcBeamTypeEnum.EDGEBEAM = \"EDGEBEAM\";\nIfcBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeDisplacementEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeDisplacementEnum.FIXED_MOVEMENT = \"FIXED_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.GUIDED_LONGITUDINAL = \"GUIDED_LONGITUDINAL\";\nIfcBearingTypeDisplacementEnum.GUIDED_TRANSVERSAL = \"GUIDED_TRANSVERSAL\";\nIfcBearingTypeDisplacementEnum.FREE_MOVEMENT = \"FREE_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeEnum.CYLINDRICAL = \"CYLINDRICAL\";\nIfcBearingTypeEnum.SPHERICAL = \"SPHERICAL\";\nIfcBearingTypeEnum.ELASTOMERIC = \"ELASTOMERIC\";\nIfcBearingTypeEnum.POT = \"POT\";\nIfcBearingTypeEnum.GUIDE = \"GUIDE\";\nIfcBearingTypeEnum.ROCKER = \"ROCKER\";\nIfcBearingTypeEnum.ROLLER = \"ROLLER\";\nIfcBearingTypeEnum.DISK = \"DISK\";\nIfcBearingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBearingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBenchmarkEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBenchmarkEnum.GREATERTHAN = \"GREATERTHAN\";\nIfcBenchmarkEnum.GREATERTHANOREQUALTO = \"GREATERTHANOREQUALTO\";\nIfcBenchmarkEnum.LESSTHAN = \"LESSTHAN\";\nIfcBenchmarkEnum.LESSTHANOREQUALTO = \"LESSTHANOREQUALTO\";\nIfcBenchmarkEnum.EQUALTO = \"EQUALTO\";\nIfcBenchmarkEnum.NOTEQUALTO = \"NOTEQUALTO\";\nIfcBenchmarkEnum.INCLUDES = \"INCLUDES\";\nIfcBenchmarkEnum.NOTINCLUDES = \"NOTINCLUDES\";\nIfcBenchmarkEnum.INCLUDEDIN = \"INCLUDEDIN\";\nIfcBenchmarkEnum.NOTINCLUDEDIN = \"NOTINCLUDEDIN\";\nvar IfcBoilerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBoilerTypeEnum.WATER = \"WATER\";\nIfcBoilerTypeEnum.STEAM = \"STEAM\";\nIfcBoilerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBoilerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBooleanOperator = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBooleanOperator.UNION = \"UNION\";\nIfcBooleanOperator.INTERSECTION = \"INTERSECTION\";\nIfcBooleanOperator.DIFFERENCE = \"DIFFERENCE\";\nvar IfcBridgePartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgePartTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcBridgePartTypeEnum.DECK = \"DECK\";\nIfcBridgePartTypeEnum.DECK_SEGMENT = \"DECK_SEGMENT\";\nIfcBridgePartTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBridgePartTypeEnum.PIER = \"PIER\";\nIfcBridgePartTypeEnum.PIER_SEGMENT = \"PIER_SEGMENT\";\nIfcBridgePartTypeEnum.PYLON = \"PYLON\";\nIfcBridgePartTypeEnum.SUBSTRUCTURE = \"SUBSTRUCTURE\";\nIfcBridgePartTypeEnum.SUPERSTRUCTURE = \"SUPERSTRUCTURE\";\nIfcBridgePartTypeEnum.SURFACESTRUCTURE = \"SURFACESTRUCTURE\";\nIfcBridgePartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgePartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBridgeTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgeTypeEnum.ARCHED = \"ARCHED\";\nIfcBridgeTypeEnum.CABLE_STAYED = \"CABLE_STAYED\";\nIfcBridgeTypeEnum.CANTILEVER = \"CANTILEVER\";\nIfcBridgeTypeEnum.CULVERT = \"CULVERT\";\nIfcBridgeTypeEnum.FRAMEWORK = \"FRAMEWORK\";\nIfcBridgeTypeEnum.GIRDER = \"GIRDER\";\nIfcBridgeTypeEnum.SUSPENSION = \"SUSPENSION\";\nIfcBridgeTypeEnum.TRUSS = \"TRUSS\";\nIfcBridgeTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgeTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementPartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementPartTypeEnum.INSULATION = \"INSULATION\";\nIfcBuildingElementPartTypeEnum.PRECASTPANEL = \"PRECASTPANEL\";\nIfcBuildingElementPartTypeEnum.APRON = \"APRON\";\nIfcBuildingElementPartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementPartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementProxyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementProxyTypeEnum.COMPLEX = \"COMPLEX\";\nIfcBuildingElementProxyTypeEnum.ELEMENT = \"ELEMENT\";\nIfcBuildingElementProxyTypeEnum.PARTIAL = \"PARTIAL\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORVOID = \"PROVISIONFORVOID\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORSPACE = \"PROVISIONFORSPACE\";\nIfcBuildingElementProxyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementProxyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingSystemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingSystemTypeEnum.FENESTRATION = \"FENESTRATION\";\nIfcBuildingSystemTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBuildingSystemTypeEnum.LOADBEARING = \"LOADBEARING\";\nIfcBuildingSystemTypeEnum.OUTERSHELL = \"OUTERSHELL\";\nIfcBuildingSystemTypeEnum.SHADING = \"SHADING\";\nIfcBuildingSystemTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcBuildingSystemTypeEnum.REINFORCING = \"REINFORCING\";\nIfcBuildingSystemTypeEnum.PRESTRESSING = \"PRESTRESSING\";\nIfcBuildingSystemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingSystemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBurnerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBurnerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBurnerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierFittingTypeEnum.BEND = \"BEND\";\nIfcCableCarrierFittingTypeEnum.CROSS = \"CROSS\";\nIfcCableCarrierFittingTypeEnum.REDUCER = \"REDUCER\";\nIfcCableCarrierFittingTypeEnum.TEE = \"TEE\";\nIfcCableCarrierFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierSegmentTypeEnum.CABLELADDERSEGMENT = \"CABLELADDERSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRAYSEGMENT = \"CABLETRAYSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRUNKINGSEGMENT = \"CABLETRUNKINGSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CONDUITSEGMENT = \"CONDUITSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcCableFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcCableFittingTypeEnum.EXIT = \"EXIT\";\nIfcCableFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcCableFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcCableFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableSegmentTypeEnum.BUSBARSEGMENT = \"BUSBARSEGMENT\";\nIfcCableSegmentTypeEnum.CABLESEGMENT = \"CABLESEGMENT\";\nIfcCableSegmentTypeEnum.CONDUCTORSEGMENT = \"CONDUCTORSEGMENT\";\nIfcCableSegmentTypeEnum.CORESEGMENT = \"CORESEGMENT\";\nIfcCableSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCaissonFoundationTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCaissonFoundationTypeEnum.WELL = \"WELL\";\nIfcCaissonFoundationTypeEnum.CAISSON = \"CAISSON\";\nIfcCaissonFoundationTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCaissonFoundationTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChangeActionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChangeActionEnum.NOCHANGE = \"NOCHANGE\";\nIfcChangeActionEnum.MODIFIED = \"MODIFIED\";\nIfcChangeActionEnum.ADDED = \"ADDED\";\nIfcChangeActionEnum.DELETED = \"DELETED\";\nIfcChangeActionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChillerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChillerTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcChillerTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcChillerTypeEnum.HEATRECOVERY = \"HEATRECOVERY\";\nIfcChillerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChillerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChimneyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChimneyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChimneyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoilTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoilTypeEnum.DXCOOLINGCOIL = \"DXCOOLINGCOIL\";\nIfcCoilTypeEnum.ELECTRICHEATINGCOIL = \"ELECTRICHEATINGCOIL\";\nIfcCoilTypeEnum.GASHEATINGCOIL = \"GASHEATINGCOIL\";\nIfcCoilTypeEnum.HYDRONICCOIL = \"HYDRONICCOIL\";\nIfcCoilTypeEnum.STEAMHEATINGCOIL = \"STEAMHEATINGCOIL\";\nIfcCoilTypeEnum.WATERCOOLINGCOIL = \"WATERCOOLINGCOIL\";\nIfcCoilTypeEnum.WATERHEATINGCOIL = \"WATERHEATINGCOIL\";\nIfcCoilTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoilTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcColumnTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcColumnTypeEnum.COLUMN = \"COLUMN\";\nIfcColumnTypeEnum.PILASTER = \"PILASTER\";\nIfcColumnTypeEnum.PIERSTEM = \"PIERSTEM\";\nIfcColumnTypeEnum.PIERSTEM_SEGMENT = \"PIERSTEM_SEGMENT\";\nIfcColumnTypeEnum.STANDCOLUMN = \"STANDCOLUMN\";\nIfcColumnTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcColumnTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCommunicationsApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCommunicationsApplianceTypeEnum.ANTENNA = \"ANTENNA\";\nIfcCommunicationsApplianceTypeEnum.COMPUTER = \"COMPUTER\";\nIfcCommunicationsApplianceTypeEnum.FAX = \"FAX\";\nIfcCommunicationsApplianceTypeEnum.GATEWAY = \"GATEWAY\";\nIfcCommunicationsApplianceTypeEnum.MODEM = \"MODEM\";\nIfcCommunicationsApplianceTypeEnum.NETWORKAPPLIANCE = \"NETWORKAPPLIANCE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKBRIDGE = \"NETWORKBRIDGE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKHUB = \"NETWORKHUB\";\nIfcCommunicationsApplianceTypeEnum.PRINTER = \"PRINTER\";\nIfcCommunicationsApplianceTypeEnum.REPEATER = \"REPEATER\";\nIfcCommunicationsApplianceTypeEnum.ROUTER = \"ROUTER\";\nIfcCommunicationsApplianceTypeEnum.SCANNER = \"SCANNER\";\nIfcCommunicationsApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCommunicationsApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcComplexPropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcComplexPropertyTemplateTypeEnum.P_COMPLEX = \"P_COMPLEX\";\nIfcComplexPropertyTemplateTypeEnum.Q_COMPLEX = \"Q_COMPLEX\";\nvar IfcCompressorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCompressorTypeEnum.DYNAMIC = \"DYNAMIC\";\nIfcCompressorTypeEnum.RECIPROCATING = \"RECIPROCATING\";\nIfcCompressorTypeEnum.ROTARY = \"ROTARY\";\nIfcCompressorTypeEnum.SCROLL = \"SCROLL\";\nIfcCompressorTypeEnum.TROCHOIDAL = \"TROCHOIDAL\";\nIfcCompressorTypeEnum.SINGLESTAGE = \"SINGLESTAGE\";\nIfcCompressorTypeEnum.BOOSTER = \"BOOSTER\";\nIfcCompressorTypeEnum.OPENTYPE = \"OPENTYPE\";\nIfcCompressorTypeEnum.HERMETIC = \"HERMETIC\";\nIfcCompressorTypeEnum.SEMIHERMETIC = \"SEMIHERMETIC\";\nIfcCompressorTypeEnum.WELDEDSHELLHERMETIC = \"WELDEDSHELLHERMETIC\";\nIfcCompressorTypeEnum.ROLLINGPISTON = \"ROLLINGPISTON\";\nIfcCompressorTypeEnum.ROTARYVANE = \"ROTARYVANE\";\nIfcCompressorTypeEnum.SINGLESCREW = \"SINGLESCREW\";\nIfcCompressorTypeEnum.TWINSCREW = \"TWINSCREW\";\nIfcCompressorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCompressorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCondenserTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCondenserTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcCondenserTypeEnum.EVAPORATIVECOOLED = \"EVAPORATIVECOOLED\";\nIfcCondenserTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcCondenserTypeEnum.WATERCOOLEDBRAZEDPLATE = \"WATERCOOLEDBRAZEDPLATE\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLCOIL = \"WATERCOOLEDSHELLCOIL\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLTUBE = \"WATERCOOLEDSHELLTUBE\";\nIfcCondenserTypeEnum.WATERCOOLEDTUBEINTUBE = \"WATERCOOLEDTUBEINTUBE\";\nIfcCondenserTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCondenserTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConnectionTypeEnum.ATPATH = \"ATPATH\";\nIfcConnectionTypeEnum.ATSTART = \"ATSTART\";\nIfcConnectionTypeEnum.ATEND = \"ATEND\";\nIfcConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstraintEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstraintEnum.HARD = \"HARD\";\nIfcConstraintEnum.SOFT = \"SOFT\";\nIfcConstraintEnum.ADVISORY = \"ADVISORY\";\nIfcConstraintEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstraintEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionEquipmentResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionEquipmentResourceTypeEnum.DEMOLISHING = \"DEMOLISHING\";\nIfcConstructionEquipmentResourceTypeEnum.EARTHMOVING = \"EARTHMOVING\";\nIfcConstructionEquipmentResourceTypeEnum.ERECTING = \"ERECTING\";\nIfcConstructionEquipmentResourceTypeEnum.HEATING = \"HEATING\";\nIfcConstructionEquipmentResourceTypeEnum.LIGHTING = \"LIGHTING\";\nIfcConstructionEquipmentResourceTypeEnum.PAVING = \"PAVING\";\nIfcConstructionEquipmentResourceTypeEnum.PUMPING = \"PUMPING\";\nIfcConstructionEquipmentResourceTypeEnum.TRANSPORTING = \"TRANSPORTING\";\nIfcConstructionEquipmentResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionEquipmentResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionMaterialResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionMaterialResourceTypeEnum.AGGREGATES = \"AGGREGATES\";\nIfcConstructionMaterialResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcConstructionMaterialResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcConstructionMaterialResourceTypeEnum.FUEL = \"FUEL\";\nIfcConstructionMaterialResourceTypeEnum.GYPSUM = \"GYPSUM\";\nIfcConstructionMaterialResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcConstructionMaterialResourceTypeEnum.METAL = \"METAL\";\nIfcConstructionMaterialResourceTypeEnum.PLASTIC = \"PLASTIC\";\nIfcConstructionMaterialResourceTypeEnum.WOOD = \"WOOD\";\nIfcConstructionMaterialResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nIfcConstructionMaterialResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcConstructionProductResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionProductResourceTypeEnum.ASSEMBLY = \"ASSEMBLY\";\nIfcConstructionProductResourceTypeEnum.FORMWORK = \"FORMWORK\";\nIfcConstructionProductResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionProductResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcControllerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcControllerTypeEnum.FLOATING = \"FLOATING\";\nIfcControllerTypeEnum.PROGRAMMABLE = \"PROGRAMMABLE\";\nIfcControllerTypeEnum.PROPORTIONAL = \"PROPORTIONAL\";\nIfcControllerTypeEnum.MULTIPOSITION = \"MULTIPOSITION\";\nIfcControllerTypeEnum.TWOPOSITION = \"TWOPOSITION\";\nIfcControllerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcControllerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCooledBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCooledBeamTypeEnum.ACTIVE = \"ACTIVE\";\nIfcCooledBeamTypeEnum.PASSIVE = \"PASSIVE\";\nIfcCooledBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCooledBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoolingTowerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoolingTowerTypeEnum.NATURALDRAFT = \"NATURALDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALINDUCEDDRAFT = \"MECHANICALINDUCEDDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALFORCEDDRAFT = \"MECHANICALFORCEDDRAFT\";\nIfcCoolingTowerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoolingTowerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostItemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostItemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostItemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostScheduleTypeEnum.BUDGET = \"BUDGET\";\nIfcCostScheduleTypeEnum.COSTPLAN = \"COSTPLAN\";\nIfcCostScheduleTypeEnum.ESTIMATE = \"ESTIMATE\";\nIfcCostScheduleTypeEnum.TENDER = \"TENDER\";\nIfcCostScheduleTypeEnum.PRICEDBILLOFQUANTITIES = \"PRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.UNPRICEDBILLOFQUANTITIES = \"UNPRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.SCHEDULEOFRATES = \"SCHEDULEOFRATES\";\nIfcCostScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoveringTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoveringTypeEnum.CEILING = \"CEILING\";\nIfcCoveringTypeEnum.FLOORING = \"FLOORING\";\nIfcCoveringTypeEnum.CLADDING = \"CLADDING\";\nIfcCoveringTypeEnum.ROOFING = \"ROOFING\";\nIfcCoveringTypeEnum.MOLDING = \"MOLDING\";\nIfcCoveringTypeEnum.SKIRTINGBOARD = \"SKIRTINGBOARD\";\nIfcCoveringTypeEnum.INSULATION = \"INSULATION\";\nIfcCoveringTypeEnum.MEMBRANE = \"MEMBRANE\";\nIfcCoveringTypeEnum.SLEEVING = \"SLEEVING\";\nIfcCoveringTypeEnum.WRAPPING = \"WRAPPING\";\nIfcCoveringTypeEnum.COPING = \"COPING\";\nIfcCoveringTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoveringTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCrewResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCrewResourceTypeEnum.OFFICE = \"OFFICE\";\nIfcCrewResourceTypeEnum.SITE = \"SITE\";\nIfcCrewResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCrewResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurtainWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurtainWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCurtainWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurveInterpolationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurveInterpolationEnum.LINEAR = \"LINEAR\";\nIfcCurveInterpolationEnum.LOG_LINEAR = \"LOG_LINEAR\";\nIfcCurveInterpolationEnum.LOG_LOG = \"LOG_LOG\";\nIfcCurveInterpolationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDamperTypeEnum.BACKDRAFTDAMPER = \"BACKDRAFTDAMPER\";\nIfcDamperTypeEnum.BALANCINGDAMPER = \"BALANCINGDAMPER\";\nIfcDamperTypeEnum.BLASTDAMPER = \"BLASTDAMPER\";\nIfcDamperTypeEnum.CONTROLDAMPER = \"CONTROLDAMPER\";\nIfcDamperTypeEnum.FIREDAMPER = \"FIREDAMPER\";\nIfcDamperTypeEnum.FIRESMOKEDAMPER = \"FIRESMOKEDAMPER\";\nIfcDamperTypeEnum.FUMEHOODEXHAUST = \"FUMEHOODEXHAUST\";\nIfcDamperTypeEnum.GRAVITYDAMPER = \"GRAVITYDAMPER\";\nIfcDamperTypeEnum.GRAVITYRELIEFDAMPER = \"GRAVITYRELIEFDAMPER\";\nIfcDamperTypeEnum.RELIEFDAMPER = \"RELIEFDAMPER\";\nIfcDamperTypeEnum.SMOKEDAMPER = \"SMOKEDAMPER\";\nIfcDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDataOriginEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDataOriginEnum.MEASURED = \"MEASURED\";\nIfcDataOriginEnum.PREDICTED = \"PREDICTED\";\nIfcDataOriginEnum.SIMULATED = \"SIMULATED\";\nIfcDataOriginEnum.USERDEFINED = \"USERDEFINED\";\nIfcDataOriginEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDerivedUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDerivedUnitEnum.ANGULARVELOCITYUNIT = \"ANGULARVELOCITYUNIT\";\nIfcDerivedUnitEnum.AREADENSITYUNIT = \"AREADENSITYUNIT\";\nIfcDerivedUnitEnum.COMPOUNDPLANEANGLEUNIT = \"COMPOUNDPLANEANGLEUNIT\";\nIfcDerivedUnitEnum.DYNAMICVISCOSITYUNIT = \"DYNAMICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.HEATFLUXDENSITYUNIT = \"HEATFLUXDENSITYUNIT\";\nIfcDerivedUnitEnum.INTEGERCOUNTRATEUNIT = \"INTEGERCOUNTRATEUNIT\";\nIfcDerivedUnitEnum.ISOTHERMALMOISTURECAPACITYUNIT = \"ISOTHERMALMOISTURECAPACITYUNIT\";\nIfcDerivedUnitEnum.KINEMATICVISCOSITYUNIT = \"KINEMATICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.LINEARVELOCITYUNIT = \"LINEARVELOCITYUNIT\";\nIfcDerivedUnitEnum.MASSDENSITYUNIT = \"MASSDENSITYUNIT\";\nIfcDerivedUnitEnum.MASSFLOWRATEUNIT = \"MASSFLOWRATEUNIT\";\nIfcDerivedUnitEnum.MOISTUREDIFFUSIVITYUNIT = \"MOISTUREDIFFUSIVITYUNIT\";\nIfcDerivedUnitEnum.MOLECULARWEIGHTUNIT = \"MOLECULARWEIGHTUNIT\";\nIfcDerivedUnitEnum.SPECIFICHEATCAPACITYUNIT = \"SPECIFICHEATCAPACITYUNIT\";\nIfcDerivedUnitEnum.THERMALADMITTANCEUNIT = \"THERMALADMITTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALCONDUCTANCEUNIT = \"THERMALCONDUCTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALRESISTANCEUNIT = \"THERMALRESISTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALTRANSMITTANCEUNIT = \"THERMALTRANSMITTANCEUNIT\";\nIfcDerivedUnitEnum.VAPORPERMEABILITYUNIT = \"VAPORPERMEABILITYUNIT\";\nIfcDerivedUnitEnum.VOLUMETRICFLOWRATEUNIT = \"VOLUMETRICFLOWRATEUNIT\";\nIfcDerivedUnitEnum.ROTATIONALFREQUENCYUNIT = \"ROTATIONALFREQUENCYUNIT\";\nIfcDerivedUnitEnum.TORQUEUNIT = \"TORQUEUNIT\";\nIfcDerivedUnitEnum.MOMENTOFINERTIAUNIT = \"MOMENTOFINERTIAUNIT\";\nIfcDerivedUnitEnum.LINEARMOMENTUNIT = \"LINEARMOMENTUNIT\";\nIfcDerivedUnitEnum.LINEARFORCEUNIT = \"LINEARFORCEUNIT\";\nIfcDerivedUnitEnum.PLANARFORCEUNIT = \"PLANARFORCEUNIT\";\nIfcDerivedUnitEnum.MODULUSOFELASTICITYUNIT = \"MODULUSOFELASTICITYUNIT\";\nIfcDerivedUnitEnum.SHEARMODULUSUNIT = \"SHEARMODULUSUNIT\";\nIfcDerivedUnitEnum.LINEARSTIFFNESSUNIT = \"LINEARSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.ROTATIONALSTIFFNESSUNIT = \"ROTATIONALSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.MODULUSOFSUBGRADEREACTIONUNIT = \"MODULUSOFSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.ACCELERATIONUNIT = \"ACCELERATIONUNIT\";\nIfcDerivedUnitEnum.CURVATUREUNIT = \"CURVATUREUNIT\";\nIfcDerivedUnitEnum.HEATINGVALUEUNIT = \"HEATINGVALUEUNIT\";\nIfcDerivedUnitEnum.IONCONCENTRATIONUNIT = \"IONCONCENTRATIONUNIT\";\nIfcDerivedUnitEnum.LUMINOUSINTENSITYDISTRIBUTIONUNIT = \"LUMINOUSINTENSITYDISTRIBUTIONUNIT\";\nIfcDerivedUnitEnum.MASSPERLENGTHUNIT = \"MASSPERLENGTHUNIT\";\nIfcDerivedUnitEnum.MODULUSOFLINEARSUBGRADEREACTIONUNIT = \"MODULUSOFLINEARSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.MODULUSOFROTATIONALSUBGRADEREACTIONUNIT = \"MODULUSOFROTATIONALSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.PHUNIT = \"PHUNIT\";\nIfcDerivedUnitEnum.ROTATIONALMASSUNIT = \"ROTATIONALMASSUNIT\";\nIfcDerivedUnitEnum.SECTIONAREAINTEGRALUNIT = \"SECTIONAREAINTEGRALUNIT\";\nIfcDerivedUnitEnum.SECTIONMODULUSUNIT = \"SECTIONMODULUSUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERLEVELUNIT = \"SOUNDPOWERLEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERUNIT = \"SOUNDPOWERUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSURELEVELUNIT = \"SOUNDPRESSURELEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSUREUNIT = \"SOUNDPRESSUREUNIT\";\nIfcDerivedUnitEnum.TEMPERATUREGRADIENTUNIT = \"TEMPERATUREGRADIENTUNIT\";\nIfcDerivedUnitEnum.TEMPERATURERATEOFCHANGEUNIT = \"TEMPERATURERATEOFCHANGEUNIT\";\nIfcDerivedUnitEnum.THERMALEXPANSIONCOEFFICIENTUNIT = \"THERMALEXPANSIONCOEFFICIENTUNIT\";\nIfcDerivedUnitEnum.WARPINGCONSTANTUNIT = \"WARPINGCONSTANTUNIT\";\nIfcDerivedUnitEnum.WARPINGMOMENTUNIT = \"WARPINGMOMENTUNIT\";\nIfcDerivedUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcDirectionSenseEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDirectionSenseEnum.POSITIVE = \"POSITIVE\";\nIfcDirectionSenseEnum.NEGATIVE = \"NEGATIVE\";\nvar IfcDiscreteAccessoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDiscreteAccessoryTypeEnum.ANCHORPLATE = \"ANCHORPLATE\";\nIfcDiscreteAccessoryTypeEnum.BRACKET = \"BRACKET\";\nIfcDiscreteAccessoryTypeEnum.SHOE = \"SHOE\";\nIfcDiscreteAccessoryTypeEnum.EXPANSION_JOINT_DEVICE = \"EXPANSION_JOINT_DEVICE\";\nIfcDiscreteAccessoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDiscreteAccessoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionChamberElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionChamberElementTypeEnum.FORMEDDUCT = \"FORMEDDUCT\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONCHAMBER = \"INSPECTIONCHAMBER\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONPIT = \"INSPECTIONPIT\";\nIfcDistributionChamberElementTypeEnum.MANHOLE = \"MANHOLE\";\nIfcDistributionChamberElementTypeEnum.METERCHAMBER = \"METERCHAMBER\";\nIfcDistributionChamberElementTypeEnum.SUMP = \"SUMP\";\nIfcDistributionChamberElementTypeEnum.TRENCH = \"TRENCH\";\nIfcDistributionChamberElementTypeEnum.VALVECHAMBER = \"VALVECHAMBER\";\nIfcDistributionChamberElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionChamberElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionPortTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionPortTypeEnum.CABLE = \"CABLE\";\nIfcDistributionPortTypeEnum.CABLECARRIER = \"CABLECARRIER\";\nIfcDistributionPortTypeEnum.DUCT = \"DUCT\";\nIfcDistributionPortTypeEnum.PIPE = \"PIPE\";\nIfcDistributionPortTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionPortTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionSystemEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionSystemEnum.AIRCONDITIONING = \"AIRCONDITIONING\";\nIfcDistributionSystemEnum.AUDIOVISUAL = \"AUDIOVISUAL\";\nIfcDistributionSystemEnum.CHEMICAL = \"CHEMICAL\";\nIfcDistributionSystemEnum.CHILLEDWATER = \"CHILLEDWATER\";\nIfcDistributionSystemEnum.COMMUNICATION = \"COMMUNICATION\";\nIfcDistributionSystemEnum.COMPRESSEDAIR = \"COMPRESSEDAIR\";\nIfcDistributionSystemEnum.CONDENSERWATER = \"CONDENSERWATER\";\nIfcDistributionSystemEnum.CONTROL = \"CONTROL\";\nIfcDistributionSystemEnum.CONVEYING = \"CONVEYING\";\nIfcDistributionSystemEnum.DATA = \"DATA\";\nIfcDistributionSystemEnum.DISPOSAL = \"DISPOSAL\";\nIfcDistributionSystemEnum.DOMESTICCOLDWATER = \"DOMESTICCOLDWATER\";\nIfcDistributionSystemEnum.DOMESTICHOTWATER = \"DOMESTICHOTWATER\";\nIfcDistributionSystemEnum.DRAINAGE = \"DRAINAGE\";\nIfcDistributionSystemEnum.EARTHING = \"EARTHING\";\nIfcDistributionSystemEnum.ELECTRICAL = \"ELECTRICAL\";\nIfcDistributionSystemEnum.ELECTROACOUSTIC = \"ELECTROACOUSTIC\";\nIfcDistributionSystemEnum.EXHAUST = \"EXHAUST\";\nIfcDistributionSystemEnum.FIREPROTECTION = \"FIREPROTECTION\";\nIfcDistributionSystemEnum.FUEL = \"FUEL\";\nIfcDistributionSystemEnum.GAS = \"GAS\";\nIfcDistributionSystemEnum.HAZARDOUS = \"HAZARDOUS\";\nIfcDistributionSystemEnum.HEATING = \"HEATING\";\nIfcDistributionSystemEnum.LIGHTING = \"LIGHTING\";\nIfcDistributionSystemEnum.LIGHTNINGPROTECTION = \"LIGHTNINGPROTECTION\";\nIfcDistributionSystemEnum.MUNICIPALSOLIDWASTE = \"MUNICIPALSOLIDWASTE\";\nIfcDistributionSystemEnum.OIL = \"OIL\";\nIfcDistributionSystemEnum.OPERATIONAL = \"OPERATIONAL\";\nIfcDistributionSystemEnum.POWERGENERATION = \"POWERGENERATION\";\nIfcDistributionSystemEnum.RAINWATER = \"RAINWATER\";\nIfcDistributionSystemEnum.REFRIGERATION = \"REFRIGERATION\";\nIfcDistributionSystemEnum.SECURITY = \"SECURITY\";\nIfcDistributionSystemEnum.SEWAGE = \"SEWAGE\";\nIfcDistributionSystemEnum.SIGNAL = \"SIGNAL\";\nIfcDistributionSystemEnum.STORMWATER = \"STORMWATER\";\nIfcDistributionSystemEnum.TELEPHONE = \"TELEPHONE\";\nIfcDistributionSystemEnum.TV = \"TV\";\nIfcDistributionSystemEnum.VACUUM = \"VACUUM\";\nIfcDistributionSystemEnum.VENT = \"VENT\";\nIfcDistributionSystemEnum.VENTILATION = \"VENTILATION\";\nIfcDistributionSystemEnum.WASTEWATER = \"WASTEWATER\";\nIfcDistributionSystemEnum.WATERSUPPLY = \"WATERSUPPLY\";\nIfcDistributionSystemEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionSystemEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentConfidentialityEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentConfidentialityEnum.PUBLIC = \"PUBLIC\";\nIfcDocumentConfidentialityEnum.RESTRICTED = \"RESTRICTED\";\nIfcDocumentConfidentialityEnum.CONFIDENTIAL = \"CONFIDENTIAL\";\nIfcDocumentConfidentialityEnum.PERSONAL = \"PERSONAL\";\nIfcDocumentConfidentialityEnum.USERDEFINED = \"USERDEFINED\";\nIfcDocumentConfidentialityEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentStatusEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentStatusEnum.DRAFT = \"DRAFT\";\nIfcDocumentStatusEnum.FINALDRAFT = \"FINALDRAFT\";\nIfcDocumentStatusEnum.FINAL = \"FINAL\";\nIfcDocumentStatusEnum.REVISION = \"REVISION\";\nIfcDocumentStatusEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelOperationEnum.SWINGING = \"SWINGING\";\nIfcDoorPanelOperationEnum.DOUBLE_ACTING = \"DOUBLE_ACTING\";\nIfcDoorPanelOperationEnum.SLIDING = \"SLIDING\";\nIfcDoorPanelOperationEnum.FOLDING = \"FOLDING\";\nIfcDoorPanelOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorPanelOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorPanelOperationEnum.FIXEDPANEL = \"FIXEDPANEL\";\nIfcDoorPanelOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelPositionEnum.LEFT = \"LEFT\";\nIfcDoorPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcDoorPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcDoorPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcDoorStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcDoorStyleConstructionEnum.STEEL = \"STEEL\";\nIfcDoorStyleConstructionEnum.WOOD = \"WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_PLASTIC = \"ALUMINIUM_PLASTIC\";\nIfcDoorStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcDoorStyleConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorStyleOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorStyleOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorStyleOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorStyleOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeEnum.DOOR = \"DOOR\";\nIfcDoorTypeEnum.GATE = \"GATE\";\nIfcDoorTypeEnum.TRAPDOOR = \"TRAPDOOR\";\nIfcDoorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorTypeOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorTypeOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorTypeOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorTypeOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorTypeOperationEnum.SWING_FIXED_LEFT = \"SWING_FIXED_LEFT\";\nIfcDoorTypeOperationEnum.SWING_FIXED_RIGHT = \"SWING_FIXED_RIGHT\";\nIfcDoorTypeOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctFittingTypeEnum.BEND = \"BEND\";\nIfcDuctFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcDuctFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcDuctFittingTypeEnum.EXIT = \"EXIT\";\nIfcDuctFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcDuctFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcDuctFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcDuctFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcDuctSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcDuctSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSilencerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSilencerTypeEnum.FLATOVAL = \"FLATOVAL\";\nIfcDuctSilencerTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcDuctSilencerTypeEnum.ROUND = \"ROUND\";\nIfcDuctSilencerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSilencerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricApplianceTypeEnum.DISHWASHER = \"DISHWASHER\";\nIfcElectricApplianceTypeEnum.ELECTRICCOOKER = \"ELECTRICCOOKER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGELECTRICHEATER = \"FREESTANDINGELECTRICHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGFAN = \"FREESTANDINGFAN\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERHEATER = \"FREESTANDINGWATERHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERCOOLER = \"FREESTANDINGWATERCOOLER\";\nIfcElectricApplianceTypeEnum.FREEZER = \"FREEZER\";\nIfcElectricApplianceTypeEnum.FRIDGE_FREEZER = \"FRIDGE_FREEZER\";\nIfcElectricApplianceTypeEnum.HANDDRYER = \"HANDDRYER\";\nIfcElectricApplianceTypeEnum.KITCHENMACHINE = \"KITCHENMACHINE\";\nIfcElectricApplianceTypeEnum.MICROWAVE = \"MICROWAVE\";\nIfcElectricApplianceTypeEnum.PHOTOCOPIER = \"PHOTOCOPIER\";\nIfcElectricApplianceTypeEnum.REFRIGERATOR = \"REFRIGERATOR\";\nIfcElectricApplianceTypeEnum.TUMBLEDRYER = \"TUMBLEDRYER\";\nIfcElectricApplianceTypeEnum.VENDINGMACHINE = \"VENDINGMACHINE\";\nIfcElectricApplianceTypeEnum.WASHINGMACHINE = \"WASHINGMACHINE\";\nIfcElectricApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricDistributionBoardTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricDistributionBoardTypeEnum.CONSUMERUNIT = \"CONSUMERUNIT\";\nIfcElectricDistributionBoardTypeEnum.DISTRIBUTIONBOARD = \"DISTRIBUTIONBOARD\";\nIfcElectricDistributionBoardTypeEnum.MOTORCONTROLCENTRE = \"MOTORCONTROLCENTRE\";\nIfcElectricDistributionBoardTypeEnum.SWITCHBOARD = \"SWITCHBOARD\";\nIfcElectricDistributionBoardTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricDistributionBoardTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricFlowStorageDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricFlowStorageDeviceTypeEnum.BATTERY = \"BATTERY\";\nIfcElectricFlowStorageDeviceTypeEnum.CAPACITORBANK = \"CAPACITORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.HARMONICFILTER = \"HARMONICFILTER\";\nIfcElectricFlowStorageDeviceTypeEnum.INDUCTORBANK = \"INDUCTORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.UPS = \"UPS\";\nIfcElectricFlowStorageDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricFlowStorageDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricGeneratorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricGeneratorTypeEnum.CHP = \"CHP\";\nIfcElectricGeneratorTypeEnum.ENGINEGENERATOR = \"ENGINEGENERATOR\";\nIfcElectricGeneratorTypeEnum.STANDALONE = \"STANDALONE\";\nIfcElectricGeneratorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricGeneratorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricMotorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricMotorTypeEnum.DC = \"DC\";\nIfcElectricMotorTypeEnum.INDUCTION = \"INDUCTION\";\nIfcElectricMotorTypeEnum.POLYPHASE = \"POLYPHASE\";\nIfcElectricMotorTypeEnum.RELUCTANCESYNCHRONOUS = \"RELUCTANCESYNCHRONOUS\";\nIfcElectricMotorTypeEnum.SYNCHRONOUS = \"SYNCHRONOUS\";\nIfcElectricMotorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricMotorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricTimeControlTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricTimeControlTypeEnum.TIMECLOCK = \"TIMECLOCK\";\nIfcElectricTimeControlTypeEnum.TIMEDELAY = \"TIMEDELAY\";\nIfcElectricTimeControlTypeEnum.RELAY = \"RELAY\";\nIfcElectricTimeControlTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricTimeControlTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementAssemblyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementAssemblyTypeEnum.ACCESSORY_ASSEMBLY = \"ACCESSORY_ASSEMBLY\";\nIfcElementAssemblyTypeEnum.ARCH = \"ARCH\";\nIfcElementAssemblyTypeEnum.BEAM_GRID = \"BEAM_GRID\";\nIfcElementAssemblyTypeEnum.BRACED_FRAME = \"BRACED_FRAME\";\nIfcElementAssemblyTypeEnum.GIRDER = \"GIRDER\";\nIfcElementAssemblyTypeEnum.REINFORCEMENT_UNIT = \"REINFORCEMENT_UNIT\";\nIfcElementAssemblyTypeEnum.RIGID_FRAME = \"RIGID_FRAME\";\nIfcElementAssemblyTypeEnum.SLAB_FIELD = \"SLAB_FIELD\";\nIfcElementAssemblyTypeEnum.TRUSS = \"TRUSS\";\nIfcElementAssemblyTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcElementAssemblyTypeEnum.PIER = \"PIER\";\nIfcElementAssemblyTypeEnum.PYLON = \"PYLON\";\nIfcElementAssemblyTypeEnum.CROSS_BRACING = \"CROSS_BRACING\";\nIfcElementAssemblyTypeEnum.DECK = \"DECK\";\nIfcElementAssemblyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElementAssemblyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementCompositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementCompositionEnum.COMPLEX = \"COMPLEX\";\nIfcElementCompositionEnum.ELEMENT = \"ELEMENT\";\nIfcElementCompositionEnum.PARTIAL = \"PARTIAL\";\nvar IfcEngineTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEngineTypeEnum.EXTERNALCOMBUSTION = \"EXTERNALCOMBUSTION\";\nIfcEngineTypeEnum.INTERNALCOMBUSTION = \"INTERNALCOMBUSTION\";\nIfcEngineTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEngineTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporativeCoolerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER = \"DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER = \"DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEAIRWASHER = \"DIRECTEVAPORATIVEAIRWASHER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEPACKAGEAIRCOOLER = \"INDIRECTEVAPORATIVEPACKAGEAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEWETCOIL = \"INDIRECTEVAPORATIVEWETCOIL\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER = \"INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTDIRECTCOMBINATION = \"INDIRECTDIRECTCOMBINATION\";\nIfcEvaporativeCoolerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporativeCoolerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporatorTypeEnum.DIRECTEXPANSION = \"DIRECTEXPANSION\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONSHELLANDTUBE = \"DIRECTEXPANSIONSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONTUBEINTUBE = \"DIRECTEXPANSIONTUBEINTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONBRAZEDPLATE = \"DIRECTEXPANSIONBRAZEDPLATE\";\nIfcEvaporatorTypeEnum.FLOODEDSHELLANDTUBE = \"FLOODEDSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.SHELLANDCOIL = \"SHELLANDCOIL\";\nIfcEvaporatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTriggerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTriggerTypeEnum.EVENTRULE = \"EVENTRULE\";\nIfcEventTriggerTypeEnum.EVENTMESSAGE = \"EVENTMESSAGE\";\nIfcEventTriggerTypeEnum.EVENTTIME = \"EVENTTIME\";\nIfcEventTriggerTypeEnum.EVENTCOMPLEX = \"EVENTCOMPLEX\";\nIfcEventTriggerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTriggerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTypeEnum.STARTEVENT = \"STARTEVENT\";\nIfcEventTypeEnum.ENDEVENT = \"ENDEVENT\";\nIfcEventTypeEnum.INTERMEDIATEEVENT = \"INTERMEDIATEEVENT\";\nIfcEventTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcExternalSpatialElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcExternalSpatialElementTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcExternalSpatialElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcExternalSpatialElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFanTypeEnum.CENTRIFUGALFORWARDCURVED = \"CENTRIFUGALFORWARDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALRADIAL = \"CENTRIFUGALRADIAL\";\nIfcFanTypeEnum.CENTRIFUGALBACKWARDINCLINEDCURVED = \"CENTRIFUGALBACKWARDINCLINEDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALAIRFOIL = \"CENTRIFUGALAIRFOIL\";\nIfcFanTypeEnum.TUBEAXIAL = \"TUBEAXIAL\";\nIfcFanTypeEnum.VANEAXIAL = \"VANEAXIAL\";\nIfcFanTypeEnum.PROPELLORAXIAL = \"PROPELLORAXIAL\";\nIfcFanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFastenerTypeEnum.GLUE = \"GLUE\";\nIfcFastenerTypeEnum.MORTAR = \"MORTAR\";\nIfcFastenerTypeEnum.WELD = \"WELD\";\nIfcFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFilterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFilterTypeEnum.AIRPARTICLEFILTER = \"AIRPARTICLEFILTER\";\nIfcFilterTypeEnum.COMPRESSEDAIRFILTER = \"COMPRESSEDAIRFILTER\";\nIfcFilterTypeEnum.ODORFILTER = \"ODORFILTER\";\nIfcFilterTypeEnum.OILFILTER = \"OILFILTER\";\nIfcFilterTypeEnum.STRAINER = \"STRAINER\";\nIfcFilterTypeEnum.WATERFILTER = \"WATERFILTER\";\nIfcFilterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFilterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFireSuppressionTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFireSuppressionTerminalTypeEnum.BREECHINGINLET = \"BREECHINGINLET\";\nIfcFireSuppressionTerminalTypeEnum.FIREHYDRANT = \"FIREHYDRANT\";\nIfcFireSuppressionTerminalTypeEnum.HOSEREEL = \"HOSEREEL\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLER = \"SPRINKLER\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLERDEFLECTOR = \"SPRINKLERDEFLECTOR\";\nIfcFireSuppressionTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFireSuppressionTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowDirectionEnum.SOURCE = \"SOURCE\";\nIfcFlowDirectionEnum.SINK = \"SINK\";\nIfcFlowDirectionEnum.SOURCEANDSINK = \"SOURCEANDSINK\";\nIfcFlowDirectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowInstrumentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowInstrumentTypeEnum.PRESSUREGAUGE = \"PRESSUREGAUGE\";\nIfcFlowInstrumentTypeEnum.THERMOMETER = \"THERMOMETER\";\nIfcFlowInstrumentTypeEnum.AMMETER = \"AMMETER\";\nIfcFlowInstrumentTypeEnum.FREQUENCYMETER = \"FREQUENCYMETER\";\nIfcFlowInstrumentTypeEnum.POWERFACTORMETER = \"POWERFACTORMETER\";\nIfcFlowInstrumentTypeEnum.PHASEANGLEMETER = \"PHASEANGLEMETER\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_PEAK = \"VOLTMETER_PEAK\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_RMS = \"VOLTMETER_RMS\";\nIfcFlowInstrumentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowInstrumentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowMeterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowMeterTypeEnum.ENERGYMETER = \"ENERGYMETER\";\nIfcFlowMeterTypeEnum.GASMETER = \"GASMETER\";\nIfcFlowMeterTypeEnum.OILMETER = \"OILMETER\";\nIfcFlowMeterTypeEnum.WATERMETER = \"WATERMETER\";\nIfcFlowMeterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowMeterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFootingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFootingTypeEnum.CAISSON_FOUNDATION = \"CAISSON_FOUNDATION\";\nIfcFootingTypeEnum.FOOTING_BEAM = \"FOOTING_BEAM\";\nIfcFootingTypeEnum.PAD_FOOTING = \"PAD_FOOTING\";\nIfcFootingTypeEnum.PILE_CAP = \"PILE_CAP\";\nIfcFootingTypeEnum.STRIP_FOOTING = \"STRIP_FOOTING\";\nIfcFootingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFootingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFurnitureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFurnitureTypeEnum.CHAIR = \"CHAIR\";\nIfcFurnitureTypeEnum.TABLE = \"TABLE\";\nIfcFurnitureTypeEnum.DESK = \"DESK\";\nIfcFurnitureTypeEnum.BED = \"BED\";\nIfcFurnitureTypeEnum.FILECABINET = \"FILECABINET\";\nIfcFurnitureTypeEnum.SHELF = \"SHELF\";\nIfcFurnitureTypeEnum.SOFA = \"SOFA\";\nIfcFurnitureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFurnitureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeographicElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeographicElementTypeEnum.TERRAIN = \"TERRAIN\";\nIfcGeographicElementTypeEnum.SOIL_BORING_POINT = \"SOIL_BORING_POINT\";\nIfcGeographicElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeographicElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeometricProjectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeometricProjectionEnum.GRAPH_VIEW = \"GRAPH_VIEW\";\nIfcGeometricProjectionEnum.SKETCH_VIEW = \"SKETCH_VIEW\";\nIfcGeometricProjectionEnum.MODEL_VIEW = \"MODEL_VIEW\";\nIfcGeometricProjectionEnum.PLAN_VIEW = \"PLAN_VIEW\";\nIfcGeometricProjectionEnum.REFLECTED_PLAN_VIEW = \"REFLECTED_PLAN_VIEW\";\nIfcGeometricProjectionEnum.SECTION_VIEW = \"SECTION_VIEW\";\nIfcGeometricProjectionEnum.ELEVATION_VIEW = \"ELEVATION_VIEW\";\nIfcGeometricProjectionEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeometricProjectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGlobalOrLocalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGlobalOrLocalEnum.GLOBAL_COORDS = \"GLOBAL_COORDS\";\nIfcGlobalOrLocalEnum.LOCAL_COORDS = \"LOCAL_COORDS\";\nvar IfcGridTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGridTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcGridTypeEnum.RADIAL = \"RADIAL\";\nIfcGridTypeEnum.TRIANGULAR = \"TRIANGULAR\";\nIfcGridTypeEnum.IRREGULAR = \"IRREGULAR\";\nIfcGridTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGridTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHeatExchangerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHeatExchangerTypeEnum.PLATE = \"PLATE\";\nIfcHeatExchangerTypeEnum.SHELLANDTUBE = \"SHELLANDTUBE\";\nIfcHeatExchangerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHeatExchangerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHumidifierTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHumidifierTypeEnum.STEAMINJECTION = \"STEAMINJECTION\";\nIfcHumidifierTypeEnum.ADIABATICAIRWASHER = \"ADIABATICAIRWASHER\";\nIfcHumidifierTypeEnum.ADIABATICPAN = \"ADIABATICPAN\";\nIfcHumidifierTypeEnum.ADIABATICWETTEDELEMENT = \"ADIABATICWETTEDELEMENT\";\nIfcHumidifierTypeEnum.ADIABATICATOMIZING = \"ADIABATICATOMIZING\";\nIfcHumidifierTypeEnum.ADIABATICULTRASONIC = \"ADIABATICULTRASONIC\";\nIfcHumidifierTypeEnum.ADIABATICRIGIDMEDIA = \"ADIABATICRIGIDMEDIA\";\nIfcHumidifierTypeEnum.ADIABATICCOMPRESSEDAIRNOZZLE = \"ADIABATICCOMPRESSEDAIRNOZZLE\";\nIfcHumidifierTypeEnum.ASSISTEDELECTRIC = \"ASSISTEDELECTRIC\";\nIfcHumidifierTypeEnum.ASSISTEDNATURALGAS = \"ASSISTEDNATURALGAS\";\nIfcHumidifierTypeEnum.ASSISTEDPROPANE = \"ASSISTEDPROPANE\";\nIfcHumidifierTypeEnum.ASSISTEDBUTANE = \"ASSISTEDBUTANE\";\nIfcHumidifierTypeEnum.ASSISTEDSTEAM = \"ASSISTEDSTEAM\";\nIfcHumidifierTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHumidifierTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInterceptorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInterceptorTypeEnum.CYCLONIC = \"CYCLONIC\";\nIfcInterceptorTypeEnum.GREASE = \"GREASE\";\nIfcInterceptorTypeEnum.OIL = \"OIL\";\nIfcInterceptorTypeEnum.PETROL = \"PETROL\";\nIfcInterceptorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInterceptorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInternalOrExternalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInternalOrExternalEnum.INTERNAL = \"INTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL = \"EXTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcInternalOrExternalEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcInternalOrExternalEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcInternalOrExternalEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInventoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInventoryTypeEnum.ASSETINVENTORY = \"ASSETINVENTORY\";\nIfcInventoryTypeEnum.SPACEINVENTORY = \"SPACEINVENTORY\";\nIfcInventoryTypeEnum.FURNITUREINVENTORY = \"FURNITUREINVENTORY\";\nIfcInventoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInventoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcJunctionBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcJunctionBoxTypeEnum.DATA = \"DATA\";\nIfcJunctionBoxTypeEnum.POWER = \"POWER\";\nIfcJunctionBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcJunctionBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcKnotType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcKnotType.UNIFORM_KNOTS = \"UNIFORM_KNOTS\";\nIfcKnotType.QUASI_UNIFORM_KNOTS = \"QUASI_UNIFORM_KNOTS\";\nIfcKnotType.PIECEWISE_BEZIER_KNOTS = \"PIECEWISE_BEZIER_KNOTS\";\nIfcKnotType.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcLaborResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLaborResourceTypeEnum.ADMINISTRATION = \"ADMINISTRATION\";\nIfcLaborResourceTypeEnum.CARPENTRY = \"CARPENTRY\";\nIfcLaborResourceTypeEnum.CLEANING = \"CLEANING\";\nIfcLaborResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcLaborResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcLaborResourceTypeEnum.ELECTRIC = \"ELECTRIC\";\nIfcLaborResourceTypeEnum.FINISHING = \"FINISHING\";\nIfcLaborResourceTypeEnum.FLOORING = \"FLOORING\";\nIfcLaborResourceTypeEnum.GENERAL = \"GENERAL\";\nIfcLaborResourceTypeEnum.HVAC = \"HVAC\";\nIfcLaborResourceTypeEnum.LANDSCAPING = \"LANDSCAPING\";\nIfcLaborResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcLaborResourceTypeEnum.PAINTING = \"PAINTING\";\nIfcLaborResourceTypeEnum.PAVING = \"PAVING\";\nIfcLaborResourceTypeEnum.PLUMBING = \"PLUMBING\";\nIfcLaborResourceTypeEnum.ROOFING = \"ROOFING\";\nIfcLaborResourceTypeEnum.SITEGRADING = \"SITEGRADING\";\nIfcLaborResourceTypeEnum.STEELWORK = \"STEELWORK\";\nIfcLaborResourceTypeEnum.SURVEYING = \"SURVEYING\";\nIfcLaborResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLaborResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLampTypeEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLampTypeEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLampTypeEnum.HALOGEN = \"HALOGEN\";\nIfcLampTypeEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLampTypeEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLampTypeEnum.LED = \"LED\";\nIfcLampTypeEnum.METALHALIDE = \"METALHALIDE\";\nIfcLampTypeEnum.OLED = \"OLED\";\nIfcLampTypeEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLayerSetDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLayerSetDirectionEnum.AXIS1 = \"AXIS1\";\nIfcLayerSetDirectionEnum.AXIS2 = \"AXIS2\";\nIfcLayerSetDirectionEnum.AXIS3 = \"AXIS3\";\nvar IfcLightDistributionCurveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightDistributionCurveEnum.TYPE_A = \"TYPE_A\";\nIfcLightDistributionCurveEnum.TYPE_B = \"TYPE_B\";\nIfcLightDistributionCurveEnum.TYPE_C = \"TYPE_C\";\nIfcLightDistributionCurveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightEmissionSourceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightEmissionSourceEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLightEmissionSourceEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLightEmissionSourceEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLightEmissionSourceEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LIGHTEMITTINGDIODE = \"LIGHTEMITTINGDIODE\";\nIfcLightEmissionSourceEnum.LOWPRESSURESODIUM = \"LOWPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LOWVOLTAGEHALOGEN = \"LOWVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.MAINVOLTAGEHALOGEN = \"MAINVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.METALHALIDE = \"METALHALIDE\";\nIfcLightEmissionSourceEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLightEmissionSourceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightFixtureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightFixtureTypeEnum.POINTSOURCE = \"POINTSOURCE\";\nIfcLightFixtureTypeEnum.DIRECTIONSOURCE = \"DIRECTIONSOURCE\";\nIfcLightFixtureTypeEnum.SECURITYLIGHTING = \"SECURITYLIGHTING\";\nIfcLightFixtureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLightFixtureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLoadGroupTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLoadGroupTypeEnum.LOAD_GROUP = \"LOAD_GROUP\";\nIfcLoadGroupTypeEnum.LOAD_CASE = \"LOAD_CASE\";\nIfcLoadGroupTypeEnum.LOAD_COMBINATION = \"LOAD_COMBINATION\";\nIfcLoadGroupTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLoadGroupTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLogicalOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLogicalOperatorEnum.LOGICALAND = \"LOGICALAND\";\nIfcLogicalOperatorEnum.LOGICALOR = \"LOGICALOR\";\nIfcLogicalOperatorEnum.LOGICALXOR = \"LOGICALXOR\";\nIfcLogicalOperatorEnum.LOGICALNOTAND = \"LOGICALNOTAND\";\nIfcLogicalOperatorEnum.LOGICALNOTOR = \"LOGICALNOTOR\";\nvar IfcMechanicalFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMechanicalFastenerTypeEnum.ANCHORBOLT = \"ANCHORBOLT\";\nIfcMechanicalFastenerTypeEnum.BOLT = \"BOLT\";\nIfcMechanicalFastenerTypeEnum.DOWEL = \"DOWEL\";\nIfcMechanicalFastenerTypeEnum.NAIL = \"NAIL\";\nIfcMechanicalFastenerTypeEnum.NAILPLATE = \"NAILPLATE\";\nIfcMechanicalFastenerTypeEnum.RIVET = \"RIVET\";\nIfcMechanicalFastenerTypeEnum.SCREW = \"SCREW\";\nIfcMechanicalFastenerTypeEnum.SHEARCONNECTOR = \"SHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.STAPLE = \"STAPLE\";\nIfcMechanicalFastenerTypeEnum.STUDSHEARCONNECTOR = \"STUDSHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.COUPLER = \"COUPLER\";\nIfcMechanicalFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMechanicalFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMedicalDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMedicalDeviceTypeEnum.AIRSTATION = \"AIRSTATION\";\nIfcMedicalDeviceTypeEnum.FEEDAIRUNIT = \"FEEDAIRUNIT\";\nIfcMedicalDeviceTypeEnum.OXYGENGENERATOR = \"OXYGENGENERATOR\";\nIfcMedicalDeviceTypeEnum.OXYGENPLANT = \"OXYGENPLANT\";\nIfcMedicalDeviceTypeEnum.VACUUMSTATION = \"VACUUMSTATION\";\nIfcMedicalDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMedicalDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMemberTypeEnum.BRACE = \"BRACE\";\nIfcMemberTypeEnum.CHORD = \"CHORD\";\nIfcMemberTypeEnum.COLLAR = \"COLLAR\";\nIfcMemberTypeEnum.MEMBER = \"MEMBER\";\nIfcMemberTypeEnum.MULLION = \"MULLION\";\nIfcMemberTypeEnum.PLATE = \"PLATE\";\nIfcMemberTypeEnum.POST = \"POST\";\nIfcMemberTypeEnum.PURLIN = \"PURLIN\";\nIfcMemberTypeEnum.RAFTER = \"RAFTER\";\nIfcMemberTypeEnum.STRINGER = \"STRINGER\";\nIfcMemberTypeEnum.STRUT = \"STRUT\";\nIfcMemberTypeEnum.STUD = \"STUD\";\nIfcMemberTypeEnum.STIFFENING_RIB = \"STIFFENING_RIB\";\nIfcMemberTypeEnum.ARCH_SEGMENT = \"ARCH_SEGMENT\";\nIfcMemberTypeEnum.SUSPENSION_CABLE = \"SUSPENSION_CABLE\";\nIfcMemberTypeEnum.SUSPENDER = \"SUSPENDER\";\nIfcMemberTypeEnum.STAY_CABLE = \"STAY_CABLE\";\nIfcMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMotorConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMotorConnectionTypeEnum.BELTDRIVE = \"BELTDRIVE\";\nIfcMotorConnectionTypeEnum.COUPLING = \"COUPLING\";\nIfcMotorConnectionTypeEnum.DIRECTDRIVE = \"DIRECTDRIVE\";\nIfcMotorConnectionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMotorConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcNullStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcNullStyle.NULL = \"NULL\";\nvar IfcObjectTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectTypeEnum.PRODUCT = \"PRODUCT\";\nIfcObjectTypeEnum.PROCESS = \"PROCESS\";\nIfcObjectTypeEnum.CONTROL = \"CONTROL\";\nIfcObjectTypeEnum.RESOURCE = \"RESOURCE\";\nIfcObjectTypeEnum.ACTOR = \"ACTOR\";\nIfcObjectTypeEnum.GROUP = \"GROUP\";\nIfcObjectTypeEnum.PROJECT = \"PROJECT\";\nIfcObjectTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcObjectiveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectiveEnum.CODECOMPLIANCE = \"CODECOMPLIANCE\";\nIfcObjectiveEnum.CODEWAIVER = \"CODEWAIVER\";\nIfcObjectiveEnum.DESIGNINTENT = \"DESIGNINTENT\";\nIfcObjectiveEnum.EXTERNAL = \"EXTERNAL\";\nIfcObjectiveEnum.HEALTHANDSAFETY = \"HEALTHANDSAFETY\";\nIfcObjectiveEnum.MERGECONFLICT = \"MERGECONFLICT\";\nIfcObjectiveEnum.MODELVIEW = \"MODELVIEW\";\nIfcObjectiveEnum.PARAMETER = \"PARAMETER\";\nIfcObjectiveEnum.REQUIREMENT = \"REQUIREMENT\";\nIfcObjectiveEnum.SPECIFICATION = \"SPECIFICATION\";\nIfcObjectiveEnum.TRIGGERCONDITION = \"TRIGGERCONDITION\";\nIfcObjectiveEnum.USERDEFINED = \"USERDEFINED\";\nIfcObjectiveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOccupantTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOccupantTypeEnum.ASSIGNEE = \"ASSIGNEE\";\nIfcOccupantTypeEnum.ASSIGNOR = \"ASSIGNOR\";\nIfcOccupantTypeEnum.LESSEE = \"LESSEE\";\nIfcOccupantTypeEnum.LESSOR = \"LESSOR\";\nIfcOccupantTypeEnum.LETTINGAGENT = \"LETTINGAGENT\";\nIfcOccupantTypeEnum.OWNER = \"OWNER\";\nIfcOccupantTypeEnum.TENANT = \"TENANT\";\nIfcOccupantTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOccupantTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOpeningElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOpeningElementTypeEnum.OPENING = \"OPENING\";\nIfcOpeningElementTypeEnum.RECESS = \"RECESS\";\nIfcOpeningElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOpeningElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOutletTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOutletTypeEnum.AUDIOVISUALOUTLET = \"AUDIOVISUALOUTLET\";\nIfcOutletTypeEnum.COMMUNICATIONSOUTLET = \"COMMUNICATIONSOUTLET\";\nIfcOutletTypeEnum.POWEROUTLET = \"POWEROUTLET\";\nIfcOutletTypeEnum.DATAOUTLET = \"DATAOUTLET\";\nIfcOutletTypeEnum.TELEPHONEOUTLET = \"TELEPHONEOUTLET\";\nIfcOutletTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOutletTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPerformanceHistoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPerformanceHistoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPerformanceHistoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermeableCoveringOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermeableCoveringOperationEnum.GRILL = \"GRILL\";\nIfcPermeableCoveringOperationEnum.LOUVER = \"LOUVER\";\nIfcPermeableCoveringOperationEnum.SCREEN = \"SCREEN\";\nIfcPermeableCoveringOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermeableCoveringOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermitTypeEnum.ACCESS = \"ACCESS\";\nIfcPermitTypeEnum.BUILDING = \"BUILDING\";\nIfcPermitTypeEnum.WORK = \"WORK\";\nIfcPermitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPhysicalOrVirtualEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPhysicalOrVirtualEnum.PHYSICAL = \"PHYSICAL\";\nIfcPhysicalOrVirtualEnum.VIRTUAL = \"VIRTUAL\";\nIfcPhysicalOrVirtualEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileConstructionEnum.CAST_IN_PLACE = \"CAST_IN_PLACE\";\nIfcPileConstructionEnum.COMPOSITE = \"COMPOSITE\";\nIfcPileConstructionEnum.PRECAST_CONCRETE = \"PRECAST_CONCRETE\";\nIfcPileConstructionEnum.PREFAB_STEEL = \"PREFAB_STEEL\";\nIfcPileConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileTypeEnum.BORED = \"BORED\";\nIfcPileTypeEnum.DRIVEN = \"DRIVEN\";\nIfcPileTypeEnum.JETGROUTING = \"JETGROUTING\";\nIfcPileTypeEnum.COHESION = \"COHESION\";\nIfcPileTypeEnum.FRICTION = \"FRICTION\";\nIfcPileTypeEnum.SUPPORT = \"SUPPORT\";\nIfcPileTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeFittingTypeEnum.BEND = \"BEND\";\nIfcPipeFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcPipeFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcPipeFittingTypeEnum.EXIT = \"EXIT\";\nIfcPipeFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcPipeFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcPipeFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcPipeFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeSegmentTypeEnum.CULVERT = \"CULVERT\";\nIfcPipeSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcPipeSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcPipeSegmentTypeEnum.GUTTER = \"GUTTER\";\nIfcPipeSegmentTypeEnum.SPOOL = \"SPOOL\";\nIfcPipeSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPlateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPlateTypeEnum.CURTAIN_PANEL = \"CURTAIN_PANEL\";\nIfcPlateTypeEnum.SHEET = \"SHEET\";\nIfcPlateTypeEnum.FLANGE_PLATE = \"FLANGE_PLATE\";\nIfcPlateTypeEnum.WEB_PLATE = \"WEB_PLATE\";\nIfcPlateTypeEnum.STIFFENER_PLATE = \"STIFFENER_PLATE\";\nIfcPlateTypeEnum.GUSSET_PLATE = \"GUSSET_PLATE\";\nIfcPlateTypeEnum.COVER_PLATE = \"COVER_PLATE\";\nIfcPlateTypeEnum.SPLICE_PLATE = \"SPLICE_PLATE\";\nIfcPlateTypeEnum.BASE_PLATE = \"BASE_PLATE\";\nIfcPlateTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPlateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPreferredSurfaceCurveRepresentation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPreferredSurfaceCurveRepresentation.CURVE3D = \"CURVE3D\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S1 = \"PCURVE_S1\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S2 = \"PCURVE_S2\";\nvar IfcProcedureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProcedureTypeEnum.ADVICE_CAUTION = \"ADVICE_CAUTION\";\nIfcProcedureTypeEnum.ADVICE_NOTE = \"ADVICE_NOTE\";\nIfcProcedureTypeEnum.ADVICE_WARNING = \"ADVICE_WARNING\";\nIfcProcedureTypeEnum.CALIBRATION = \"CALIBRATION\";\nIfcProcedureTypeEnum.DIAGNOSTIC = \"DIAGNOSTIC\";\nIfcProcedureTypeEnum.SHUTDOWN = \"SHUTDOWN\";\nIfcProcedureTypeEnum.STARTUP = \"STARTUP\";\nIfcProcedureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProcedureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProfileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProfileTypeEnum.CURVE = \"CURVE\";\nIfcProfileTypeEnum.AREA = \"AREA\";\nvar IfcProjectOrderTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectOrderTypeEnum.CHANGEORDER = \"CHANGEORDER\";\nIfcProjectOrderTypeEnum.MAINTENANCEWORKORDER = \"MAINTENANCEWORKORDER\";\nIfcProjectOrderTypeEnum.MOVEORDER = \"MOVEORDER\";\nIfcProjectOrderTypeEnum.PURCHASEORDER = \"PURCHASEORDER\";\nIfcProjectOrderTypeEnum.WORKORDER = \"WORKORDER\";\nIfcProjectOrderTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectOrderTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProjectedOrTrueLengthEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectedOrTrueLengthEnum.PROJECTED_LENGTH = \"PROJECTED_LENGTH\";\nIfcProjectedOrTrueLengthEnum.TRUE_LENGTH = \"TRUE_LENGTH\";\nvar IfcProjectionElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectionElementTypeEnum.BLISTER = \"BLISTER\";\nIfcProjectionElementTypeEnum.DEVIATOR = \"DEVIATOR\";\nIfcProjectionElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectionElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPropertySetTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENONLY = \"PSET_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENOVERRIDE = \"PSET_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.PSET_OCCURRENCEDRIVEN = \"PSET_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.PSET_PERFORMANCEDRIVEN = \"PSET_PERFORMANCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENONLY = \"QTO_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENOVERRIDE = \"QTO_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.QTO_OCCURRENCEDRIVEN = \"QTO_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTrippingUnitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTRONIC = \"ELECTRONIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTROMAGNETIC = \"ELECTROMAGNETIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.RESIDUALCURRENT = \"RESIDUALCURRENT\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.THERMAL = \"THERMAL\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTypeEnum.CIRCUITBREAKER = \"CIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHLEAKAGECIRCUITBREAKER = \"EARTHLEAKAGECIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHINGSWITCH = \"EARTHINGSWITCH\";\nIfcProtectiveDeviceTypeEnum.FUSEDISCONNECTOR = \"FUSEDISCONNECTOR\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTCIRCUITBREAKER = \"RESIDUALCURRENTCIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTSWITCH = \"RESIDUALCURRENTSWITCH\";\nIfcProtectiveDeviceTypeEnum.VARISTOR = \"VARISTOR\";\nIfcProtectiveDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPumpTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPumpTypeEnum.CIRCULATOR = \"CIRCULATOR\";\nIfcPumpTypeEnum.ENDSUCTION = \"ENDSUCTION\";\nIfcPumpTypeEnum.SPLITCASE = \"SPLITCASE\";\nIfcPumpTypeEnum.SUBMERSIBLEPUMP = \"SUBMERSIBLEPUMP\";\nIfcPumpTypeEnum.SUMPPUMP = \"SUMPPUMP\";\nIfcPumpTypeEnum.VERTICALINLINE = \"VERTICALINLINE\";\nIfcPumpTypeEnum.VERTICALTURBINE = \"VERTICALTURBINE\";\nIfcPumpTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPumpTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRailingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRailingTypeEnum.HANDRAIL = \"HANDRAIL\";\nIfcRailingTypeEnum.GUARDRAIL = \"GUARDRAIL\";\nIfcRailingTypeEnum.BALUSTRADE = \"BALUSTRADE\";\nIfcRailingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRailingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcRampFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcRampFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampTypeEnum.STRAIGHT_RUN_RAMP = \"STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.TWO_STRAIGHT_RUN_RAMP = \"TWO_STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.QUARTER_TURN_RAMP = \"QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.TWO_QUARTER_TURN_RAMP = \"TWO_QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.HALF_TURN_RAMP = \"HALF_TURN_RAMP\";\nIfcRampTypeEnum.SPIRAL_RAMP = \"SPIRAL_RAMP\";\nIfcRampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRecurrenceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRecurrenceTypeEnum.DAILY = \"DAILY\";\nIfcRecurrenceTypeEnum.WEEKLY = \"WEEKLY\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_DAY_OF_MONTH = \"MONTHLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_POSITION = \"MONTHLY_BY_POSITION\";\nIfcRecurrenceTypeEnum.BY_DAY_COUNT = \"BY_DAY_COUNT\";\nIfcRecurrenceTypeEnum.BY_WEEKDAY_COUNT = \"BY_WEEKDAY_COUNT\";\nIfcRecurrenceTypeEnum.YEARLY_BY_DAY_OF_MONTH = \"YEARLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.YEARLY_BY_POSITION = \"YEARLY_BY_POSITION\";\nvar IfcReferentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReferentTypeEnum.KILOPOINT = \"KILOPOINT\";\nIfcReferentTypeEnum.MILEPOINT = \"MILEPOINT\";\nIfcReferentTypeEnum.STATION = \"STATION\";\nIfcReferentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReferentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReflectanceMethodEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReflectanceMethodEnum.BLINN = \"BLINN\";\nIfcReflectanceMethodEnum.FLAT = \"FLAT\";\nIfcReflectanceMethodEnum.GLASS = \"GLASS\";\nIfcReflectanceMethodEnum.MATT = \"MATT\";\nIfcReflectanceMethodEnum.METAL = \"METAL\";\nIfcReflectanceMethodEnum.MIRROR = \"MIRROR\";\nIfcReflectanceMethodEnum.PHONG = \"PHONG\";\nIfcReflectanceMethodEnum.PLASTIC = \"PLASTIC\";\nIfcReflectanceMethodEnum.STRAUSS = \"STRAUSS\";\nIfcReflectanceMethodEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarRoleEnum.MAIN = \"MAIN\";\nIfcReinforcingBarRoleEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarRoleEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarRoleEnum.STUD = \"STUD\";\nIfcReinforcingBarRoleEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarRoleEnum.EDGE = \"EDGE\";\nIfcReinforcingBarRoleEnum.RING = \"RING\";\nIfcReinforcingBarRoleEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarRoleEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarRoleEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarSurfaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarSurfaceEnum.PLAIN = \"PLAIN\";\nIfcReinforcingBarSurfaceEnum.TEXTURED = \"TEXTURED\";\nvar IfcReinforcingBarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarTypeEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarTypeEnum.EDGE = \"EDGE\";\nIfcReinforcingBarTypeEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarTypeEnum.MAIN = \"MAIN\";\nIfcReinforcingBarTypeEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarTypeEnum.RING = \"RING\";\nIfcReinforcingBarTypeEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarTypeEnum.STUD = \"STUD\";\nIfcReinforcingBarTypeEnum.SPACEBAR = \"SPACEBAR\";\nIfcReinforcingBarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingMeshTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingMeshTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingMeshTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoleEnum.SUPPLIER = \"SUPPLIER\";\nIfcRoleEnum.MANUFACTURER = \"MANUFACTURER\";\nIfcRoleEnum.CONTRACTOR = \"CONTRACTOR\";\nIfcRoleEnum.SUBCONTRACTOR = \"SUBCONTRACTOR\";\nIfcRoleEnum.ARCHITECT = \"ARCHITECT\";\nIfcRoleEnum.STRUCTURALENGINEER = \"STRUCTURALENGINEER\";\nIfcRoleEnum.COSTENGINEER = \"COSTENGINEER\";\nIfcRoleEnum.CLIENT = \"CLIENT\";\nIfcRoleEnum.BUILDINGOWNER = \"BUILDINGOWNER\";\nIfcRoleEnum.BUILDINGOPERATOR = \"BUILDINGOPERATOR\";\nIfcRoleEnum.MECHANICALENGINEER = \"MECHANICALENGINEER\";\nIfcRoleEnum.ELECTRICALENGINEER = \"ELECTRICALENGINEER\";\nIfcRoleEnum.PROJECTMANAGER = \"PROJECTMANAGER\";\nIfcRoleEnum.FACILITIESMANAGER = \"FACILITIESMANAGER\";\nIfcRoleEnum.CIVILENGINEER = \"CIVILENGINEER\";\nIfcRoleEnum.COMMISSIONINGENGINEER = \"COMMISSIONINGENGINEER\";\nIfcRoleEnum.ENGINEER = \"ENGINEER\";\nIfcRoleEnum.OWNER = \"OWNER\";\nIfcRoleEnum.CONSULTANT = \"CONSULTANT\";\nIfcRoleEnum.CONSTRUCTIONMANAGER = \"CONSTRUCTIONMANAGER\";\nIfcRoleEnum.FIELDCONSTRUCTIONMANAGER = \"FIELDCONSTRUCTIONMANAGER\";\nIfcRoleEnum.RESELLER = \"RESELLER\";\nIfcRoleEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcRoofTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoofTypeEnum.FLAT_ROOF = \"FLAT_ROOF\";\nIfcRoofTypeEnum.SHED_ROOF = \"SHED_ROOF\";\nIfcRoofTypeEnum.GABLE_ROOF = \"GABLE_ROOF\";\nIfcRoofTypeEnum.HIP_ROOF = \"HIP_ROOF\";\nIfcRoofTypeEnum.HIPPED_GABLE_ROOF = \"HIPPED_GABLE_ROOF\";\nIfcRoofTypeEnum.GAMBREL_ROOF = \"GAMBREL_ROOF\";\nIfcRoofTypeEnum.MANSARD_ROOF = \"MANSARD_ROOF\";\nIfcRoofTypeEnum.BARREL_ROOF = \"BARREL_ROOF\";\nIfcRoofTypeEnum.RAINBOW_ROOF = \"RAINBOW_ROOF\";\nIfcRoofTypeEnum.BUTTERFLY_ROOF = \"BUTTERFLY_ROOF\";\nIfcRoofTypeEnum.PAVILION_ROOF = \"PAVILION_ROOF\";\nIfcRoofTypeEnum.DOME_ROOF = \"DOME_ROOF\";\nIfcRoofTypeEnum.FREEFORM = \"FREEFORM\";\nIfcRoofTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRoofTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSIPrefix = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIPrefix.EXA = \"EXA\";\nIfcSIPrefix.PETA = \"PETA\";\nIfcSIPrefix.TERA = \"TERA\";\nIfcSIPrefix.GIGA = \"GIGA\";\nIfcSIPrefix.MEGA = \"MEGA\";\nIfcSIPrefix.KILO = \"KILO\";\nIfcSIPrefix.HECTO = \"HECTO\";\nIfcSIPrefix.DECA = \"DECA\";\nIfcSIPrefix.DECI = \"DECI\";\nIfcSIPrefix.CENTI = \"CENTI\";\nIfcSIPrefix.MILLI = \"MILLI\";\nIfcSIPrefix.MICRO = \"MICRO\";\nIfcSIPrefix.NANO = \"NANO\";\nIfcSIPrefix.PICO = \"PICO\";\nIfcSIPrefix.FEMTO = \"FEMTO\";\nIfcSIPrefix.ATTO = \"ATTO\";\nvar IfcSIUnitName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIUnitName.AMPERE = \"AMPERE\";\nIfcSIUnitName.BECQUEREL = \"BECQUEREL\";\nIfcSIUnitName.CANDELA = \"CANDELA\";\nIfcSIUnitName.COULOMB = \"COULOMB\";\nIfcSIUnitName.CUBIC_METRE = \"CUBIC_METRE\";\nIfcSIUnitName.DEGREE_CELSIUS = \"DEGREE_CELSIUS\";\nIfcSIUnitName.FARAD = \"FARAD\";\nIfcSIUnitName.GRAM = \"GRAM\";\nIfcSIUnitName.GRAY = \"GRAY\";\nIfcSIUnitName.HENRY = \"HENRY\";\nIfcSIUnitName.HERTZ = \"HERTZ\";\nIfcSIUnitName.JOULE = \"JOULE\";\nIfcSIUnitName.KELVIN = \"KELVIN\";\nIfcSIUnitName.LUMEN = \"LUMEN\";\nIfcSIUnitName.LUX = \"LUX\";\nIfcSIUnitName.METRE = \"METRE\";\nIfcSIUnitName.MOLE = \"MOLE\";\nIfcSIUnitName.NEWTON = \"NEWTON\";\nIfcSIUnitName.OHM = \"OHM\";\nIfcSIUnitName.PASCAL = \"PASCAL\";\nIfcSIUnitName.RADIAN = \"RADIAN\";\nIfcSIUnitName.SECOND = \"SECOND\";\nIfcSIUnitName.SIEMENS = \"SIEMENS\";\nIfcSIUnitName.SIEVERT = \"SIEVERT\";\nIfcSIUnitName.SQUARE_METRE = \"SQUARE_METRE\";\nIfcSIUnitName.STERADIAN = \"STERADIAN\";\nIfcSIUnitName.TESLA = \"TESLA\";\nIfcSIUnitName.VOLT = \"VOLT\";\nIfcSIUnitName.WATT = \"WATT\";\nIfcSIUnitName.WEBER = \"WEBER\";\nvar IfcSanitaryTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSanitaryTerminalTypeEnum.BATH = \"BATH\";\nIfcSanitaryTerminalTypeEnum.BIDET = \"BIDET\";\nIfcSanitaryTerminalTypeEnum.CISTERN = \"CISTERN\";\nIfcSanitaryTerminalTypeEnum.SHOWER = \"SHOWER\";\nIfcSanitaryTerminalTypeEnum.SINK = \"SINK\";\nIfcSanitaryTerminalTypeEnum.SANITARYFOUNTAIN = \"SANITARYFOUNTAIN\";\nIfcSanitaryTerminalTypeEnum.TOILETPAN = \"TOILETPAN\";\nIfcSanitaryTerminalTypeEnum.URINAL = \"URINAL\";\nIfcSanitaryTerminalTypeEnum.WASHHANDBASIN = \"WASHHANDBASIN\";\nIfcSanitaryTerminalTypeEnum.WCSEAT = \"WCSEAT\";\nIfcSanitaryTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSanitaryTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSectionTypeEnum.UNIFORM = \"UNIFORM\";\nIfcSectionTypeEnum.TAPERED = \"TAPERED\";\nvar IfcSensorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSensorTypeEnum.COSENSOR = \"COSENSOR\";\nIfcSensorTypeEnum.CO2SENSOR = \"CO2SENSOR\";\nIfcSensorTypeEnum.CONDUCTANCESENSOR = \"CONDUCTANCESENSOR\";\nIfcSensorTypeEnum.CONTACTSENSOR = \"CONTACTSENSOR\";\nIfcSensorTypeEnum.FIRESENSOR = \"FIRESENSOR\";\nIfcSensorTypeEnum.FLOWSENSOR = \"FLOWSENSOR\";\nIfcSensorTypeEnum.FROSTSENSOR = \"FROSTSENSOR\";\nIfcSensorTypeEnum.GASSENSOR = \"GASSENSOR\";\nIfcSensorTypeEnum.HEATSENSOR = \"HEATSENSOR\";\nIfcSensorTypeEnum.HUMIDITYSENSOR = \"HUMIDITYSENSOR\";\nIfcSensorTypeEnum.IDENTIFIERSENSOR = \"IDENTIFIERSENSOR\";\nIfcSensorTypeEnum.IONCONCENTRATIONSENSOR = \"IONCONCENTRATIONSENSOR\";\nIfcSensorTypeEnum.LEVELSENSOR = \"LEVELSENSOR\";\nIfcSensorTypeEnum.LIGHTSENSOR = \"LIGHTSENSOR\";\nIfcSensorTypeEnum.MOISTURESENSOR = \"MOISTURESENSOR\";\nIfcSensorTypeEnum.MOVEMENTSENSOR = \"MOVEMENTSENSOR\";\nIfcSensorTypeEnum.PHSENSOR = \"PHSENSOR\";\nIfcSensorTypeEnum.PRESSURESENSOR = \"PRESSURESENSOR\";\nIfcSensorTypeEnum.RADIATIONSENSOR = \"RADIATIONSENSOR\";\nIfcSensorTypeEnum.RADIOACTIVITYSENSOR = \"RADIOACTIVITYSENSOR\";\nIfcSensorTypeEnum.SMOKESENSOR = \"SMOKESENSOR\";\nIfcSensorTypeEnum.SOUNDSENSOR = \"SOUNDSENSOR\";\nIfcSensorTypeEnum.TEMPERATURESENSOR = \"TEMPERATURESENSOR\";\nIfcSensorTypeEnum.WINDSENSOR = \"WINDSENSOR\";\nIfcSensorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSensorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSequenceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSequenceEnum.START_START = \"START_START\";\nIfcSequenceEnum.START_FINISH = \"START_FINISH\";\nIfcSequenceEnum.FINISH_START = \"FINISH_START\";\nIfcSequenceEnum.FINISH_FINISH = \"FINISH_FINISH\";\nIfcSequenceEnum.USERDEFINED = \"USERDEFINED\";\nIfcSequenceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcShadingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcShadingDeviceTypeEnum.JALOUSIE = \"JALOUSIE\";\nIfcShadingDeviceTypeEnum.SHUTTER = \"SHUTTER\";\nIfcShadingDeviceTypeEnum.AWNING = \"AWNING\";\nIfcShadingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcShadingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSimplePropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSimplePropertyTemplateTypeEnum.P_SINGLEVALUE = \"P_SINGLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_ENUMERATEDVALUE = \"P_ENUMERATEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_BOUNDEDVALUE = \"P_BOUNDEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_LISTVALUE = \"P_LISTVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_TABLEVALUE = \"P_TABLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_REFERENCEVALUE = \"P_REFERENCEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.Q_LENGTH = \"Q_LENGTH\";\nIfcSimplePropertyTemplateTypeEnum.Q_AREA = \"Q_AREA\";\nIfcSimplePropertyTemplateTypeEnum.Q_VOLUME = \"Q_VOLUME\";\nIfcSimplePropertyTemplateTypeEnum.Q_COUNT = \"Q_COUNT\";\nIfcSimplePropertyTemplateTypeEnum.Q_WEIGHT = \"Q_WEIGHT\";\nIfcSimplePropertyTemplateTypeEnum.Q_TIME = \"Q_TIME\";\nvar IfcSlabTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSlabTypeEnum.FLOOR = \"FLOOR\";\nIfcSlabTypeEnum.ROOF = \"ROOF\";\nIfcSlabTypeEnum.LANDING = \"LANDING\";\nIfcSlabTypeEnum.BASESLAB = \"BASESLAB\";\nIfcSlabTypeEnum.APPROACH_SLAB = \"APPROACH_SLAB\";\nIfcSlabTypeEnum.PAVING = \"PAVING\";\nIfcSlabTypeEnum.WEARING = \"WEARING\";\nIfcSlabTypeEnum.SIDEWALK = \"SIDEWALK\";\nIfcSlabTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSlabTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSolarDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSolarDeviceTypeEnum.SOLARCOLLECTOR = \"SOLARCOLLECTOR\";\nIfcSolarDeviceTypeEnum.SOLARPANEL = \"SOLARPANEL\";\nIfcSolarDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSolarDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceHeaterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceHeaterTypeEnum.CONVECTOR = \"CONVECTOR\";\nIfcSpaceHeaterTypeEnum.RADIATOR = \"RADIATOR\";\nIfcSpaceHeaterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceHeaterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceTypeEnum.SPACE = \"SPACE\";\nIfcSpaceTypeEnum.PARKING = \"PARKING\";\nIfcSpaceTypeEnum.GFA = \"GFA\";\nIfcSpaceTypeEnum.INTERNAL = \"INTERNAL\";\nIfcSpaceTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcSpaceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpatialZoneTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpatialZoneTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcSpatialZoneTypeEnum.FIRESAFETY = \"FIRESAFETY\";\nIfcSpatialZoneTypeEnum.LIGHTING = \"LIGHTING\";\nIfcSpatialZoneTypeEnum.OCCUPANCY = \"OCCUPANCY\";\nIfcSpatialZoneTypeEnum.SECURITY = \"SECURITY\";\nIfcSpatialZoneTypeEnum.THERMAL = \"THERMAL\";\nIfcSpatialZoneTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcSpatialZoneTypeEnum.VENTILATION = \"VENTILATION\";\nIfcSpatialZoneTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpatialZoneTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStackTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStackTerminalTypeEnum.BIRDCAGE = \"BIRDCAGE\";\nIfcStackTerminalTypeEnum.COWL = \"COWL\";\nIfcStackTerminalTypeEnum.RAINWATERHOPPER = \"RAINWATERHOPPER\";\nIfcStackTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStackTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcStairFlightTypeEnum.WINDER = \"WINDER\";\nIfcStairFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcStairFlightTypeEnum.CURVED = \"CURVED\";\nIfcStairFlightTypeEnum.FREEFORM = \"FREEFORM\";\nIfcStairFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairTypeEnum.STRAIGHT_RUN_STAIR = \"STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.TWO_STRAIGHT_RUN_STAIR = \"TWO_STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.QUARTER_WINDING_STAIR = \"QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.QUARTER_TURN_STAIR = \"QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.HALF_WINDING_STAIR = \"HALF_WINDING_STAIR\";\nIfcStairTypeEnum.HALF_TURN_STAIR = \"HALF_TURN_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_WINDING_STAIR = \"TWO_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_TURN_STAIR = \"TWO_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_WINDING_STAIR = \"THREE_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_TURN_STAIR = \"THREE_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.SPIRAL_STAIR = \"SPIRAL_STAIR\";\nIfcStairTypeEnum.DOUBLE_RETURN_STAIR = \"DOUBLE_RETURN_STAIR\";\nIfcStairTypeEnum.CURVED_RUN_STAIR = \"CURVED_RUN_STAIR\";\nIfcStairTypeEnum.TWO_CURVED_RUN_STAIR = \"TWO_CURVED_RUN_STAIR\";\nIfcStairTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStateEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStateEnum.READWRITE = \"READWRITE\";\nIfcStateEnum.READONLY = \"READONLY\";\nIfcStateEnum.LOCKED = \"LOCKED\";\nIfcStateEnum.READWRITELOCKED = \"READWRITELOCKED\";\nIfcStateEnum.READONLYLOCKED = \"READONLYLOCKED\";\nvar IfcStructuralCurveActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralCurveActivityTypeEnum.LINEAR = \"LINEAR\";\nIfcStructuralCurveActivityTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcStructuralCurveActivityTypeEnum.EQUIDISTANT = \"EQUIDISTANT\";\nIfcStructuralCurveActivityTypeEnum.SINUS = \"SINUS\";\nIfcStructuralCurveActivityTypeEnum.PARABOLA = \"PARABOLA\";\nIfcStructuralCurveActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralCurveActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralCurveMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveMemberTypeEnum.RIGID_JOINED_MEMBER = \"RIGID_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.PIN_JOINED_MEMBER = \"PIN_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.CABLE = \"CABLE\";\nIfcStructuralCurveMemberTypeEnum.TENSION_MEMBER = \"TENSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.COMPRESSION_MEMBER = \"COMPRESSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralSurfaceActivityTypeEnum.BILINEAR = \"BILINEAR\";\nIfcStructuralSurfaceActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralSurfaceActivityTypeEnum.ISOCONTOUR = \"ISOCONTOUR\";\nIfcStructuralSurfaceActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceMemberTypeEnum.BENDING_ELEMENT = \"BENDING_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.MEMBRANE_ELEMENT = \"MEMBRANE_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.SHELL = \"SHELL\";\nIfcStructuralSurfaceMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSubContractResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSubContractResourceTypeEnum.PURCHASE = \"PURCHASE\";\nIfcSubContractResourceTypeEnum.WORK = \"WORK\";\nIfcSubContractResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSubContractResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceFeatureTypeEnum.MARK = \"MARK\";\nIfcSurfaceFeatureTypeEnum.TAG = \"TAG\";\nIfcSurfaceFeatureTypeEnum.TREATMENT = \"TREATMENT\";\nIfcSurfaceFeatureTypeEnum.DEFECT = \"DEFECT\";\nIfcSurfaceFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSurfaceFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceSide = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceSide.POSITIVE = \"POSITIVE\";\nIfcSurfaceSide.NEGATIVE = \"NEGATIVE\";\nIfcSurfaceSide.BOTH = \"BOTH\";\nvar IfcSwitchingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSwitchingDeviceTypeEnum.CONTACTOR = \"CONTACTOR\";\nIfcSwitchingDeviceTypeEnum.DIMMERSWITCH = \"DIMMERSWITCH\";\nIfcSwitchingDeviceTypeEnum.EMERGENCYSTOP = \"EMERGENCYSTOP\";\nIfcSwitchingDeviceTypeEnum.KEYPAD = \"KEYPAD\";\nIfcSwitchingDeviceTypeEnum.MOMENTARYSWITCH = \"MOMENTARYSWITCH\";\nIfcSwitchingDeviceTypeEnum.SELECTORSWITCH = \"SELECTORSWITCH\";\nIfcSwitchingDeviceTypeEnum.STARTER = \"STARTER\";\nIfcSwitchingDeviceTypeEnum.SWITCHDISCONNECTOR = \"SWITCHDISCONNECTOR\";\nIfcSwitchingDeviceTypeEnum.TOGGLESWITCH = \"TOGGLESWITCH\";\nIfcSwitchingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSwitchingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSystemFurnitureElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSystemFurnitureElementTypeEnum.PANEL = \"PANEL\";\nIfcSystemFurnitureElementTypeEnum.WORKSURFACE = \"WORKSURFACE\";\nIfcSystemFurnitureElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSystemFurnitureElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTankTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTankTypeEnum.BASIN = \"BASIN\";\nIfcTankTypeEnum.BREAKPRESSURE = \"BREAKPRESSURE\";\nIfcTankTypeEnum.EXPANSION = \"EXPANSION\";\nIfcTankTypeEnum.FEEDANDEXPANSION = \"FEEDANDEXPANSION\";\nIfcTankTypeEnum.PRESSUREVESSEL = \"PRESSUREVESSEL\";\nIfcTankTypeEnum.STORAGE = \"STORAGE\";\nIfcTankTypeEnum.VESSEL = \"VESSEL\";\nIfcTankTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTankTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskDurationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskDurationEnum.ELAPSEDTIME = \"ELAPSEDTIME\";\nIfcTaskDurationEnum.WORKTIME = \"WORKTIME\";\nIfcTaskDurationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskTypeEnum.ATTENDANCE = \"ATTENDANCE\";\nIfcTaskTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcTaskTypeEnum.DEMOLITION = \"DEMOLITION\";\nIfcTaskTypeEnum.DISMANTLE = \"DISMANTLE\";\nIfcTaskTypeEnum.DISPOSAL = \"DISPOSAL\";\nIfcTaskTypeEnum.INSTALLATION = \"INSTALLATION\";\nIfcTaskTypeEnum.LOGISTIC = \"LOGISTIC\";\nIfcTaskTypeEnum.MAINTENANCE = \"MAINTENANCE\";\nIfcTaskTypeEnum.MOVE = \"MOVE\";\nIfcTaskTypeEnum.OPERATION = \"OPERATION\";\nIfcTaskTypeEnum.REMOVAL = \"REMOVAL\";\nIfcTaskTypeEnum.RENOVATION = \"RENOVATION\";\nIfcTaskTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTaskTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonAnchorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonAnchorTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonAnchorTypeEnum.FIXED_END = \"FIXED_END\";\nIfcTendonAnchorTypeEnum.TENSIONING_END = \"TENSIONING_END\";\nIfcTendonAnchorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonAnchorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonConduitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonConduitTypeEnum.DUCT = \"DUCT\";\nIfcTendonConduitTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonConduitTypeEnum.GROUTING_DUCT = \"GROUTING_DUCT\";\nIfcTendonConduitTypeEnum.TRUMPET = \"TRUMPET\";\nIfcTendonConduitTypeEnum.DIABOLO = \"DIABOLO\";\nIfcTendonConduitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonConduitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonTypeEnum.BAR = \"BAR\";\nIfcTendonTypeEnum.COATED = \"COATED\";\nIfcTendonTypeEnum.STRAND = \"STRAND\";\nIfcTendonTypeEnum.WIRE = \"WIRE\";\nIfcTendonTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTextPath = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTextPath.LEFT = \"LEFT\";\nIfcTextPath.RIGHT = \"RIGHT\";\nIfcTextPath.UP = \"UP\";\nIfcTextPath.DOWN = \"DOWN\";\nvar IfcTimeSeriesDataTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTimeSeriesDataTypeEnum.CONTINUOUS = \"CONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.DISCRETE = \"DISCRETE\";\nIfcTimeSeriesDataTypeEnum.DISCRETEBINARY = \"DISCRETEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISEBINARY = \"PIECEWISEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONSTANT = \"PIECEWISECONSTANT\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONTINUOUS = \"PIECEWISECONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransformerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransformerTypeEnum.CURRENT = \"CURRENT\";\nIfcTransformerTypeEnum.FREQUENCY = \"FREQUENCY\";\nIfcTransformerTypeEnum.INVERTER = \"INVERTER\";\nIfcTransformerTypeEnum.RECTIFIER = \"RECTIFIER\";\nIfcTransformerTypeEnum.VOLTAGE = \"VOLTAGE\";\nIfcTransformerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransformerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransitionCode = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCode.DISCONTINUOUS = \"DISCONTINUOUS\";\nIfcTransitionCode.CONTINUOUS = \"CONTINUOUS\";\nIfcTransitionCode.CONTSAMEGRADIENT = \"CONTSAMEGRADIENT\";\nIfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE = \"CONTSAMEGRADIENTSAMECURVATURE\";\nvar IfcTransitionCurveType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCurveType.BIQUADRATICPARABOLA = \"BIQUADRATICPARABOLA\";\nIfcTransitionCurveType.BLOSSCURVE = \"BLOSSCURVE\";\nIfcTransitionCurveType.CLOTHOIDCURVE = \"CLOTHOIDCURVE\";\nIfcTransitionCurveType.COSINECURVE = \"COSINECURVE\";\nIfcTransitionCurveType.CUBICPARABOLA = \"CUBICPARABOLA\";\nIfcTransitionCurveType.SINECURVE = \"SINECURVE\";\nvar IfcTransportElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransportElementTypeEnum.ELEVATOR = \"ELEVATOR\";\nIfcTransportElementTypeEnum.ESCALATOR = \"ESCALATOR\";\nIfcTransportElementTypeEnum.MOVINGWALKWAY = \"MOVINGWALKWAY\";\nIfcTransportElementTypeEnum.CRANEWAY = \"CRANEWAY\";\nIfcTransportElementTypeEnum.LIFTINGGEAR = \"LIFTINGGEAR\";\nIfcTransportElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransportElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTrimmingPreference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTrimmingPreference.CARTESIAN = \"CARTESIAN\";\nIfcTrimmingPreference.PARAMETER = \"PARAMETER\";\nIfcTrimmingPreference.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcTubeBundleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTubeBundleTypeEnum.FINNED = \"FINNED\";\nIfcTubeBundleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTubeBundleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitEnum.ABSORBEDDOSEUNIT = \"ABSORBEDDOSEUNIT\";\nIfcUnitEnum.AMOUNTOFSUBSTANCEUNIT = \"AMOUNTOFSUBSTANCEUNIT\";\nIfcUnitEnum.AREAUNIT = \"AREAUNIT\";\nIfcUnitEnum.DOSEEQUIVALENTUNIT = \"DOSEEQUIVALENTUNIT\";\nIfcUnitEnum.ELECTRICCAPACITANCEUNIT = \"ELECTRICCAPACITANCEUNIT\";\nIfcUnitEnum.ELECTRICCHARGEUNIT = \"ELECTRICCHARGEUNIT\";\nIfcUnitEnum.ELECTRICCONDUCTANCEUNIT = \"ELECTRICCONDUCTANCEUNIT\";\nIfcUnitEnum.ELECTRICCURRENTUNIT = \"ELECTRICCURRENTUNIT\";\nIfcUnitEnum.ELECTRICRESISTANCEUNIT = \"ELECTRICRESISTANCEUNIT\";\nIfcUnitEnum.ELECTRICVOLTAGEUNIT = \"ELECTRICVOLTAGEUNIT\";\nIfcUnitEnum.ENERGYUNIT = \"ENERGYUNIT\";\nIfcUnitEnum.FORCEUNIT = \"FORCEUNIT\";\nIfcUnitEnum.FREQUENCYUNIT = \"FREQUENCYUNIT\";\nIfcUnitEnum.ILLUMINANCEUNIT = \"ILLUMINANCEUNIT\";\nIfcUnitEnum.INDUCTANCEUNIT = \"INDUCTANCEUNIT\";\nIfcUnitEnum.LENGTHUNIT = \"LENGTHUNIT\";\nIfcUnitEnum.LUMINOUSFLUXUNIT = \"LUMINOUSFLUXUNIT\";\nIfcUnitEnum.LUMINOUSINTENSITYUNIT = \"LUMINOUSINTENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXDENSITYUNIT = \"MAGNETICFLUXDENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXUNIT = \"MAGNETICFLUXUNIT\";\nIfcUnitEnum.MASSUNIT = \"MASSUNIT\";\nIfcUnitEnum.PLANEANGLEUNIT = \"PLANEANGLEUNIT\";\nIfcUnitEnum.POWERUNIT = \"POWERUNIT\";\nIfcUnitEnum.PRESSUREUNIT = \"PRESSUREUNIT\";\nIfcUnitEnum.RADIOACTIVITYUNIT = \"RADIOACTIVITYUNIT\";\nIfcUnitEnum.SOLIDANGLEUNIT = \"SOLIDANGLEUNIT\";\nIfcUnitEnum.THERMODYNAMICTEMPERATUREUNIT = \"THERMODYNAMICTEMPERATUREUNIT\";\nIfcUnitEnum.TIMEUNIT = \"TIMEUNIT\";\nIfcUnitEnum.VOLUMEUNIT = \"VOLUMEUNIT\";\nIfcUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcUnitaryControlElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryControlElementTypeEnum.ALARMPANEL = \"ALARMPANEL\";\nIfcUnitaryControlElementTypeEnum.CONTROLPANEL = \"CONTROLPANEL\";\nIfcUnitaryControlElementTypeEnum.GASDETECTIONPANEL = \"GASDETECTIONPANEL\";\nIfcUnitaryControlElementTypeEnum.INDICATORPANEL = \"INDICATORPANEL\";\nIfcUnitaryControlElementTypeEnum.MIMICPANEL = \"MIMICPANEL\";\nIfcUnitaryControlElementTypeEnum.HUMIDISTAT = \"HUMIDISTAT\";\nIfcUnitaryControlElementTypeEnum.THERMOSTAT = \"THERMOSTAT\";\nIfcUnitaryControlElementTypeEnum.WEATHERSTATION = \"WEATHERSTATION\";\nIfcUnitaryControlElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryControlElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitaryEquipmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryEquipmentTypeEnum.AIRHANDLER = \"AIRHANDLER\";\nIfcUnitaryEquipmentTypeEnum.AIRCONDITIONINGUNIT = \"AIRCONDITIONINGUNIT\";\nIfcUnitaryEquipmentTypeEnum.DEHUMIDIFIER = \"DEHUMIDIFIER\";\nIfcUnitaryEquipmentTypeEnum.SPLITSYSTEM = \"SPLITSYSTEM\";\nIfcUnitaryEquipmentTypeEnum.ROOFTOPUNIT = \"ROOFTOPUNIT\";\nIfcUnitaryEquipmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryEquipmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcValveTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcValveTypeEnum.AIRRELEASE = \"AIRRELEASE\";\nIfcValveTypeEnum.ANTIVACUUM = \"ANTIVACUUM\";\nIfcValveTypeEnum.CHANGEOVER = \"CHANGEOVER\";\nIfcValveTypeEnum.CHECK = \"CHECK\";\nIfcValveTypeEnum.COMMISSIONING = \"COMMISSIONING\";\nIfcValveTypeEnum.DIVERTING = \"DIVERTING\";\nIfcValveTypeEnum.DRAWOFFCOCK = \"DRAWOFFCOCK\";\nIfcValveTypeEnum.DOUBLECHECK = \"DOUBLECHECK\";\nIfcValveTypeEnum.DOUBLEREGULATING = \"DOUBLEREGULATING\";\nIfcValveTypeEnum.FAUCET = \"FAUCET\";\nIfcValveTypeEnum.FLUSHING = \"FLUSHING\";\nIfcValveTypeEnum.GASCOCK = \"GASCOCK\";\nIfcValveTypeEnum.GASTAP = \"GASTAP\";\nIfcValveTypeEnum.ISOLATING = \"ISOLATING\";\nIfcValveTypeEnum.MIXING = \"MIXING\";\nIfcValveTypeEnum.PRESSUREREDUCING = \"PRESSUREREDUCING\";\nIfcValveTypeEnum.PRESSURERELIEF = \"PRESSURERELIEF\";\nIfcValveTypeEnum.REGULATING = \"REGULATING\";\nIfcValveTypeEnum.SAFETYCUTOFF = \"SAFETYCUTOFF\";\nIfcValveTypeEnum.STEAMTRAP = \"STEAMTRAP\";\nIfcValveTypeEnum.STOPCOCK = \"STOPCOCK\";\nIfcValveTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcValveTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationDamperTypeEnum.BENDING_YIELD = \"BENDING_YIELD\";\nIfcVibrationDamperTypeEnum.SHEAR_YIELD = \"SHEAR_YIELD\";\nIfcVibrationDamperTypeEnum.AXIAL_YIELD = \"AXIAL_YIELD\";\nIfcVibrationDamperTypeEnum.FRICTION = \"FRICTION\";\nIfcVibrationDamperTypeEnum.VISCOUS = \"VISCOUS\";\nIfcVibrationDamperTypeEnum.RUBBER = \"RUBBER\";\nIfcVibrationDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationIsolatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationIsolatorTypeEnum.COMPRESSION = \"COMPRESSION\";\nIfcVibrationIsolatorTypeEnum.SPRING = \"SPRING\";\nIfcVibrationIsolatorTypeEnum.BASE = \"BASE\";\nIfcVibrationIsolatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationIsolatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVoidingFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVoidingFeatureTypeEnum.CUTOUT = \"CUTOUT\";\nIfcVoidingFeatureTypeEnum.NOTCH = \"NOTCH\";\nIfcVoidingFeatureTypeEnum.HOLE = \"HOLE\";\nIfcVoidingFeatureTypeEnum.MITER = \"MITER\";\nIfcVoidingFeatureTypeEnum.CHAMFER = \"CHAMFER\";\nIfcVoidingFeatureTypeEnum.EDGE = \"EDGE\";\nIfcVoidingFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVoidingFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWallTypeEnum.MOVABLE = \"MOVABLE\";\nIfcWallTypeEnum.PARAPET = \"PARAPET\";\nIfcWallTypeEnum.PARTITIONING = \"PARTITIONING\";\nIfcWallTypeEnum.PLUMBINGWALL = \"PLUMBINGWALL\";\nIfcWallTypeEnum.SHEAR = \"SHEAR\";\nIfcWallTypeEnum.SOLIDWALL = \"SOLIDWALL\";\nIfcWallTypeEnum.STANDARD = \"STANDARD\";\nIfcWallTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcWallTypeEnum.ELEMENTEDWALL = \"ELEMENTEDWALL\";\nIfcWallTypeEnum.RETAININGWALL = \"RETAININGWALL\";\nIfcWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWasteTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWasteTerminalTypeEnum.FLOORTRAP = \"FLOORTRAP\";\nIfcWasteTerminalTypeEnum.FLOORWASTE = \"FLOORWASTE\";\nIfcWasteTerminalTypeEnum.GULLYSUMP = \"GULLYSUMP\";\nIfcWasteTerminalTypeEnum.GULLYTRAP = \"GULLYTRAP\";\nIfcWasteTerminalTypeEnum.ROOFDRAIN = \"ROOFDRAIN\";\nIfcWasteTerminalTypeEnum.WASTEDISPOSALUNIT = \"WASTEDISPOSALUNIT\";\nIfcWasteTerminalTypeEnum.WASTETRAP = \"WASTETRAP\";\nIfcWasteTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWasteTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelOperationEnum.SIDEHUNGRIGHTHAND = \"SIDEHUNGRIGHTHAND\";\nIfcWindowPanelOperationEnum.SIDEHUNGLEFTHAND = \"SIDEHUNGLEFTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNRIGHTHAND = \"TILTANDTURNRIGHTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNLEFTHAND = \"TILTANDTURNLEFTHAND\";\nIfcWindowPanelOperationEnum.TOPHUNG = \"TOPHUNG\";\nIfcWindowPanelOperationEnum.BOTTOMHUNG = \"BOTTOMHUNG\";\nIfcWindowPanelOperationEnum.PIVOTHORIZONTAL = \"PIVOTHORIZONTAL\";\nIfcWindowPanelOperationEnum.PIVOTVERTICAL = \"PIVOTVERTICAL\";\nIfcWindowPanelOperationEnum.SLIDINGHORIZONTAL = \"SLIDINGHORIZONTAL\";\nIfcWindowPanelOperationEnum.SLIDINGVERTICAL = \"SLIDINGVERTICAL\";\nIfcWindowPanelOperationEnum.REMOVABLECASEMENT = \"REMOVABLECASEMENT\";\nIfcWindowPanelOperationEnum.FIXEDCASEMENT = \"FIXEDCASEMENT\";\nIfcWindowPanelOperationEnum.OTHEROPERATION = \"OTHEROPERATION\";\nIfcWindowPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelPositionEnum.LEFT = \"LEFT\";\nIfcWindowPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcWindowPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcWindowPanelPositionEnum.BOTTOM = \"BOTTOM\";\nIfcWindowPanelPositionEnum.TOP = \"TOP\";\nIfcWindowPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcWindowStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcWindowStyleConstructionEnum.STEEL = \"STEEL\";\nIfcWindowStyleConstructionEnum.WOOD = \"WOOD\";\nIfcWindowStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcWindowStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcWindowStyleConstructionEnum.OTHER_CONSTRUCTION = \"OTHER_CONSTRUCTION\";\nIfcWindowStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleOperationEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypeEnum.WINDOW = \"WINDOW\";\nIfcWindowTypeEnum.SKYLIGHT = \"SKYLIGHT\";\nIfcWindowTypeEnum.LIGHTDOME = \"LIGHTDOME\";\nIfcWindowTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypePartitioningEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypePartitioningEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypePartitioningEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkCalendarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkCalendarTypeEnum.FIRSTSHIFT = \"FIRSTSHIFT\";\nIfcWorkCalendarTypeEnum.SECONDSHIFT = \"SECONDSHIFT\";\nIfcWorkCalendarTypeEnum.THIRDSHIFT = \"THIRDSHIFT\";\nIfcWorkCalendarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkCalendarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkPlanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkPlanTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkPlanTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkPlanTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkPlanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkPlanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkScheduleTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkScheduleTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkScheduleTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionRequest = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcActionRequest(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    return new IfcActor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    return args;\n  }\n};\nvar IfcActorRole = class {\n  constructor(expressID, type, Role, UserDefinedRole, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Role = Role;\n    this.UserDefinedRole = UserDefinedRole;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Role = tape[ptr++];\n    let UserDefinedRole = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcActorRole(expressID, type, Role, UserDefinedRole, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Role);\n    ;\n    args.push(this.UserDefinedRole);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcActuator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcActuatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    return new IfcAddress(expressID, type, Purpose, Description, UserDefinedPurpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcAdvancedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcAdvancedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedFace = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcAdvancedFace(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecovery = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecovery(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecoveryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecoveryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarm = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarm(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarmType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarmType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlignment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontal = class {\n  constructor(expressID, type, StartDistAlong, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartDistAlong = StartDistAlong;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartDistAlong = tape[ptr++];\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DHorizontal(expressID, type, StartDistAlong, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.CurveGeometry = CurveGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let CurveGeometry = tape[ptr++];\n    return new IfcAlignment2DHorizontalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.CurveGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    return new IfcAlignment2DSegment(expressID, type, TangentialContinuity, StartTag, EndTag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegCircularArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.Radius = Radius;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegCircularArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegLine = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerSegLine(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegParabolicArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.ParabolaConstant = ParabolaConstant;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let ParabolaConstant = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegParabolicArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.ParabolaConstant);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVertical = class {\n  constructor(expressID, type, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DVertical(expressID, type, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerticalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerticalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignmentCurve = class {\n  constructor(expressID, type, Horizontal, Vertical, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Horizontal = Horizontal;\n    this.Vertical = Vertical;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Horizontal = tape[ptr++];\n    let Vertical = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcAlignmentCurve(expressID, type, Horizontal, Vertical, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Horizontal);\n    ;\n    args.push(this.Vertical);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcAnnotation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotationFillArea = class {\n  constructor(expressID, type, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcAnnotationFillArea(expressID, type, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcApplication = class {\n  constructor(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ApplicationDeveloper = ApplicationDeveloper;\n    this.Version = Version;\n    this.ApplicationFullName = ApplicationFullName;\n    this.ApplicationIdentifier = ApplicationIdentifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ApplicationDeveloper = tape[ptr++];\n    let Version = tape[ptr++];\n    let ApplicationFullName = tape[ptr++];\n    let ApplicationIdentifier = tape[ptr++];\n    return new IfcApplication(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ApplicationDeveloper);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.ApplicationFullName);\n    ;\n    args.push(this.ApplicationIdentifier);\n    ;\n    return args;\n  }\n};\nvar IfcAppliedValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcAppliedValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcApproval = class {\n  constructor(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.TimeOfApproval = TimeOfApproval;\n    this.Status = Status;\n    this.Level = Level;\n    this.Qualifier = Qualifier;\n    this.RequestingApproval = RequestingApproval;\n    this.GivingApproval = GivingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TimeOfApproval = tape[ptr++];\n    let Status = tape[ptr++];\n    let Level = tape[ptr++];\n    let Qualifier = tape[ptr++];\n    let RequestingApproval = tape[ptr++];\n    let GivingApproval = tape[ptr++];\n    return new IfcApproval(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TimeOfApproval);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.Level);\n    ;\n    args.push(this.Qualifier);\n    ;\n    args.push(this.RequestingApproval);\n    ;\n    args.push(this.GivingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingApproval, RelatedApprovals) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingApproval = RelatingApproval;\n    this.RelatedApprovals = RelatedApprovals;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    let RelatedApprovals = tape[ptr++];\n    return new IfcApprovalRelationship(expressID, type, Name, Description, RelatingApproval, RelatedApprovals);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    args.push(this.RelatedApprovals);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryClosedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    return new IfcArbitraryClosedProfileDef(expressID, type, ProfileType, ProfileName, OuterCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryOpenProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    return new IfcArbitraryOpenProfileDef(expressID, type, ProfileType, ProfileName, Curve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryProfileDefWithVoids = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n    this.InnerCurves = InnerCurves;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    let InnerCurves = tape[ptr++];\n    return new IfcArbitraryProfileDefWithVoids(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    args.push(this.InnerCurves);\n    ;\n    return args;\n  }\n};\nvar IfcAsset = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.OriginalValue = OriginalValue;\n    this.CurrentValue = CurrentValue;\n    this.TotalReplacementCost = TotalReplacementCost;\n    this.Owner = Owner;\n    this.User = User;\n    this.ResponsiblePerson = ResponsiblePerson;\n    this.IncorporationDate = IncorporationDate;\n    this.DepreciatedValue = DepreciatedValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let TotalReplacementCost = tape[ptr++];\n    let Owner = tape[ptr++];\n    let User = tape[ptr++];\n    let ResponsiblePerson = tape[ptr++];\n    let IncorporationDate = tape[ptr++];\n    let DepreciatedValue = tape[ptr++];\n    return new IfcAsset(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.TotalReplacementCost);\n    ;\n    args.push(this.Owner);\n    ;\n    args.push(this.User);\n    ;\n    args.push(this.ResponsiblePerson);\n    ;\n    args.push(this.IncorporationDate);\n    ;\n    args.push(this.DepreciatedValue);\n    ;\n    return args;\n  }\n};\nvar IfcAsymmetricIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomFlangeWidth = BottomFlangeWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.BottomFlangeThickness = BottomFlangeThickness;\n    this.BottomFlangeFilletRadius = BottomFlangeFilletRadius;\n    this.TopFlangeWidth = TopFlangeWidth;\n    this.TopFlangeThickness = TopFlangeThickness;\n    this.TopFlangeFilletRadius = TopFlangeFilletRadius;\n    this.BottomFlangeEdgeRadius = BottomFlangeEdgeRadius;\n    this.BottomFlangeSlope = BottomFlangeSlope;\n    this.TopFlangeEdgeRadius = TopFlangeEdgeRadius;\n    this.TopFlangeSlope = TopFlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomFlangeWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let BottomFlangeThickness = tape[ptr++];\n    let BottomFlangeFilletRadius = tape[ptr++];\n    let TopFlangeWidth = tape[ptr++];\n    let TopFlangeThickness = tape[ptr++];\n    let TopFlangeFilletRadius = tape[ptr++];\n    let BottomFlangeEdgeRadius = tape[ptr++];\n    let BottomFlangeSlope = tape[ptr++];\n    let TopFlangeEdgeRadius = tape[ptr++];\n    let TopFlangeSlope = tape[ptr++];\n    return new IfcAsymmetricIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomFlangeWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.BottomFlangeThickness);\n    ;\n    args.push(this.BottomFlangeFilletRadius);\n    ;\n    args.push(this.TopFlangeWidth);\n    ;\n    args.push(this.TopFlangeThickness);\n    ;\n    args.push(this.TopFlangeFilletRadius);\n    ;\n    args.push(this.BottomFlangeEdgeRadius);\n    ;\n    args.push(this.BottomFlangeSlope);\n    ;\n    args.push(this.TopFlangeEdgeRadius);\n    ;\n    args.push(this.TopFlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAxis1Placement = class {\n  constructor(expressID, type, Location, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcAxis1Placement(expressID, type, Location, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement2D = class {\n  constructor(expressID, type, Location, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement2D(expressID, type, Location, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement3D = class {\n  constructor(expressID, type, Location, Axis, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement3D(expressID, type, Location, Axis, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurve = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineCurve(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurface = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineSurface(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBlobTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.RasterFormat = RasterFormat;\n    this.RasterCode = RasterCode;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let RasterFormat = tape[ptr++];\n    let RasterCode = tape[ptr++];\n    return new IfcBlobTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.RasterFormat);\n    ;\n    args.push(this.RasterCode);\n    ;\n    return args;\n  }\n};\nvar IfcBlock = class {\n  constructor(expressID, type, Position, XLength, YLength, ZLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.ZLength = ZLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let ZLength = tape[ptr++];\n    return new IfcBlock(expressID, type, Position, XLength, YLength, ZLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.ZLength);\n    ;\n    return args;\n  }\n};\nvar IfcBoiler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoiler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBoilerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoilerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanClippingResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanClippingResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcBoundaryCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryEdgeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;\n    this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;\n    this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;\n    this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;\n    this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;\n    this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByLengthX = tape[ptr++];\n    let TranslationalStiffnessByLengthY = tape[ptr++];\n    let TranslationalStiffnessByLengthZ = tape[ptr++];\n    let RotationalStiffnessByLengthX = tape[ptr++];\n    let RotationalStiffnessByLengthY = tape[ptr++];\n    let RotationalStiffnessByLengthZ = tape[ptr++];\n    return new IfcBoundaryEdgeCondition(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByLengthX);\n    ;\n    args.push(this.TranslationalStiffnessByLengthY);\n    ;\n    args.push(this.TranslationalStiffnessByLengthZ);\n    ;\n    args.push(this.RotationalStiffnessByLengthX);\n    ;\n    args.push(this.RotationalStiffnessByLengthY);\n    ;\n    args.push(this.RotationalStiffnessByLengthZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryFaceCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByAreaX = TranslationalStiffnessByAreaX;\n    this.TranslationalStiffnessByAreaY = TranslationalStiffnessByAreaY;\n    this.TranslationalStiffnessByAreaZ = TranslationalStiffnessByAreaZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByAreaX = tape[ptr++];\n    let TranslationalStiffnessByAreaY = tape[ptr++];\n    let TranslationalStiffnessByAreaZ = tape[ptr++];\n    return new IfcBoundaryFaceCondition(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByAreaX);\n    ;\n    args.push(this.TranslationalStiffnessByAreaY);\n    ;\n    args.push(this.TranslationalStiffnessByAreaZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    return new IfcBoundaryNodeCondition(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeConditionWarping = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n    this.WarpingStiffness = WarpingStiffness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    let WarpingStiffness = tape[ptr++];\n    return new IfcBoundaryNodeConditionWarping(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    args.push(this.WarpingStiffness);\n    ;\n    return args;\n  }\n};\nvar IfcBoundedCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundedSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundingBox = class {\n  constructor(expressID, type, Corner, XDim, YDim, ZDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Corner = Corner;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.ZDim = ZDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Corner = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let ZDim = tape[ptr++];\n    return new IfcBoundingBox(expressID, type, Corner, XDim, YDim, ZDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Corner);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.ZDim);\n    ;\n    return args;\n  }\n};\nvar IfcBoxedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Enclosure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Enclosure = Enclosure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Enclosure = tape[ptr++];\n    return new IfcBoxedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Enclosure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Enclosure);\n    ;\n    return args;\n  }\n};\nvar IfcBridge = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridge(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBridgePart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridgePart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuilding = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.ElevationOfRefHeight = ElevationOfRefHeight;\n    this.ElevationOfTerrain = ElevationOfTerrain;\n    this.BuildingAddress = BuildingAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let ElevationOfRefHeight = tape[ptr++];\n    let ElevationOfTerrain = tape[ptr++];\n    let BuildingAddress = tape[ptr++];\n    return new IfcBuilding(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.ElevationOfRefHeight);\n    ;\n    args.push(this.ElevationOfTerrain);\n    ;\n    args.push(this.BuildingAddress);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcBuildingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPartType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPartType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcBuildingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingStorey = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.Elevation = Elevation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let Elevation = tape[ptr++];\n    return new IfcBuildingStorey(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.Elevation);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcBuildingSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcBurner = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurner(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBurnerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurnerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.WallThickness = WallThickness;\n    this.Girth = Girth;\n    this.InternalFilletRadius = InternalFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let Girth = tape[ptr++];\n    let InternalFilletRadius = tape[ptr++];\n    return new IfcCShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.Girth);\n    ;\n    args.push(this.InternalFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPoint = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcCartesianPoint(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCartesianPointList(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCartesianPointList2D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList2D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList3D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList3D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator2D(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Scale2 = Scale2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    return new IfcCartesianTransformationOperator2DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Scale2);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3D(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n    this.Scale2 = Scale2;\n    this.Scale3 = Scale3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    let Scale3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    args.push(this.Scale2);\n    ;\n    args.push(this.Scale3);\n    ;\n    return args;\n  }\n};\nvar IfcCenterLineProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcCenterLineProfileDef(expressID, type, ProfileType, ProfileName, Curve, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcChiller = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChiller(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChillerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChillerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimney = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimney(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimneyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimneyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCircle = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircle(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.WallThickness = WallThickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    return new IfcCircleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.WallThickness);\n    ;\n    return args;\n  }\n};\nvar IfcCircleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircleProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircularArcSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.Radius = Radius;\n    this.IsCCW = IsCCW;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsCCW = tape[ptr++];\n    return new IfcCircularArcSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsCCW);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcCivilElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcCivilElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcClassification = class {\n  constructor(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Source = Source;\n    this.Edition = Edition;\n    this.EditionDate = EditionDate;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.ReferenceTokens = ReferenceTokens;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Source = tape[ptr++];\n    let Edition = tape[ptr++];\n    let EditionDate = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let ReferenceTokens = tape[ptr++];\n    return new IfcClassification(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Source);\n    ;\n    args.push(this.Edition);\n    ;\n    args.push(this.EditionDate);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.ReferenceTokens);\n    ;\n    return args;\n  }\n};\nvar IfcClassificationReference = class {\n  constructor(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.ReferencedSource = ReferencedSource;\n    this.Description = Description;\n    this.Sort = Sort;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let ReferencedSource = tape[ptr++];\n    let Description = tape[ptr++];\n    let Sort = tape[ptr++];\n    return new IfcClassificationReference(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ReferencedSource);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Sort);\n    ;\n    return args;\n  }\n};\nvar IfcClosedShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcClosedShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcCoil = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoil(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoilType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoilType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgb = class {\n  constructor(expressID, type, Name, Red, Green, Blue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Red = Red;\n    this.Green = Green;\n    this.Blue = Blue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Red = tape[ptr++];\n    let Green = tape[ptr++];\n    let Blue = tape[ptr++];\n    return new IfcColourRgb(expressID, type, Name, Red, Green, Blue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Red);\n    ;\n    args.push(this.Green);\n    ;\n    args.push(this.Blue);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgbList = class {\n  constructor(expressID, type, ColourList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ColourList = ColourList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ColourList = tape[ptr++];\n    return new IfcColourRgbList(expressID, type, ColourList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ColourList);\n    ;\n    return args;\n  }\n};\nvar IfcColourSpecification = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcColourSpecification(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcColumn = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumn(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcComplexProperty = class {\n  constructor(expressID, type, Name, Description, UsageName, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcComplexProperty(expressID, type, Name, Description, UsageName, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcComplexPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.TemplateType = TemplateType;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcComplexPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveOnSurface = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurveOnSurface(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    return new IfcCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Profiles, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Profiles = Profiles;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Profiles = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcCompositeProfileDef(expressID, type, ProfileType, ProfileName, Profiles, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Profiles);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcCompressor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCompressorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenser = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenser(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenserType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenserType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConic = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcConic(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcConnectedFaceSet = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcConnectedFaceSet(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionCurveGeometry = class {\n  constructor(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CurveOnRelatingElement = CurveOnRelatingElement;\n    this.CurveOnRelatedElement = CurveOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CurveOnRelatingElement = tape[ptr++];\n    let CurveOnRelatedElement = tape[ptr++];\n    return new IfcConnectionCurveGeometry(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CurveOnRelatingElement);\n    ;\n    args.push(this.CurveOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionGeometry = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcConnectionGeometry(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcConnectionPointEccentricity = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n    this.EccentricityInX = EccentricityInX;\n    this.EccentricityInY = EccentricityInY;\n    this.EccentricityInZ = EccentricityInZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    let EccentricityInX = tape[ptr++];\n    let EccentricityInY = tape[ptr++];\n    let EccentricityInZ = tape[ptr++];\n    return new IfcConnectionPointEccentricity(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    args.push(this.EccentricityInX);\n    ;\n    args.push(this.EccentricityInY);\n    ;\n    args.push(this.EccentricityInZ);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionPointGeometry = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    return new IfcConnectionPointGeometry(expressID, type, PointOnRelatingElement, PointOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionSurfaceGeometry = class {\n  constructor(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceOnRelatingElement = SurfaceOnRelatingElement;\n    this.SurfaceOnRelatedElement = SurfaceOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceOnRelatingElement = tape[ptr++];\n    let SurfaceOnRelatedElement = tape[ptr++];\n    return new IfcConnectionSurfaceGeometry(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceOnRelatingElement);\n    ;\n    args.push(this.SurfaceOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionVolumeGeometry = class {\n  constructor(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VolumeOnRelatingElement = VolumeOnRelatingElement;\n    this.VolumeOnRelatedElement = VolumeOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VolumeOnRelatingElement = tape[ptr++];\n    let VolumeOnRelatedElement = tape[ptr++];\n    return new IfcConnectionVolumeGeometry(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VolumeOnRelatingElement);\n    ;\n    args.push(this.VolumeOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConstraint = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    return new IfcConstraint(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcContext = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcContext(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcContextDependentUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcContextDependentUnit(expressID, type, Dimensions, UnitType, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    return new IfcControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    return args;\n  }\n};\nvar IfcController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    return new IfcConversionBasedUnit(expressID, type, Dimensions, UnitType, Name, ConversionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnitWithOffset = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n    this.ConversionOffset = ConversionOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    let ConversionOffset = tape[ptr++];\n    return new IfcConversionBasedUnitWithOffset(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    args.push(this.ConversionOffset);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTower = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTower(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTowerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTowerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateOperation = class {\n  constructor(expressID, type, SourceCRS, TargetCRS) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    return new IfcCoordinateOperation(expressID, type, SourceCRS, TargetCRS);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateReferenceSystem = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    return new IfcCoordinateReferenceSystem(expressID, type, Name, Description, GeodeticDatum, VerticalDatum);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    return args;\n  }\n};\nvar IfcCostItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.CostValues = CostValues;\n    this.CostQuantities = CostQuantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let CostValues = tape[ptr++];\n    let CostQuantities = tape[ptr++];\n    return new IfcCostItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.CostValues);\n    ;\n    args.push(this.CostQuantities);\n    ;\n    return args;\n  }\n};\nvar IfcCostSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.SubmittedOn = SubmittedOn;\n    this.UpdateDate = UpdateDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let SubmittedOn = tape[ptr++];\n    let UpdateDate = tape[ptr++];\n    return new IfcCostSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.SubmittedOn);\n    ;\n    args.push(this.UpdateDate);\n    ;\n    return args;\n  }\n};\nvar IfcCostValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcCostValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcCovering = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCovering(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoveringType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoveringType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCsgPrimitive3D = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcCsgPrimitive3D(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcCsgSolid = class {\n  constructor(expressID, type, TreeRootExpression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TreeRootExpression = TreeRootExpression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TreeRootExpression = tape[ptr++];\n    return new IfcCsgSolid(expressID, type, TreeRootExpression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TreeRootExpression);\n    ;\n    return args;\n  }\n};\nvar IfcCurrencyRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMonetaryUnit = RelatingMonetaryUnit;\n    this.RelatedMonetaryUnit = RelatedMonetaryUnit;\n    this.ExchangeRate = ExchangeRate;\n    this.RateDateTime = RateDateTime;\n    this.RateSource = RateSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMonetaryUnit = tape[ptr++];\n    let RelatedMonetaryUnit = tape[ptr++];\n    let ExchangeRate = tape[ptr++];\n    let RateDateTime = tape[ptr++];\n    let RateSource = tape[ptr++];\n    return new IfcCurrencyRelationship(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMonetaryUnit);\n    ;\n    args.push(this.RelatedMonetaryUnit);\n    ;\n    args.push(this.ExchangeRate);\n    ;\n    args.push(this.RateDateTime);\n    ;\n    args.push(this.RateSource);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCurveBoundedPlane = class {\n  constructor(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcCurveBoundedPlane(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcCurveBoundedSurface = class {\n  constructor(expressID, type, BasisSurface, Boundaries, ImplicitOuter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.Boundaries = Boundaries;\n    this.ImplicitOuter = ImplicitOuter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let Boundaries = tape[ptr++];\n    let ImplicitOuter = tape[ptr++];\n    return new IfcCurveBoundedSurface(expressID, type, BasisSurface, Boundaries, ImplicitOuter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.Boundaries);\n    ;\n    args.push(this.ImplicitOuter);\n    ;\n    return args;\n  }\n};\nvar IfcCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyle = class {\n  constructor(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveWidth = CurveWidth;\n    this.CurveColour = CurveColour;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveWidth = tape[ptr++];\n    let CurveColour = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcCurveStyle(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveWidth);\n    ;\n    args.push(this.CurveColour);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFont = class {\n  constructor(expressID, type, Name, PatternList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PatternList = PatternList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PatternList = tape[ptr++];\n    return new IfcCurveStyleFont(expressID, type, Name, PatternList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PatternList);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontAndScaling = class {\n  constructor(expressID, type, Name, CurveFont, CurveFontScaling) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveFontScaling = CurveFontScaling;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveFontScaling = tape[ptr++];\n    return new IfcCurveStyleFontAndScaling(expressID, type, Name, CurveFont, CurveFontScaling);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveFontScaling);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontPattern = class {\n  constructor(expressID, type, VisibleSegmentLength, InvisibleSegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VisibleSegmentLength = VisibleSegmentLength;\n    this.InvisibleSegmentLength = InvisibleSegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VisibleSegmentLength = tape[ptr++];\n    let InvisibleSegmentLength = tape[ptr++];\n    return new IfcCurveStyleFontPattern(expressID, type, VisibleSegmentLength, InvisibleSegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VisibleSegmentLength);\n    ;\n    args.push(this.InvisibleSegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCylindricalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCylindricalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDeepFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDeepFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcDerivedProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnit = class {\n  constructor(expressID, type, Elements, UnitType, UserDefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n    this.UnitType = UnitType;\n    this.UserDefinedType = UserDefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let UserDefinedType = tape[ptr++];\n    return new IfcDerivedUnit(expressID, type, Elements, UnitType, UserDefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.UserDefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnitElement = class {\n  constructor(expressID, type, Unit, Exponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Unit = Unit;\n    this.Exponent = Exponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Unit = tape[ptr++];\n    let Exponent = tape[ptr++];\n    return new IfcDerivedUnitElement(expressID, type, Unit, Exponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Unit);\n    ;\n    args.push(this.Exponent);\n    ;\n    return args;\n  }\n};\nvar IfcDimensionalExponents = class {\n  constructor(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LengthExponent = LengthExponent;\n    this.MassExponent = MassExponent;\n    this.TimeExponent = TimeExponent;\n    this.ElectricCurrentExponent = ElectricCurrentExponent;\n    this.ThermodynamicTemperatureExponent = ThermodynamicTemperatureExponent;\n    this.AmountOfSubstanceExponent = AmountOfSubstanceExponent;\n    this.LuminousIntensityExponent = LuminousIntensityExponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LengthExponent = tape[ptr++];\n    let MassExponent = tape[ptr++];\n    let TimeExponent = tape[ptr++];\n    let ElectricCurrentExponent = tape[ptr++];\n    let ThermodynamicTemperatureExponent = tape[ptr++];\n    let AmountOfSubstanceExponent = tape[ptr++];\n    let LuminousIntensityExponent = tape[ptr++];\n    return new IfcDimensionalExponents(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LengthExponent);\n    ;\n    args.push(this.MassExponent);\n    ;\n    args.push(this.TimeExponent);\n    ;\n    args.push(this.ElectricCurrentExponent);\n    ;\n    args.push(this.ThermodynamicTemperatureExponent);\n    ;\n    args.push(this.AmountOfSubstanceExponent);\n    ;\n    args.push(this.LuminousIntensityExponent);\n    ;\n    return args;\n  }\n};\nvar IfcDirection = class {\n  constructor(expressID, type, DirectionRatios) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DirectionRatios = DirectionRatios;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DirectionRatios = tape[ptr++];\n    return new IfcDirection(expressID, type, DirectionRatios);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DirectionRatios);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessoryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessoryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistanceExpression = class {\n  constructor(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DistanceAlong = DistanceAlong;\n    this.OffsetLateral = OffsetLateral;\n    this.OffsetVertical = OffsetVertical;\n    this.OffsetLongitudinal = OffsetLongitudinal;\n    this.AlongHorizontal = AlongHorizontal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DistanceAlong = tape[ptr++];\n    let OffsetLateral = tape[ptr++];\n    let OffsetVertical = tape[ptr++];\n    let OffsetLongitudinal = tape[ptr++];\n    let AlongHorizontal = tape[ptr++];\n    return new IfcDistanceExpression(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DistanceAlong);\n    ;\n    args.push(this.OffsetLateral);\n    ;\n    args.push(this.OffsetVertical);\n    ;\n    args.push(this.OffsetLongitudinal);\n    ;\n    args.push(this.AlongHorizontal);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionCircuit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionCircuit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionFlowElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionFlowElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.FlowDirection = FlowDirection;\n    this.PredefinedType = PredefinedType;\n    this.SystemType = SystemType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let FlowDirection = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let SystemType = tape[ptr++];\n    return new IfcDistributionPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.FlowDirection);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.SystemType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformation = class {\n  constructor(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.Purpose = Purpose;\n    this.IntendedUse = IntendedUse;\n    this.Scope = Scope;\n    this.Revision = Revision;\n    this.DocumentOwner = DocumentOwner;\n    this.Editors = Editors;\n    this.CreationTime = CreationTime;\n    this.LastRevisionTime = LastRevisionTime;\n    this.ElectronicFormat = ElectronicFormat;\n    this.ValidFrom = ValidFrom;\n    this.ValidUntil = ValidUntil;\n    this.Confidentiality = Confidentiality;\n    this.Status = Status;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let IntendedUse = tape[ptr++];\n    let Scope = tape[ptr++];\n    let Revision = tape[ptr++];\n    let DocumentOwner = tape[ptr++];\n    let Editors = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let LastRevisionTime = tape[ptr++];\n    let ElectronicFormat = tape[ptr++];\n    let ValidFrom = tape[ptr++];\n    let ValidUntil = tape[ptr++];\n    let Confidentiality = tape[ptr++];\n    let Status = tape[ptr++];\n    return new IfcDocumentInformation(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.IntendedUse);\n    ;\n    args.push(this.Scope);\n    ;\n    args.push(this.Revision);\n    ;\n    args.push(this.DocumentOwner);\n    ;\n    args.push(this.Editors);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.LastRevisionTime);\n    ;\n    args.push(this.ElectronicFormat);\n    ;\n    args.push(this.ValidFrom);\n    ;\n    args.push(this.ValidUntil);\n    ;\n    args.push(this.Confidentiality);\n    ;\n    args.push(this.Status);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingDocument = RelatingDocument;\n    this.RelatedDocuments = RelatedDocuments;\n    this.RelationshipType = RelationshipType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    let RelatedDocuments = tape[ptr++];\n    let RelationshipType = tape[ptr++];\n    return new IfcDocumentInformationRelationship(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    args.push(this.RelatedDocuments);\n    ;\n    args.push(this.RelationshipType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, ReferencedDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.ReferencedDocument = ReferencedDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ReferencedDocument = tape[ptr++];\n    return new IfcDocumentReference(expressID, type, Location, Identification, Name, Description, ReferencedDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ReferencedDocument);\n    ;\n    return args;\n  }\n};\nvar IfcDoor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.ThresholdDepth = ThresholdDepth;\n    this.ThresholdThickness = ThresholdThickness;\n    this.TransomThickness = TransomThickness;\n    this.TransomOffset = TransomOffset;\n    this.LiningOffset = LiningOffset;\n    this.ThresholdOffset = ThresholdOffset;\n    this.CasingThickness = CasingThickness;\n    this.CasingDepth = CasingDepth;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let ThresholdDepth = tape[ptr++];\n    let ThresholdThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let TransomOffset = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let ThresholdOffset = tape[ptr++];\n    let CasingThickness = tape[ptr++];\n    let CasingDepth = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcDoorLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.ThresholdDepth);\n    ;\n    args.push(this.ThresholdThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.TransomOffset);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.ThresholdOffset);\n    ;\n    args.push(this.CasingThickness);\n    ;\n    args.push(this.CasingDepth);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcDoorPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.PanelDepth = PanelDepth;\n    this.PanelOperation = PanelOperation;\n    this.PanelWidth = PanelWidth;\n    this.PanelPosition = PanelPosition;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let PanelDepth = tape[ptr++];\n    let PanelOperation = tape[ptr++];\n    let PanelWidth = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcDoorPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.PanelDepth);\n    ;\n    args.push(this.PanelOperation);\n    ;\n    args.push(this.PanelWidth);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.OperationType = OperationType;\n    this.ConstructionType = ConstructionType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcDoorStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcDoorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    return new IfcEdge(expressID, type, EdgeStart, EdgeEnd);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeCurve = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeGeometry = EdgeGeometry;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeGeometry = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcEdgeCurve(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeGeometry);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeLoop = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcEdgeLoop(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcElectricAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoard = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoard(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoardType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoardType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGenerator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGenerator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGeneratorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGeneratorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControlType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControlType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssembly = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssembly(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssemblyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssemblyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElementComponent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementComponentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementQuantity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.MethodOfMeasurement = MethodOfMeasurement;\n    this.Quantities = Quantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MethodOfMeasurement = tape[ptr++];\n    let Quantities = tape[ptr++];\n    return new IfcElementQuantity(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MethodOfMeasurement);\n    ;\n    args.push(this.Quantities);\n    ;\n    return args;\n  }\n};\nvar IfcElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementarySurface = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcElementarySurface(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcEllipse = class {\n  constructor(expressID, type, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipse(expressID, type, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEllipseProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipseProfileDef(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcEnergyConversionDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcEnergyConversionDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcEngine = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngine(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEngineType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngineType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCooler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCooler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCoolerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCoolerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n    this.EventOccurenceTime = EventOccurenceTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    let EventOccurenceTime = tape[ptr++];\n    return new IfcEvent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    args.push(this.EventOccurenceTime);\n    ;\n    return args;\n  }\n};\nvar IfcEventTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ActualDate = ActualDate;\n    this.EarlyDate = EarlyDate;\n    this.LateDate = LateDate;\n    this.ScheduleDate = ScheduleDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ActualDate = tape[ptr++];\n    let EarlyDate = tape[ptr++];\n    let LateDate = tape[ptr++];\n    let ScheduleDate = tape[ptr++];\n    return new IfcEventTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ActualDate);\n    ;\n    args.push(this.EarlyDate);\n    ;\n    args.push(this.LateDate);\n    ;\n    args.push(this.ScheduleDate);\n    ;\n    return args;\n  }\n};\nvar IfcEventType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    return new IfcEventType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    return args;\n  }\n};\nvar IfcExtendedProperties = class {\n  constructor(expressID, type, Name, Description, Properties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties = tape[ptr++];\n    return new IfcExtendedProperties(expressID, type, Name, Description, Properties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    return args;\n  }\n};\nvar IfcExternalInformation = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcExternalInformation(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcExternalReference = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternalReference(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternalReferenceRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingReference = RelatingReference;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingReference = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcExternalReferenceRelationship(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingReference);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcExternalSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcExternalSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedHatchStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedHatchStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedSurfaceStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedSurfaceStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedTextFont = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedTextFont(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcExtrudedAreaSolid(expressID, type, SweptArea, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcExtrudedAreaSolidTapered(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcFace = class {\n  constructor(expressID, type, Bounds) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    return new IfcFace(expressID, type, Bounds);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBasedSurfaceModel = class {\n  constructor(expressID, type, FbsmFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.FbsmFaces = FbsmFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let FbsmFaces = tape[ptr++];\n    return new IfcFaceBasedSurfaceModel(expressID, type, FbsmFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.FbsmFaces);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceOuterBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceOuterBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceSurface = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcFaceSurface(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcFacetedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcFacetedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcFacility = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacility(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFacilityPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacilityPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFailureConnectionCondition = class {\n  constructor(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TensionFailureX = TensionFailureX;\n    this.TensionFailureY = TensionFailureY;\n    this.TensionFailureZ = TensionFailureZ;\n    this.CompressionFailureX = CompressionFailureX;\n    this.CompressionFailureY = CompressionFailureY;\n    this.CompressionFailureZ = CompressionFailureZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TensionFailureX = tape[ptr++];\n    let TensionFailureY = tape[ptr++];\n    let TensionFailureZ = tape[ptr++];\n    let CompressionFailureX = tape[ptr++];\n    let CompressionFailureY = tape[ptr++];\n    let CompressionFailureZ = tape[ptr++];\n    return new IfcFailureConnectionCondition(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TensionFailureX);\n    ;\n    args.push(this.TensionFailureY);\n    ;\n    args.push(this.TensionFailureZ);\n    ;\n    args.push(this.CompressionFailureX);\n    ;\n    args.push(this.CompressionFailureY);\n    ;\n    args.push(this.CompressionFailureZ);\n    ;\n    return args;\n  }\n};\nvar IfcFan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFanType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFanType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementAddition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementAddition(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementSubtraction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementSubtraction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyle = class {\n  constructor(expressID, type, Name, FillStyles, ModelorDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FillStyles = FillStyles;\n    this.ModelorDraughting = ModelorDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FillStyles = tape[ptr++];\n    let ModelorDraughting = tape[ptr++];\n    return new IfcFillAreaStyle(expressID, type, Name, FillStyles, ModelorDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FillStyles);\n    ;\n    args.push(this.ModelorDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleHatching = class {\n  constructor(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.HatchLineAppearance = HatchLineAppearance;\n    this.StartOfNextHatchLine = StartOfNextHatchLine;\n    this.PointOfReferenceHatchLine = PointOfReferenceHatchLine;\n    this.PatternStart = PatternStart;\n    this.HatchLineAngle = HatchLineAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let HatchLineAppearance = tape[ptr++];\n    let StartOfNextHatchLine = tape[ptr++];\n    let PointOfReferenceHatchLine = tape[ptr++];\n    let PatternStart = tape[ptr++];\n    let HatchLineAngle = tape[ptr++];\n    return new IfcFillAreaStyleHatching(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.HatchLineAppearance);\n    ;\n    args.push(this.StartOfNextHatchLine);\n    ;\n    args.push(this.PointOfReferenceHatchLine);\n    ;\n    args.push(this.PatternStart);\n    ;\n    args.push(this.HatchLineAngle);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleTiles = class {\n  constructor(expressID, type, TilingPattern, Tiles, TilingScale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TilingPattern = TilingPattern;\n    this.Tiles = Tiles;\n    this.TilingScale = TilingScale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TilingPattern = tape[ptr++];\n    let Tiles = tape[ptr++];\n    let TilingScale = tape[ptr++];\n    return new IfcFillAreaStyleTiles(expressID, type, TilingPattern, Tiles, TilingScale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TilingPattern);\n    ;\n    args.push(this.Tiles);\n    ;\n    args.push(this.TilingScale);\n    ;\n    return args;\n  }\n};\nvar IfcFilter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFilterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFixedReferenceSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FixedReference = FixedReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FixedReference = tape[ptr++];\n    return new IfcFixedReferenceSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FixedReference);\n    ;\n    return args;\n  }\n};\nvar IfcFlowController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrument(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrumentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrumentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowMovingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowMovingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTreatmentDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTreatmentDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFooting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFooting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFootingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFootingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFurnishingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFurnishingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFurniture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurniture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnitureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurnitureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricCurveSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricCurveSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    return new IfcGeometricRepresentationContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcGeometricRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcGeometricRepresentationSubContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n    this.ParentContext = ParentContext;\n    this.TargetScale = TargetScale;\n    this.TargetView = TargetView;\n    this.UserDefinedTargetView = UserDefinedTargetView;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    let ParentContext = tape[ptr++];\n    let TargetScale = tape[ptr++];\n    let TargetView = tape[ptr++];\n    let UserDefinedTargetView = tape[ptr++];\n    return new IfcGeometricRepresentationSubContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    args.push(this.ParentContext);\n    ;\n    args.push(this.TargetScale);\n    ;\n    args.push(this.TargetView);\n    ;\n    args.push(this.UserDefinedTargetView);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGrid = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.UAxes = UAxes;\n    this.VAxes = VAxes;\n    this.WAxes = WAxes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let UAxes = tape[ptr++];\n    let VAxes = tape[ptr++];\n    let WAxes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGrid(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.UAxes);\n    ;\n    args.push(this.VAxes);\n    ;\n    args.push(this.WAxes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGridAxis = class {\n  constructor(expressID, type, AxisTag, AxisCurve, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.AxisTag = AxisTag;\n    this.AxisCurve = AxisCurve;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let AxisTag = tape[ptr++];\n    let AxisCurve = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcGridAxis(expressID, type, AxisTag, AxisCurve, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.AxisTag);\n    ;\n    args.push(this.AxisCurve);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcGridPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementLocation = PlacementLocation;\n    this.PlacementRefDirection = PlacementRefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementLocation = tape[ptr++];\n    let PlacementRefDirection = tape[ptr++];\n    return new IfcGridPlacement(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementLocation);\n    ;\n    args.push(this.PlacementRefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcHalfSpaceSolid = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    return new IfcHalfSpaceSolid(expressID, type, BaseSurface, AgreementFlag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchanger = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchanger(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchangerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchangerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifier = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifier(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifierType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifierType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.OverallWidth = OverallWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcImageTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.URLReference = URLReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let URLReference = tape[ptr++];\n    return new IfcImageTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.URLReference);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedColourMap = class {\n  constructor(expressID, type, MappedTo, Opacity, Colours, ColourIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappedTo = MappedTo;\n    this.Opacity = Opacity;\n    this.Colours = Colours;\n    this.ColourIndex = ColourIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappedTo = tape[ptr++];\n    let Opacity = tape[ptr++];\n    let Colours = tape[ptr++];\n    let ColourIndex = tape[ptr++];\n    return new IfcIndexedColourMap(expressID, type, MappedTo, Opacity, Colours, ColourIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappedTo);\n    ;\n    args.push(this.Opacity);\n    ;\n    args.push(this.Colours);\n    ;\n    args.push(this.ColourIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolyCurve = class {\n  constructor(expressID, type, Points, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcIndexedPolyCurve(expressID, type, Points, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFace = class {\n  constructor(expressID, type, CoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    return new IfcIndexedPolygonalFace(expressID, type, CoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFaceWithVoids = class {\n  constructor(expressID, type, CoordIndex, InnerCoordIndices) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n    this.InnerCoordIndices = InnerCoordIndices;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    let InnerCoordIndices = tape[ptr++];\n    return new IfcIndexedPolygonalFaceWithVoids(expressID, type, CoordIndex, InnerCoordIndices);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.InnerCoordIndices);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    return new IfcIndexedTextureMap(expressID, type, Maps, MappedTo, TexCoords);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTriangleTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n    this.TexCoordIndex = TexCoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    let TexCoordIndex = tape[ptr++];\n    return new IfcIndexedTriangleTextureMap(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    args.push(this.TexCoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIntersectionCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcIntersectionCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcInventory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.Jurisdiction = Jurisdiction;\n    this.ResponsiblePersons = ResponsiblePersons;\n    this.LastUpdateDate = LastUpdateDate;\n    this.CurrentValue = CurrentValue;\n    this.OriginalValue = OriginalValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Jurisdiction = tape[ptr++];\n    let ResponsiblePersons = tape[ptr++];\n    let LastUpdateDate = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    return new IfcInventory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Jurisdiction);\n    ;\n    args.push(this.ResponsiblePersons);\n    ;\n    args.push(this.LastUpdateDate);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcIrregularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeriesValue = class {\n  constructor(expressID, type, TimeStamp, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TimeStamp = TimeStamp;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TimeStamp = tape[ptr++];\n    let ListValues = tape[ptr++];\n    return new IfcIrregularTimeSeriesValue(expressID, type, TimeStamp, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TimeStamp);\n    ;\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.Thickness = Thickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.LegSlope = LegSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let Thickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let LegSlope = tape[ptr++];\n    return new IfcLShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Thickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.LegSlope);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLagTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.LagValue = LagValue;\n    this.DurationType = DurationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let LagValue = tape[ptr++];\n    let DurationType = tape[ptr++];\n    return new IfcLagTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.LagValue);\n    ;\n    args.push(this.DurationType);\n    ;\n    return args;\n  }\n};\nvar IfcLamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryInformation = class {\n  constructor(expressID, type, Name, Version, Publisher, VersionDate, Location, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Version = Version;\n    this.Publisher = Publisher;\n    this.VersionDate = VersionDate;\n    this.Location = Location;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Version = tape[ptr++];\n    let Publisher = tape[ptr++];\n    let VersionDate = tape[ptr++];\n    let Location = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcLibraryInformation(expressID, type, Name, Version, Publisher, VersionDate, Location, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.Publisher);\n    ;\n    args.push(this.VersionDate);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Language = Language;\n    this.ReferencedLibrary = ReferencedLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Language = tape[ptr++];\n    let ReferencedLibrary = tape[ptr++];\n    return new IfcLibraryReference(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Language);\n    ;\n    args.push(this.ReferencedLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcLightDistributionData = class {\n  constructor(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MainPlaneAngle = MainPlaneAngle;\n    this.SecondaryPlaneAngle = SecondaryPlaneAngle;\n    this.LuminousIntensity = LuminousIntensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MainPlaneAngle = tape[ptr++];\n    let SecondaryPlaneAngle = tape[ptr++];\n    let LuminousIntensity = tape[ptr++];\n    return new IfcLightDistributionData(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MainPlaneAngle);\n    ;\n    args.push(this.SecondaryPlaneAngle);\n    ;\n    args.push(this.LuminousIntensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixtureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixtureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightIntensityDistribution = class {\n  constructor(expressID, type, LightDistributionCurve, DistributionData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LightDistributionCurve = LightDistributionCurve;\n    this.DistributionData = DistributionData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LightDistributionCurve = tape[ptr++];\n    let DistributionData = tape[ptr++];\n    return new IfcLightIntensityDistribution(expressID, type, LightDistributionCurve, DistributionData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LightDistributionCurve);\n    ;\n    args.push(this.DistributionData);\n    ;\n    return args;\n  }\n};\nvar IfcLightSource = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSource(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceAmbient = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSourceAmbient(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceDirectional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcLightSourceDirectional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceGoniometric = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.ColourAppearance = ColourAppearance;\n    this.ColourTemperature = ColourTemperature;\n    this.LuminousFlux = LuminousFlux;\n    this.LightEmissionSource = LightEmissionSource;\n    this.LightDistributionDataSource = LightDistributionDataSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let ColourAppearance = tape[ptr++];\n    let ColourTemperature = tape[ptr++];\n    let LuminousFlux = tape[ptr++];\n    let LightEmissionSource = tape[ptr++];\n    let LightDistributionDataSource = tape[ptr++];\n    return new IfcLightSourceGoniometric(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ColourAppearance);\n    ;\n    args.push(this.ColourTemperature);\n    ;\n    args.push(this.LuminousFlux);\n    ;\n    args.push(this.LightEmissionSource);\n    ;\n    args.push(this.LightDistributionDataSource);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourcePositional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    return new IfcLightSourcePositional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceSpot = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n    this.Orientation = Orientation;\n    this.ConcentrationExponent = ConcentrationExponent;\n    this.SpreadAngle = SpreadAngle;\n    this.BeamWidthAngle = BeamWidthAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let ConcentrationExponent = tape[ptr++];\n    let SpreadAngle = tape[ptr++];\n    let BeamWidthAngle = tape[ptr++];\n    return new IfcLightSourceSpot(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.ConcentrationExponent);\n    ;\n    args.push(this.SpreadAngle);\n    ;\n    args.push(this.BeamWidthAngle);\n    ;\n    return args;\n  }\n};\nvar IfcLine = class {\n  constructor(expressID, type, Pnt, Dir) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Pnt = Pnt;\n    this.Dir = Dir;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Pnt = tape[ptr++];\n    let Dir = tape[ptr++];\n    return new IfcLine(expressID, type, Pnt, Dir);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Pnt);\n    ;\n    args.push(this.Dir);\n    ;\n    return args;\n  }\n};\nvar IfcLineSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcLineSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementMeasuredAlong = PlacementMeasuredAlong;\n    this.Distance = Distance;\n    this.Orientation = Orientation;\n    this.CartesianPosition = CartesianPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementMeasuredAlong = tape[ptr++];\n    let Distance = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let CartesianPosition = tape[ptr++];\n    return new IfcLinearPlacement(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementMeasuredAlong);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.CartesianPosition);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcLinearPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcLocalPlacement = class {\n  constructor(expressID, type, PlacementRelTo, RelativePlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.RelativePlacement = RelativePlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let RelativePlacement = tape[ptr++];\n    return new IfcLocalPlacement(expressID, type, PlacementRelTo, RelativePlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.RelativePlacement);\n    ;\n    return args;\n  }\n};\nvar IfcLoop = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcLoop(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcManifoldSolidBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcManifoldSolidBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcMapConversion = class {\n  constructor(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n    this.Eastings = Eastings;\n    this.Northings = Northings;\n    this.OrthogonalHeight = OrthogonalHeight;\n    this.XAxisAbscissa = XAxisAbscissa;\n    this.XAxisOrdinate = XAxisOrdinate;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    let Eastings = tape[ptr++];\n    let Northings = tape[ptr++];\n    let OrthogonalHeight = tape[ptr++];\n    let XAxisAbscissa = tape[ptr++];\n    let XAxisOrdinate = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcMapConversion(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    args.push(this.Eastings);\n    ;\n    args.push(this.Northings);\n    ;\n    args.push(this.OrthogonalHeight);\n    ;\n    args.push(this.XAxisAbscissa);\n    ;\n    args.push(this.XAxisOrdinate);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcMappedItem = class {\n  constructor(expressID, type, MappingSource, MappingTarget) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingSource = MappingSource;\n    this.MappingTarget = MappingTarget;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingSource = tape[ptr++];\n    let MappingTarget = tape[ptr++];\n    return new IfcMappedItem(expressID, type, MappingSource, MappingTarget);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingSource);\n    ;\n    args.push(this.MappingTarget);\n    ;\n    return args;\n  }\n};\nvar IfcMaterial = class {\n  constructor(expressID, type, Name, Description, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterial(expressID, type, Name, Description, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialClassificationRelationship = class {\n  constructor(expressID, type, MaterialClassifications, ClassifiedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialClassifications = MaterialClassifications;\n    this.ClassifiedMaterial = ClassifiedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialClassifications = tape[ptr++];\n    let ClassifiedMaterial = tape[ptr++];\n    return new IfcMaterialClassificationRelationship(expressID, type, MaterialClassifications, ClassifiedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialClassifications);\n    ;\n    args.push(this.ClassifiedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituent = class {\n  constructor(expressID, type, Name, Description, Material, Fraction, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Fraction = Fraction;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Fraction = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialConstituent(expressID, type, Name, Description, Material, Fraction, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Fraction);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituentSet = class {\n  constructor(expressID, type, Name, Description, MaterialConstituents) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialConstituents = MaterialConstituents;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialConstituents = tape[ptr++];\n    return new IfcMaterialConstituentSet(expressID, type, Name, Description, MaterialConstituents);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialConstituents);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMaterialDefinitionRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations, RepresentedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n    this.RepresentedMaterial = RepresentedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    let RepresentedMaterial = tape[ptr++];\n    return new IfcMaterialDefinitionRepresentation(expressID, type, Name, Description, Representations, RepresentedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    args.push(this.RepresentedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayer = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    return new IfcMaterialLayer(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSet = class {\n  constructor(expressID, type, MaterialLayers, LayerSetName, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialLayers = MaterialLayers;\n    this.LayerSetName = LayerSetName;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialLayers = tape[ptr++];\n    let LayerSetName = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcMaterialLayerSet(expressID, type, MaterialLayers, LayerSetName, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialLayers);\n    ;\n    args.push(this.LayerSetName);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSetUsage = class {\n  constructor(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForLayerSet = ForLayerSet;\n    this.LayerSetDirection = LayerSetDirection;\n    this.DirectionSense = DirectionSense;\n    this.OffsetFromReferenceLine = OffsetFromReferenceLine;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForLayerSet = tape[ptr++];\n    let LayerSetDirection = tape[ptr++];\n    let DirectionSense = tape[ptr++];\n    let OffsetFromReferenceLine = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialLayerSetUsage(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForLayerSet);\n    ;\n    args.push(this.LayerSetDirection);\n    ;\n    args.push(this.DirectionSense);\n    ;\n    args.push(this.OffsetFromReferenceLine);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerWithOffsets = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n    this.OffsetDirection = OffsetDirection;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    let OffsetDirection = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialLayerWithOffsets(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.OffsetDirection);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialList = class {\n  constructor(expressID, type, Materials) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Materials = Materials;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Materials = tape[ptr++];\n    return new IfcMaterialList(expressID, type, Materials);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Materials);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfile = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialProfile(expressID, type, Name, Description, Material, Profile, Priority, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSet = class {\n  constructor(expressID, type, Name, Description, MaterialProfiles, CompositeProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialProfiles = MaterialProfiles;\n    this.CompositeProfile = CompositeProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialProfiles = tape[ptr++];\n    let CompositeProfile = tape[ptr++];\n    return new IfcMaterialProfileSet(expressID, type, Name, Description, MaterialProfiles, CompositeProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialProfiles);\n    ;\n    args.push(this.CompositeProfile);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsage = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialProfileSetUsage(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsageTapering = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n    this.ForProfileEndSet = ForProfileEndSet;\n    this.CardinalEndPoint = CardinalEndPoint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    let ForProfileEndSet = tape[ptr++];\n    let CardinalEndPoint = tape[ptr++];\n    return new IfcMaterialProfileSetUsageTapering(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    args.push(this.ForProfileEndSet);\n    ;\n    args.push(this.CardinalEndPoint);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileWithOffsets = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialProfileWithOffsets(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProperties = class {\n  constructor(expressID, type, Name, Description, Properties, Material) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties;\n    this.Material = Material;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties = tape[ptr++];\n    let Material = tape[ptr++];\n    return new IfcMaterialProperties(expressID, type, Name, Description, Properties, Material);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.Material);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMaterial = RelatingMaterial;\n    this.RelatedMaterials = RelatedMaterials;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    let RelatedMaterials = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcMaterialRelationship(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    args.push(this.RelatedMaterials);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialUsageDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialUsageDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMeasureWithUnit = class {\n  constructor(expressID, type, ValueComponent, UnitComponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ValueComponent = ValueComponent;\n    this.UnitComponent = UnitComponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ValueComponent = tape[ptr++];\n    let UnitComponent = tape[ptr++];\n    return new IfcMeasureWithUnit(expressID, type, ValueComponent, UnitComponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ValueComponent);\n    ;\n    args.push(this.UnitComponent);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMechanicalFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    return new IfcMechanicalFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMetric = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.Benchmark = Benchmark;\n    this.ValueSource = ValueSource;\n    this.DataValue = DataValue;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let Benchmark = tape[ptr++];\n    let ValueSource = tape[ptr++];\n    let DataValue = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcMetric(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.Benchmark);\n    ;\n    args.push(this.ValueSource);\n    ;\n    args.push(this.DataValue);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcMirroredProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcMirroredProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcMonetaryUnit = class {\n  constructor(expressID, type, Currency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Currency = Currency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Currency = tape[ptr++];\n    return new IfcMonetaryUnit(expressID, type, Currency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Currency);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnectionType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnectionType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcNamedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    return new IfcNamedUnit(expressID, type, Dimensions, UnitType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    return args;\n  }\n};\nvar IfcObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcObjectDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcObjectDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcObjectPlacement = class {\n  constructor(expressID, type, PlacementRelTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    return new IfcObjectPlacement(expressID, type, PlacementRelTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    return args;\n  }\n};\nvar IfcObjective = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.BenchmarkValues = BenchmarkValues;\n    this.LogicalAggregator = LogicalAggregator;\n    this.ObjectiveQualifier = ObjectiveQualifier;\n    this.UserDefinedQualifier = UserDefinedQualifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let BenchmarkValues = tape[ptr++];\n    let LogicalAggregator = tape[ptr++];\n    let ObjectiveQualifier = tape[ptr++];\n    let UserDefinedQualifier = tape[ptr++];\n    return new IfcObjective(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.BenchmarkValues);\n    ;\n    args.push(this.LogicalAggregator);\n    ;\n    args.push(this.ObjectiveQualifier);\n    ;\n    args.push(this.UserDefinedQualifier);\n    ;\n    return args;\n  }\n};\nvar IfcOccupant = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOccupant(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve = class {\n  constructor(expressID, type, BasisCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    return new IfcOffsetCurve(expressID, type, BasisCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve2D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOffsetCurve2D(expressID, type, BasisCurve, Distance, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve3D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcOffsetCurve3D(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurveByDistances = class {\n  constructor(expressID, type, BasisCurve, OffsetValues, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.OffsetValues = OffsetValues;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcOffsetCurveByDistances(expressID, type, BasisCurve, OffsetValues, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcOpenShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcOpenShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOrganization = class {\n  constructor(expressID, type, Identification, Name, Description, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcOrganization(expressID, type, Identification, Name, Description, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcOrganizationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOrganization = RelatingOrganization;\n    this.RelatedOrganizations = RelatedOrganizations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOrganization = tape[ptr++];\n    let RelatedOrganizations = tape[ptr++];\n    return new IfcOrganizationRelationship(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOrganization);\n    ;\n    args.push(this.RelatedOrganizations);\n    ;\n    return args;\n  }\n};\nvar IfcOrientationExpression = class {\n  constructor(expressID, type, LateralAxisDirection, VerticalAxisDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LateralAxisDirection = LateralAxisDirection;\n    this.VerticalAxisDirection = VerticalAxisDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LateralAxisDirection = tape[ptr++];\n    let VerticalAxisDirection = tape[ptr++];\n    return new IfcOrientationExpression(expressID, type, LateralAxisDirection, VerticalAxisDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LateralAxisDirection);\n    ;\n    args.push(this.VerticalAxisDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOrientedEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeElement = EdgeElement;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeElement = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcOrientedEdge(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeElement);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcOuterBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOuterBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOutlet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutlet(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOutletType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutletType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOwnerHistory = class {\n  constructor(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OwningUser = OwningUser;\n    this.OwningApplication = OwningApplication;\n    this.State = State;\n    this.ChangeAction = ChangeAction;\n    this.LastModifiedDate = LastModifiedDate;\n    this.LastModifyingUser = LastModifyingUser;\n    this.LastModifyingApplication = LastModifyingApplication;\n    this.CreationDate = CreationDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OwningUser = tape[ptr++];\n    let OwningApplication = tape[ptr++];\n    let State = tape[ptr++];\n    let ChangeAction = tape[ptr++];\n    let LastModifiedDate = tape[ptr++];\n    let LastModifyingUser = tape[ptr++];\n    let LastModifyingApplication = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    return new IfcOwnerHistory(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OwningUser);\n    ;\n    args.push(this.OwningApplication);\n    ;\n    args.push(this.State);\n    ;\n    args.push(this.ChangeAction);\n    ;\n    args.push(this.LastModifiedDate);\n    ;\n    args.push(this.LastModifyingUser);\n    ;\n    args.push(this.LastModifyingApplication);\n    ;\n    args.push(this.CreationDate);\n    ;\n    return args;\n  }\n};\nvar IfcParameterizedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcParameterizedProfileDef(expressID, type, ProfileType, ProfileName, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPath = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcPath(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcPcurve = class {\n  constructor(expressID, type, BasisSurface, ReferenceCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.ReferenceCurve = ReferenceCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let ReferenceCurve = tape[ptr++];\n    return new IfcPcurve(expressID, type, BasisSurface, ReferenceCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.ReferenceCurve);\n    ;\n    return args;\n  }\n};\nvar IfcPerformanceHistory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LifeCyclePhase = LifeCyclePhase;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LifeCyclePhase = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPerformanceHistory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LifeCyclePhase);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPermeableCoveringProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcPermeableCoveringProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcPermit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcPermit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcPerson = class {\n  constructor(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.FamilyName = FamilyName;\n    this.GivenName = GivenName;\n    this.MiddleNames = MiddleNames;\n    this.PrefixTitles = PrefixTitles;\n    this.SuffixTitles = SuffixTitles;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let FamilyName = tape[ptr++];\n    let GivenName = tape[ptr++];\n    let MiddleNames = tape[ptr++];\n    let PrefixTitles = tape[ptr++];\n    let SuffixTitles = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcPerson(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.FamilyName);\n    ;\n    args.push(this.GivenName);\n    ;\n    args.push(this.MiddleNames);\n    ;\n    args.push(this.PrefixTitles);\n    ;\n    args.push(this.SuffixTitles);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcPersonAndOrganization = class {\n  constructor(expressID, type, ThePerson, TheOrganization, Roles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ThePerson = ThePerson;\n    this.TheOrganization = TheOrganization;\n    this.Roles = Roles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ThePerson = tape[ptr++];\n    let TheOrganization = tape[ptr++];\n    let Roles = tape[ptr++];\n    return new IfcPersonAndOrganization(expressID, type, ThePerson, TheOrganization, Roles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ThePerson);\n    ;\n    args.push(this.TheOrganization);\n    ;\n    args.push(this.Roles);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalComplexQuantity = class {\n  constructor(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasQuantities = HasQuantities;\n    this.Discrimination = Discrimination;\n    this.Quality = Quality;\n    this.Usage = Usage;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasQuantities = tape[ptr++];\n    let Discrimination = tape[ptr++];\n    let Quality = tape[ptr++];\n    let Usage = tape[ptr++];\n    return new IfcPhysicalComplexQuantity(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasQuantities);\n    ;\n    args.push(this.Discrimination);\n    ;\n    args.push(this.Quality);\n    ;\n    args.push(this.Usage);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalQuantity = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPhysicalQuantity(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalSimpleQuantity = class {\n  constructor(expressID, type, Name, Description, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPhysicalSimpleQuantity(expressID, type, Name, Description, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPile = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n    this.ConstructionType = ConstructionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    return new IfcPile(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    return args;\n  }\n};\nvar IfcPileType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPileType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPixelTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.Width = Width;\n    this.Height = Height;\n    this.ColourComponents = ColourComponents;\n    this.Pixel = Pixel;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let Width = tape[ptr++];\n    let Height = tape[ptr++];\n    let ColourComponents = tape[ptr++];\n    let Pixel = tape[ptr++];\n    return new IfcPixelTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.ColourComponents);\n    ;\n    args.push(this.Pixel);\n    ;\n    return args;\n  }\n};\nvar IfcPlacement = class {\n  constructor(expressID, type, Location) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    return new IfcPlacement(expressID, type, Location);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarBox = class {\n  constructor(expressID, type, SizeInX, SizeInY, Placement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n    this.Placement = Placement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    let Placement = tape[ptr++];\n    return new IfcPlanarBox(expressID, type, SizeInX, SizeInY, Placement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    args.push(this.Placement);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarExtent = class {\n  constructor(expressID, type, SizeInX, SizeInY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    return new IfcPlanarExtent(expressID, type, SizeInX, SizeInY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    return args;\n  }\n};\nvar IfcPlane = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcPlane(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPlate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlate(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPoint = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPoint(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPointOnCurve = class {\n  constructor(expressID, type, BasisCurve, PointParameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.PointParameter = PointParameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let PointParameter = tape[ptr++];\n    return new IfcPointOnCurve(expressID, type, BasisCurve, PointParameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.PointParameter);\n    ;\n    return args;\n  }\n};\nvar IfcPointOnSurface = class {\n  constructor(expressID, type, BasisSurface, PointParameterU, PointParameterV) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.PointParameterU = PointParameterU;\n    this.PointParameterV = PointParameterV;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let PointParameterU = tape[ptr++];\n    let PointParameterV = tape[ptr++];\n    return new IfcPointOnSurface(expressID, type, BasisSurface, PointParameterU, PointParameterV);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.PointParameterU);\n    ;\n    args.push(this.PointParameterV);\n    ;\n    return args;\n  }\n};\nvar IfcPolyLoop = class {\n  constructor(expressID, type, Polygon) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Polygon = Polygon;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Polygon = tape[ptr++];\n    return new IfcPolyLoop(expressID, type, Polygon);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Polygon);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalBoundedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Position = Position;\n    this.PolygonalBoundary = PolygonalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Position = tape[ptr++];\n    let PolygonalBoundary = tape[ptr++];\n    return new IfcPolygonalBoundedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.PolygonalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalFaceSet = class {\n  constructor(expressID, type, Coordinates, Closed, Faces, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Closed = Closed;\n    this.Faces = Faces;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Closed = tape[ptr++];\n    let Faces = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcPolygonalFaceSet(expressID, type, Coordinates, Closed, Faces, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.Faces);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcPolyline = class {\n  constructor(expressID, type, Points) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    return new IfcPolyline(expressID, type, Points);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    return args;\n  }\n};\nvar IfcPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPostalAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.InternalLocation = InternalLocation;\n    this.AddressLines = AddressLines;\n    this.PostalBox = PostalBox;\n    this.Town = Town;\n    this.Region = Region;\n    this.PostalCode = PostalCode;\n    this.Country = Country;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let InternalLocation = tape[ptr++];\n    let AddressLines = tape[ptr++];\n    let PostalBox = tape[ptr++];\n    let Town = tape[ptr++];\n    let Region = tape[ptr++];\n    let PostalCode = tape[ptr++];\n    let Country = tape[ptr++];\n    return new IfcPostalAddress(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.InternalLocation);\n    ;\n    args.push(this.AddressLines);\n    ;\n    args.push(this.PostalBox);\n    ;\n    args.push(this.Town);\n    ;\n    args.push(this.Region);\n    ;\n    args.push(this.PostalCode);\n    ;\n    args.push(this.Country);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedItem = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedItem(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedProperties = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPreDefinedProperties(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPreDefinedPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPreDefinedPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedTextFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedTextFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPresentationLayerAssignment = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    return new IfcPresentationLayerAssignment(expressID, type, Name, Description, AssignedItems, Identifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationLayerWithStyle = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n    this.LayerOn = LayerOn;\n    this.LayerFrozen = LayerFrozen;\n    this.LayerBlocked = LayerBlocked;\n    this.LayerStyles = LayerStyles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    let LayerOn = tape[ptr++];\n    let LayerFrozen = tape[ptr++];\n    let LayerBlocked = tape[ptr++];\n    let LayerStyles = tape[ptr++];\n    return new IfcPresentationLayerWithStyle(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    args.push(this.LayerOn);\n    ;\n    args.push(this.LayerFrozen);\n    ;\n    args.push(this.LayerBlocked);\n    ;\n    args.push(this.LayerStyles);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyle = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPresentationStyle(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyleAssignment = class {\n  constructor(expressID, type, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Styles = tape[ptr++];\n    return new IfcPresentationStyleAssignment(expressID, type, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcProcedure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedure(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcedureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcProductDefinitionShape = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductDefinitionShape(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProductRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductRepresentation(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    return new IfcProfileDef(expressID, type, ProfileType, ProfileName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    return args;\n  }\n};\nvar IfcProfileProperties = class {\n  constructor(expressID, type, Name, Description, Properties, ProfileDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties;\n    this.ProfileDefinition = ProfileDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties = tape[ptr++];\n    let ProfileDefinition = tape[ptr++];\n    return new IfcProfileProperties(expressID, type, Name, Description, Properties, ProfileDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.ProfileDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcProject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProjectLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectOrder = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProjectOrder(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProjectedCRS = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n    this.MapProjection = MapProjection;\n    this.MapZone = MapZone;\n    this.MapUnit = MapUnit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    let MapProjection = tape[ptr++];\n    let MapZone = tape[ptr++];\n    let MapUnit = tape[ptr++];\n    return new IfcProjectedCRS(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    args.push(this.MapProjection);\n    ;\n    args.push(this.MapZone);\n    ;\n    args.push(this.MapUnit);\n    ;\n    return args;\n  }\n};\nvar IfcProjectionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProjectionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyAbstraction = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPropertyAbstraction(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPropertyBoundedValue = class {\n  constructor(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UpperBoundValue = UpperBoundValue;\n    this.LowerBoundValue = LowerBoundValue;\n    this.Unit = Unit;\n    this.SetPointValue = SetPointValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UpperBoundValue = tape[ptr++];\n    let LowerBoundValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    let SetPointValue = tape[ptr++];\n    return new IfcPropertyBoundedValue(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UpperBoundValue);\n    ;\n    args.push(this.LowerBoundValue);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.SetPointValue);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDependencyRelationship = class {\n  constructor(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DependingProperty = DependingProperty;\n    this.DependantProperty = DependantProperty;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DependingProperty = tape[ptr++];\n    let DependantProperty = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcPropertyDependencyRelationship(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DependingProperty);\n    ;\n    args.push(this.DependantProperty);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeratedValue = class {\n  constructor(expressID, type, Name, Description, EnumerationValues, EnumerationReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.EnumerationValues = EnumerationValues;\n    this.EnumerationReference = EnumerationReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let EnumerationReference = tape[ptr++];\n    return new IfcPropertyEnumeratedValue(expressID, type, Name, Description, EnumerationValues, EnumerationReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.EnumerationReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeration = class {\n  constructor(expressID, type, Name, EnumerationValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.EnumerationValues = EnumerationValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyEnumeration(expressID, type, Name, EnumerationValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyListValue = class {\n  constructor(expressID, type, Name, Description, ListValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ListValues = ListValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ListValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyListValue(expressID, type, Name, Description, ListValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ListValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyReferenceValue = class {\n  constructor(expressID, type, Name, Description, UsageName, PropertyReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.PropertyReference = PropertyReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let PropertyReference = tape[ptr++];\n    return new IfcPropertyReferenceValue(expressID, type, Name, Description, UsageName, PropertyReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.PropertyReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertySetDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.ApplicableEntity = ApplicableEntity;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let ApplicableEntity = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcPropertySetTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.ApplicableEntity);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySingleValue = class {\n  constructor(expressID, type, Name, Description, NominalValue, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.NominalValue = NominalValue;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let NominalValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertySingleValue(expressID, type, Name, Description, NominalValue, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.NominalValue);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTableValue = class {\n  constructor(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefiningValues = DefiningValues;\n    this.DefinedValues = DefinedValues;\n    this.Expression = Expression;\n    this.DefiningUnit = DefiningUnit;\n    this.DefinedUnit = DefinedUnit;\n    this.CurveInterpolation = CurveInterpolation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefiningValues = tape[ptr++];\n    let DefinedValues = tape[ptr++];\n    let Expression = tape[ptr++];\n    let DefiningUnit = tape[ptr++];\n    let DefinedUnit = tape[ptr++];\n    let CurveInterpolation = tape[ptr++];\n    return new IfcPropertyTableValue(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefiningValues);\n    ;\n    args.push(this.DefinedValues);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.DefiningUnit);\n    ;\n    args.push(this.DefinedUnit);\n    ;\n    args.push(this.CurveInterpolation);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplateDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplateDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.ProxyType = ProxyType;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let ProxyType = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.ProxyType);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcPump = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPump(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPumpType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPumpType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityArea = class {\n  constructor(expressID, type, Name, Description, Unit, AreaValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.AreaValue = AreaValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let AreaValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityArea(expressID, type, Name, Description, Unit, AreaValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.AreaValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityCount = class {\n  constructor(expressID, type, Name, Description, Unit, CountValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.CountValue = CountValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let CountValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityCount(expressID, type, Name, Description, Unit, CountValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.CountValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityLength = class {\n  constructor(expressID, type, Name, Description, Unit, LengthValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.LengthValue = LengthValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let LengthValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityLength(expressID, type, Name, Description, Unit, LengthValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.LengthValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantitySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcQuantitySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityTime = class {\n  constructor(expressID, type, Name, Description, Unit, TimeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.TimeValue = TimeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityTime(expressID, type, Name, Description, Unit, TimeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityVolume = class {\n  constructor(expressID, type, Name, Description, Unit, VolumeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.VolumeValue = VolumeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let VolumeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityVolume(expressID, type, Name, Description, Unit, VolumeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.VolumeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityWeight = class {\n  constructor(expressID, type, Name, Description, Unit, WeightValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.WeightValue = WeightValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let WeightValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityWeight(expressID, type, Name, Description, Unit, WeightValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.WeightValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcRailing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRailingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.WallThickness = WallThickness;\n    this.InnerFilletRadius = InnerFilletRadius;\n    this.OuterFilletRadius = OuterFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let InnerFilletRadius = tape[ptr++];\n    let OuterFilletRadius = tape[ptr++];\n    return new IfcRectangleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.InnerFilletRadius);\n    ;\n    args.push(this.OuterFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    return new IfcRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularPyramid = class {\n  constructor(expressID, type, Position, XLength, YLength, Height) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.Height = Height;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let Height = tape[ptr++];\n    return new IfcRectangularPyramid(expressID, type, Position, XLength, YLength, Height);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.Height);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularTrimmedSurface = class {\n  constructor(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.U1 = U1;\n    this.V1 = V1;\n    this.U2 = U2;\n    this.V2 = V2;\n    this.Usense = Usense;\n    this.Vsense = Vsense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let U1 = tape[ptr++];\n    let V1 = tape[ptr++];\n    let U2 = tape[ptr++];\n    let V2 = tape[ptr++];\n    let Usense = tape[ptr++];\n    let Vsense = tape[ptr++];\n    return new IfcRectangularTrimmedSurface(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.U1);\n    ;\n    args.push(this.V1);\n    ;\n    args.push(this.U2);\n    ;\n    args.push(this.V2);\n    ;\n    args.push(this.Usense);\n    ;\n    args.push(this.Vsense);\n    ;\n    return args;\n  }\n};\nvar IfcRecurrencePattern = class {\n  constructor(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RecurrenceType = RecurrenceType;\n    this.DayComponent = DayComponent;\n    this.WeekdayComponent = WeekdayComponent;\n    this.MonthComponent = MonthComponent;\n    this.Position = Position;\n    this.Interval = Interval;\n    this.Occurrences = Occurrences;\n    this.TimePeriods = TimePeriods;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RecurrenceType = tape[ptr++];\n    let DayComponent = tape[ptr++];\n    let WeekdayComponent = tape[ptr++];\n    let MonthComponent = tape[ptr++];\n    let Position = tape[ptr++];\n    let Interval = tape[ptr++];\n    let Occurrences = tape[ptr++];\n    let TimePeriods = tape[ptr++];\n    return new IfcRecurrencePattern(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RecurrenceType);\n    ;\n    args.push(this.DayComponent);\n    ;\n    args.push(this.WeekdayComponent);\n    ;\n    args.push(this.MonthComponent);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Interval);\n    ;\n    args.push(this.Occurrences);\n    ;\n    args.push(this.TimePeriods);\n    ;\n    return args;\n  }\n};\nvar IfcReference = class {\n  constructor(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TypeIdentifier = TypeIdentifier;\n    this.AttributeIdentifier = AttributeIdentifier;\n    this.InstanceName = InstanceName;\n    this.ListPositions = ListPositions;\n    this.InnerReference = InnerReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TypeIdentifier = tape[ptr++];\n    let AttributeIdentifier = tape[ptr++];\n    let InstanceName = tape[ptr++];\n    let ListPositions = tape[ptr++];\n    let InnerReference = tape[ptr++];\n    return new IfcReference(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TypeIdentifier);\n    ;\n    args.push(this.AttributeIdentifier);\n    ;\n    args.push(this.InstanceName);\n    ;\n    args.push(this.ListPositions);\n    ;\n    args.push(this.InnerReference);\n    ;\n    return args;\n  }\n};\nvar IfcReferent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.RestartDistance = RestartDistance;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let RestartDistance = tape[ptr++];\n    return new IfcReferent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.RestartDistance);\n    ;\n    return args;\n  }\n};\nvar IfcRegularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.TimeStep = TimeStep;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeStep = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcRegularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeStep);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementBarProperties = class {\n  constructor(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TotalCrossSectionArea = TotalCrossSectionArea;\n    this.SteelGrade = SteelGrade;\n    this.BarSurface = BarSurface;\n    this.EffectiveDepth = EffectiveDepth;\n    this.NominalBarDiameter = NominalBarDiameter;\n    this.BarCount = BarCount;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TotalCrossSectionArea = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let EffectiveDepth = tape[ptr++];\n    let NominalBarDiameter = tape[ptr++];\n    let BarCount = tape[ptr++];\n    return new IfcReinforcementBarProperties(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TotalCrossSectionArea);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.EffectiveDepth);\n    ;\n    args.push(this.NominalBarDiameter);\n    ;\n    args.push(this.BarCount);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementDefinitionProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefinitionType = DefinitionType;\n    this.ReinforcementSectionDefinitions = ReinforcementSectionDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefinitionType = tape[ptr++];\n    let ReinforcementSectionDefinitions = tape[ptr++];\n    return new IfcReinforcementDefinitionProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefinitionType);\n    ;\n    args.push(this.ReinforcementSectionDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.PredefinedType = PredefinedType;\n    this.BarSurface = BarSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    return new IfcReinforcingBar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.BarSurface);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBarType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.BarSurface = BarSurface;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingBarType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    return new IfcReinforcingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcReinforcingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMesh = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcReinforcingMesh(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMeshType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingMeshType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcRelAggregates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAggregates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssigns = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    return new IfcRelAssigns(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingActor = RelatingActor;\n    this.ActingRole = ActingRole;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingActor = tape[ptr++];\n    let ActingRole = tape[ptr++];\n    return new IfcRelAssignsToActor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingActor);\n    ;\n    args.push(this.ActingRole);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingControl = RelatingControl;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingControl = tape[ptr++];\n    return new IfcRelAssignsToControl(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingControl);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    return new IfcRelAssignsToGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroupByFactor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n    this.Factor = Factor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    let Factor = tape[ptr++];\n    return new IfcRelAssignsToGroupByFactor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    args.push(this.Factor);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProcess = RelatingProcess;\n    this.QuantityInProcess = QuantityInProcess;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let QuantityInProcess = tape[ptr++];\n    return new IfcRelAssignsToProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.QuantityInProcess);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProduct = RelatingProduct;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProduct = tape[ptr++];\n    return new IfcRelAssignsToProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProduct);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingResource = RelatingResource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingResource = tape[ptr++];\n    return new IfcRelAssignsToResource(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingResource);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAssociates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesApproval = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcRelAssociatesApproval(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesClassification = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingClassification = RelatingClassification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingClassification = tape[ptr++];\n    return new IfcRelAssociatesClassification(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingClassification);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesConstraint = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.Intent = Intent;\n    this.RelatingConstraint = RelatingConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let Intent = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    return new IfcRelAssociatesConstraint(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.Intent);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesDocument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingDocument = RelatingDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    return new IfcRelAssociatesDocument(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingLibrary = RelatingLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingLibrary = tape[ptr++];\n    return new IfcRelAssociatesLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesMaterial = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingMaterial = RelatingMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    return new IfcRelAssociatesMaterial(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnects = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelConnects(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPathElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RelatingPriorities = RelatingPriorities;\n    this.RelatedPriorities = RelatedPriorities;\n    this.RelatedConnectionType = RelatedConnectionType;\n    this.RelatingConnectionType = RelatingConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RelatingPriorities = tape[ptr++];\n    let RelatedPriorities = tape[ptr++];\n    let RelatedConnectionType = tape[ptr++];\n    let RelatingConnectionType = tape[ptr++];\n    return new IfcRelConnectsPathElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RelatingPriorities);\n    ;\n    args.push(this.RelatedPriorities);\n    ;\n    args.push(this.RelatedConnectionType);\n    ;\n    args.push(this.RelatingConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPortToElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsPortToElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPorts = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedPort = RelatedPort;\n    this.RealizingElement = RealizingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedPort = tape[ptr++];\n    let RealizingElement = tape[ptr++];\n    return new IfcRelConnectsPorts(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedPort);\n    ;\n    args.push(this.RealizingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedStructuralActivity = RelatedStructuralActivity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedStructuralActivity = tape[ptr++];\n    return new IfcRelConnectsStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedStructuralActivity);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcRelConnectsStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithEccentricity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n    this.ConnectionConstraint = ConnectionConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    let ConnectionConstraint = tape[ptr++];\n    return new IfcRelConnectsWithEccentricity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    args.push(this.ConnectionConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithRealizingElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RealizingElements = RealizingElements;\n    this.ConnectionType = ConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RealizingElements = tape[ptr++];\n    let ConnectionType = tape[ptr++];\n    return new IfcRelConnectsWithRealizingElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RealizingElements);\n    ;\n    args.push(this.ConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelContainedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelContainedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversBldgElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversBldgElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversSpaces = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversSpaces(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelDeclares = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingContext = RelatingContext;\n    this.RelatedDefinitions = RelatedDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingContext = tape[ptr++];\n    let RelatedDefinitions = tape[ptr++];\n    return new IfcRelDeclares(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingContext);\n    ;\n    args.push(this.RelatedDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcRelDecomposes = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDecomposes(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefines = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDefines(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingObject = RelatingObject;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    return new IfcRelDefinesByObject(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingPropertyDefinition = RelatingPropertyDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingPropertyDefinition = tape[ptr++];\n    return new IfcRelDefinesByProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingPropertyDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedPropertySets = RelatedPropertySets;\n    this.RelatingTemplate = RelatingTemplate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedPropertySets = tape[ptr++];\n    let RelatingTemplate = tape[ptr++];\n    return new IfcRelDefinesByTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedPropertySets);\n    ;\n    args.push(this.RelatingTemplate);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingType = RelatingType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingType = tape[ptr++];\n    return new IfcRelDefinesByType(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingType);\n    ;\n    return args;\n  }\n};\nvar IfcRelFillsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOpeningElement = RelatingOpeningElement;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOpeningElement = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    return new IfcRelFillsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOpeningElement);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelFlowControlElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedControlElements = RelatedControlElements;\n    this.RelatingFlowElement = RelatingFlowElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedControlElements = tape[ptr++];\n    let RelatingFlowElement = tape[ptr++];\n    return new IfcRelFlowControlElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedControlElements);\n    ;\n    args.push(this.RelatingFlowElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelInterferesElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.InterferenceGeometry = InterferenceGeometry;\n    this.InterferenceType = InterferenceType;\n    this.ImpliedOrder = ImpliedOrder;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let InterferenceGeometry = tape[ptr++];\n    let InterferenceType = tape[ptr++];\n    let ImpliedOrder = tape[ptr++];\n    return new IfcRelInterferesElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.InterferenceGeometry);\n    ;\n    args.push(this.InterferenceType);\n    ;\n    args.push(this.ImpliedOrder);\n    ;\n    return args;\n  }\n};\nvar IfcRelNests = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelNests(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelPositions = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPositioningElement = RelatingPositioningElement;\n    this.RelatedProducts = RelatedProducts;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPositioningElement = tape[ptr++];\n    let RelatedProducts = tape[ptr++];\n    return new IfcRelPositions(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPositioningElement);\n    ;\n    args.push(this.RelatedProducts);\n    ;\n    return args;\n  }\n};\nvar IfcRelProjectsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedFeatureElement = RelatedFeatureElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedFeatureElement = tape[ptr++];\n    return new IfcRelProjectsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedFeatureElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelReferencedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelReferencedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelSequence = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingProcess = RelatingProcess;\n    this.RelatedProcess = RelatedProcess;\n    this.TimeLag = TimeLag;\n    this.SequenceType = SequenceType;\n    this.UserDefinedSequenceType = UserDefinedSequenceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let RelatedProcess = tape[ptr++];\n    let TimeLag = tape[ptr++];\n    let SequenceType = tape[ptr++];\n    let UserDefinedSequenceType = tape[ptr++];\n    return new IfcRelSequence(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.RelatedProcess);\n    ;\n    args.push(this.TimeLag);\n    ;\n    args.push(this.SequenceType);\n    ;\n    args.push(this.UserDefinedSequenceType);\n    ;\n    return args;\n  }\n};\nvar IfcRelServicesBuildings = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSystem = RelatingSystem;\n    this.RelatedBuildings = RelatedBuildings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSystem = tape[ptr++];\n    let RelatedBuildings = tape[ptr++];\n    return new IfcRelServicesBuildings(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSystem);\n    ;\n    args.push(this.RelatedBuildings);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary1stLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary1stLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary2ndLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n    this.CorrespondingBoundary = CorrespondingBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    let CorrespondingBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary2ndLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    args.push(this.CorrespondingBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelVoidsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedOpeningElement = RelatedOpeningElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedOpeningElement = tape[ptr++];\n    return new IfcRelVoidsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedOpeningElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelationship = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelationship(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcReparametrisedCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve, ParamLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n    this.ParamLength = ParamLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    let ParamLength = tape[ptr++];\n    return new IfcReparametrisedCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve, ParamLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    args.push(this.ParamLength);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    return new IfcRepresentationContext(expressID, type, ContextIdentifier, ContextType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcRepresentationMap = class {\n  constructor(expressID, type, MappingOrigin, MappedRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingOrigin = MappingOrigin;\n    this.MappedRepresentation = MappedRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingOrigin = tape[ptr++];\n    let MappedRepresentation = tape[ptr++];\n    return new IfcRepresentationMap(expressID, type, MappingOrigin, MappedRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingOrigin);\n    ;\n    args.push(this.MappedRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcResourceApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcResourceApprovalRelationship(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcResourceConstraintRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingConstraint = RelatingConstraint;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcResourceConstraintRelationship(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcResourceLevelRelationship = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcResourceLevelRelationship(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcResourceTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ScheduleWork = ScheduleWork;\n    this.ScheduleUsage = ScheduleUsage;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.ScheduleContour = ScheduleContour;\n    this.LevelingDelay = LevelingDelay;\n    this.IsOverAllocated = IsOverAllocated;\n    this.StatusTime = StatusTime;\n    this.ActualWork = ActualWork;\n    this.ActualUsage = ActualUsage;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingWork = RemainingWork;\n    this.RemainingUsage = RemainingUsage;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ScheduleWork = tape[ptr++];\n    let ScheduleUsage = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let ScheduleContour = tape[ptr++];\n    let LevelingDelay = tape[ptr++];\n    let IsOverAllocated = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualWork = tape[ptr++];\n    let ActualUsage = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingWork = tape[ptr++];\n    let RemainingUsage = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcResourceTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ScheduleWork);\n    ;\n    args.push(this.ScheduleUsage);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.ScheduleContour);\n    ;\n    args.push(this.LevelingDelay);\n    ;\n    args.push(this.IsOverAllocated);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualWork);\n    ;\n    args.push(this.ActualUsage);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingWork);\n    ;\n    args.push(this.RemainingUsage);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    return new IfcRevolvedAreaSolid(expressID, type, SweptArea, Position, Axis, Angle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcRevolvedAreaSolidTapered(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCone = class {\n  constructor(expressID, type, Position, Height, BottomRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.BottomRadius = BottomRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let BottomRadius = tape[ptr++];\n    return new IfcRightCircularCone(expressID, type, Position, Height, BottomRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.BottomRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCylinder = class {\n  constructor(expressID, type, Position, Height, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcRightCircularCylinder(expressID, type, Position, Height, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcRoof = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoof(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoofType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoofType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoot = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRoot(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRoundedRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.RoundingRadius = RoundingRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let RoundingRadius = tape[ptr++];\n    return new IfcRoundedRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.RoundingRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSIUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Prefix, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Prefix = Prefix;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Prefix = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcSIUnit(expressID, type, Dimensions, UnitType, Prefix, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Prefix);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSchedulingTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    return new IfcSchedulingTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    return args;\n  }\n};\nvar IfcSeamCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSeamCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSectionProperties = class {\n  constructor(expressID, type, SectionType, StartProfile, EndProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SectionType = SectionType;\n    this.StartProfile = StartProfile;\n    this.EndProfile = EndProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SectionType = tape[ptr++];\n    let StartProfile = tape[ptr++];\n    let EndProfile = tape[ptr++];\n    return new IfcSectionProperties(expressID, type, SectionType, StartProfile, EndProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SectionType);\n    ;\n    args.push(this.StartProfile);\n    ;\n    args.push(this.EndProfile);\n    ;\n    return args;\n  }\n};\nvar IfcSectionReinforcementProperties = class {\n  constructor(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LongitudinalStartPosition = LongitudinalStartPosition;\n    this.LongitudinalEndPosition = LongitudinalEndPosition;\n    this.TransversePosition = TransversePosition;\n    this.ReinforcementRole = ReinforcementRole;\n    this.SectionDefinition = SectionDefinition;\n    this.CrossSectionReinforcementDefinitions = CrossSectionReinforcementDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LongitudinalStartPosition = tape[ptr++];\n    let LongitudinalEndPosition = tape[ptr++];\n    let TransversePosition = tape[ptr++];\n    let ReinforcementRole = tape[ptr++];\n    let SectionDefinition = tape[ptr++];\n    let CrossSectionReinforcementDefinitions = tape[ptr++];\n    return new IfcSectionReinforcementProperties(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LongitudinalStartPosition);\n    ;\n    args.push(this.LongitudinalEndPosition);\n    ;\n    args.push(this.TransversePosition);\n    ;\n    args.push(this.ReinforcementRole);\n    ;\n    args.push(this.SectionDefinition);\n    ;\n    args.push(this.CrossSectionReinforcementDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolid = class {\n  constructor(expressID, type, Directrix, CrossSections) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    return new IfcSectionedSolid(expressID, type, Directrix, CrossSections);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolidHorizontal = class {\n  constructor(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n    this.FixedAxisVertical = FixedAxisVertical;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    let FixedAxisVertical = tape[ptr++];\n    return new IfcSectionedSolidHorizontal(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    args.push(this.FixedAxisVertical);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSpine = class {\n  constructor(expressID, type, SpineCurve, CrossSections, CrossSectionPositions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SpineCurve = SpineCurve;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SpineCurve = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    return new IfcSectionedSpine(expressID, type, SpineCurve, CrossSections, CrossSectionPositions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SpineCurve);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    return args;\n  }\n};\nvar IfcSensor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSensorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShapeAspect = class {\n  constructor(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ShapeRepresentations = ShapeRepresentations;\n    this.Name = Name;\n    this.Description = Description;\n    this.ProductDefinitional = ProductDefinitional;\n    this.PartOfProductDefinitionShape = PartOfProductDefinitionShape;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ShapeRepresentations = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ProductDefinitional = tape[ptr++];\n    let PartOfProductDefinitionShape = tape[ptr++];\n    return new IfcShapeAspect(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ShapeRepresentations);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ProductDefinitional);\n    ;\n    args.push(this.PartOfProductDefinitionShape);\n    ;\n    return args;\n  }\n};\nvar IfcShapeModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShapeRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShellBasedSurfaceModel = class {\n  constructor(expressID, type, SbsmBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SbsmBoundary = SbsmBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SbsmBoundary = tape[ptr++];\n    return new IfcShellBasedSurfaceModel(expressID, type, SbsmBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SbsmBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcSimpleProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcSimpleProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcSimplePropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.PrimaryMeasureType = PrimaryMeasureType;\n    this.SecondaryMeasureType = SecondaryMeasureType;\n    this.Enumerators = Enumerators;\n    this.PrimaryUnit = PrimaryUnit;\n    this.SecondaryUnit = SecondaryUnit;\n    this.Expression = Expression;\n    this.AccessState = AccessState;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let PrimaryMeasureType = tape[ptr++];\n    let SecondaryMeasureType = tape[ptr++];\n    let Enumerators = tape[ptr++];\n    let PrimaryUnit = tape[ptr++];\n    let SecondaryUnit = tape[ptr++];\n    let Expression = tape[ptr++];\n    let AccessState = tape[ptr++];\n    return new IfcSimplePropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.PrimaryMeasureType);\n    ;\n    args.push(this.SecondaryMeasureType);\n    ;\n    args.push(this.Enumerators);\n    ;\n    args.push(this.PrimaryUnit);\n    ;\n    args.push(this.SecondaryUnit);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.AccessState);\n    ;\n    return args;\n  }\n};\nvar IfcSite = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.RefLatitude = RefLatitude;\n    this.RefLongitude = RefLongitude;\n    this.RefElevation = RefElevation;\n    this.LandTitleNumber = LandTitleNumber;\n    this.SiteAddress = SiteAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let RefLatitude = tape[ptr++];\n    let RefLongitude = tape[ptr++];\n    let RefElevation = tape[ptr++];\n    let LandTitleNumber = tape[ptr++];\n    let SiteAddress = tape[ptr++];\n    return new IfcSite(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.RefLatitude);\n    ;\n    args.push(this.RefLongitude);\n    ;\n    args.push(this.RefElevation);\n    ;\n    args.push(this.LandTitleNumber);\n    ;\n    args.push(this.SiteAddress);\n    ;\n    return args;\n  }\n};\nvar IfcSlab = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlab(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlippageConnectionCondition = class {\n  constructor(expressID, type, Name, SlippageX, SlippageY, SlippageZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SlippageX = SlippageX;\n    this.SlippageY = SlippageY;\n    this.SlippageZ = SlippageZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SlippageX = tape[ptr++];\n    let SlippageY = tape[ptr++];\n    let SlippageZ = tape[ptr++];\n    return new IfcSlippageConnectionCondition(expressID, type, Name, SlippageX, SlippageY, SlippageZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SlippageX);\n    ;\n    args.push(this.SlippageY);\n    ;\n    args.push(this.SlippageZ);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolidModel = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSolidModel(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSpace = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n    this.ElevationWithFlooring = ElevationWithFlooring;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ElevationWithFlooring = tape[ptr++];\n    return new IfcSpace(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ElevationWithFlooring);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeater = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeater(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeaterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeaterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpaceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialStructureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpatialZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZoneType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialZoneType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSphere = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphere(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcSphericalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphericalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStair = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStair(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NumberOfRisers = NumberOfRisers;\n    this.NumberOfTreads = NumberOfTreads;\n    this.RiserHeight = RiserHeight;\n    this.TreadLength = TreadLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NumberOfRisers = tape[ptr++];\n    let NumberOfTreads = tape[ptr++];\n    let RiserHeight = tape[ptr++];\n    let TreadLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NumberOfRisers);\n    ;\n    args.push(this.NumberOfTreads);\n    ;\n    args.push(this.RiserHeight);\n    ;\n    args.push(this.TreadLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAnalysisModel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.OrientationOf2DPlane = OrientationOf2DPlane;\n    this.LoadedBy = LoadedBy;\n    this.HasResults = HasResults;\n    this.SharedPlacement = SharedPlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OrientationOf2DPlane = tape[ptr++];\n    let LoadedBy = tape[ptr++];\n    let HasResults = tape[ptr++];\n    let SharedPlacement = tape[ptr++];\n    return new IfcStructuralAnalysisModel(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OrientationOf2DPlane);\n    ;\n    args.push(this.LoadedBy);\n    ;\n    args.push(this.HasResults);\n    ;\n    args.push(this.SharedPlacement);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnectionCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralConnectionCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLinearAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralLinearAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoad = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoad(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n    this.SelfWeightCoefficients = SelfWeightCoefficients;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let SelfWeightCoefficients = tape[ptr++];\n    return new IfcStructuralLoadCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.SelfWeightCoefficients);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadConfiguration = class {\n  constructor(expressID, type, Name, Values, Locations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Values = Values;\n    this.Locations = Locations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Values = tape[ptr++];\n    let Locations = tape[ptr++];\n    return new IfcStructuralLoadConfiguration(expressID, type, Name, Values, Locations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Values);\n    ;\n    args.push(this.Locations);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    return new IfcStructuralLoadGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadLinearForce = class {\n  constructor(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LinearForceX = LinearForceX;\n    this.LinearForceY = LinearForceY;\n    this.LinearForceZ = LinearForceZ;\n    this.LinearMomentX = LinearMomentX;\n    this.LinearMomentY = LinearMomentY;\n    this.LinearMomentZ = LinearMomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LinearForceX = tape[ptr++];\n    let LinearForceY = tape[ptr++];\n    let LinearForceZ = tape[ptr++];\n    let LinearMomentX = tape[ptr++];\n    let LinearMomentY = tape[ptr++];\n    let LinearMomentZ = tape[ptr++];\n    return new IfcStructuralLoadLinearForce(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LinearForceX);\n    ;\n    args.push(this.LinearForceY);\n    ;\n    args.push(this.LinearForceZ);\n    ;\n    args.push(this.LinearMomentX);\n    ;\n    args.push(this.LinearMomentY);\n    ;\n    args.push(this.LinearMomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadOrResult = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadOrResult(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadPlanarForce = class {\n  constructor(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PlanarForceX = PlanarForceX;\n    this.PlanarForceY = PlanarForceY;\n    this.PlanarForceZ = PlanarForceZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PlanarForceX = tape[ptr++];\n    let PlanarForceY = tape[ptr++];\n    let PlanarForceZ = tape[ptr++];\n    return new IfcStructuralLoadPlanarForce(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PlanarForceX);\n    ;\n    args.push(this.PlanarForceY);\n    ;\n    args.push(this.PlanarForceZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacement = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacement(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacementDistortion = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n    this.Distortion = Distortion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    let Distortion = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacementDistortion(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    args.push(this.Distortion);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForce = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    return new IfcStructuralLoadSingleForce(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForceWarping = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n    this.WarpingMoment = WarpingMoment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    let WarpingMoment = tape[ptr++];\n    return new IfcStructuralLoadSingleForceWarping(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    args.push(this.WarpingMoment);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadStatic = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadStatic(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadTemperature = class {\n  constructor(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DeltaTConstant = DeltaTConstant;\n    this.DeltaTY = DeltaTY;\n    this.DeltaTZ = DeltaTZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DeltaTConstant = tape[ptr++];\n    let DeltaTY = tape[ptr++];\n    let DeltaTZ = tape[ptr++];\n    return new IfcStructuralLoadTemperature(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DeltaTConstant);\n    ;\n    args.push(this.DeltaTY);\n    ;\n    args.push(this.DeltaTZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPlanarAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralPlanarAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralPointAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcStructuralPointConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralPointReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralResultGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheoryType = TheoryType;\n    this.ResultForLoadGroup = ResultForLoadGroup;\n    this.IsLinear = IsLinear;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheoryType = tape[ptr++];\n    let ResultForLoadGroup = tape[ptr++];\n    let IsLinear = tape[ptr++];\n    return new IfcStructuralResultGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheoryType);\n    ;\n    args.push(this.ResultForLoadGroup);\n    ;\n    args.push(this.IsLinear);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralSurfaceConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStyleModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyleModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcStyledItem = class {\n  constructor(expressID, type, Item, Styles, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Item = Item;\n    this.Styles = Styles;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Item = tape[ptr++];\n    let Styles = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcStyledItem(expressID, type, Item, Styles, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Item);\n    ;\n    args.push(this.Styles);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStyledRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyledRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubedge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, ParentEdge) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.ParentEdge = ParentEdge;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let ParentEdge = tape[ptr++];\n    return new IfcSubedge(expressID, type, EdgeStart, EdgeEnd, ParentEdge);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.ParentEdge);\n    ;\n    return args;\n  }\n};\nvar IfcSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSurfaceCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSurfaceCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceCurveSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.ReferenceSurface = ReferenceSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let ReferenceSurface = tape[ptr++];\n    return new IfcSurfaceCurveSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.ReferenceSurface);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSurfaceFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfLinearExtrusion = class {\n  constructor(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcSurfaceOfLinearExtrusion(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfRevolution = class {\n  constructor(expressID, type, SweptCurve, Position, AxisPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.AxisPosition = AxisPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let AxisPosition = tape[ptr++];\n    return new IfcSurfaceOfRevolution(expressID, type, SweptCurve, Position, AxisPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.AxisPosition);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceReinforcementArea = class {\n  constructor(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SurfaceReinforcement1 = SurfaceReinforcement1;\n    this.SurfaceReinforcement2 = SurfaceReinforcement2;\n    this.ShearReinforcement = ShearReinforcement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SurfaceReinforcement1 = tape[ptr++];\n    let SurfaceReinforcement2 = tape[ptr++];\n    let ShearReinforcement = tape[ptr++];\n    return new IfcSurfaceReinforcementArea(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SurfaceReinforcement1);\n    ;\n    args.push(this.SurfaceReinforcement2);\n    ;\n    args.push(this.ShearReinforcement);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyle = class {\n  constructor(expressID, type, Name, Side, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Side = Side;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Side = tape[ptr++];\n    let Styles = tape[ptr++];\n    return new IfcSurfaceStyle(expressID, type, Name, Side, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Side);\n    ;\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleLighting = class {\n  constructor(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.DiffuseReflectionColour = DiffuseReflectionColour;\n    this.TransmissionColour = TransmissionColour;\n    this.ReflectanceColour = ReflectanceColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DiffuseTransmissionColour = tape[ptr++];\n    let DiffuseReflectionColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let ReflectanceColour = tape[ptr++];\n    return new IfcSurfaceStyleLighting(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.DiffuseReflectionColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.ReflectanceColour);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRefraction = class {\n  constructor(expressID, type, RefractionIndex, DispersionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RefractionIndex = RefractionIndex;\n    this.DispersionFactor = DispersionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RefractionIndex = tape[ptr++];\n    let DispersionFactor = tape[ptr++];\n    return new IfcSurfaceStyleRefraction(expressID, type, RefractionIndex, DispersionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RefractionIndex);\n    ;\n    args.push(this.DispersionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRendering = class {\n  constructor(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n    this.DiffuseColour = DiffuseColour;\n    this.TransmissionColour = TransmissionColour;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.ReflectionColour = ReflectionColour;\n    this.SpecularColour = SpecularColour;\n    this.SpecularHighlight = SpecularHighlight;\n    this.ReflectanceMethod = ReflectanceMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    let DiffuseColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let DiffuseTransmissionColour = tape[ptr++];\n    let ReflectionColour = tape[ptr++];\n    let SpecularColour = tape[ptr++];\n    let SpecularHighlight = tape[ptr++];\n    let ReflectanceMethod = tape[ptr++];\n    return new IfcSurfaceStyleRendering(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    args.push(this.DiffuseColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.ReflectionColour);\n    ;\n    args.push(this.SpecularColour);\n    ;\n    args.push(this.SpecularHighlight);\n    ;\n    args.push(this.ReflectanceMethod);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleShading = class {\n  constructor(expressID, type, SurfaceColour, Transparency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    return new IfcSurfaceStyleShading(expressID, type, SurfaceColour, Transparency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleWithTextures = class {\n  constructor(expressID, type, Textures) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Textures = Textures;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Textures = tape[ptr++];\n    return new IfcSurfaceStyleWithTextures(expressID, type, Textures);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Textures);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcSurfaceTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptAreaSolid(expressID, type, SweptArea, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolid = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    return new IfcSweptDiskSolid(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolidPolygonal = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FilletRadius = FilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    return new IfcSweptDiskSolidPolygonal(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSweptSurface = class {\n  constructor(expressID, type, SweptCurve, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptSurface(expressID, type, SweptCurve, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.WebEdgeRadius = WebEdgeRadius;\n    this.WebSlope = WebSlope;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let WebEdgeRadius = tape[ptr++];\n    let WebSlope = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcTShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.WebEdgeRadius);\n    ;\n    args.push(this.WebSlope);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcTable = class {\n  constructor(expressID, type, Name, Rows, Columns) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Rows = Rows;\n    this.Columns = Columns;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Rows = tape[ptr++];\n    let Columns = tape[ptr++];\n    return new IfcTable(expressID, type, Name, Rows, Columns);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Rows);\n    ;\n    args.push(this.Columns);\n    ;\n    return args;\n  }\n};\nvar IfcTableColumn = class {\n  constructor(expressID, type, Identifier, Name, Description, Unit, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcTableColumn(expressID, type, Identifier, Name, Description, Unit, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcTableRow = class {\n  constructor(expressID, type, RowCells, IsHeading) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RowCells = RowCells;\n    this.IsHeading = IsHeading;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RowCells = tape[ptr++];\n    let IsHeading = tape[ptr++];\n    return new IfcTableRow(expressID, type, RowCells, IsHeading);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RowCells);\n    ;\n    args.push(this.IsHeading);\n    ;\n    return args;\n  }\n};\nvar IfcTank = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTank(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTankType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTankType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTask = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Status = Status;\n    this.WorkMethod = WorkMethod;\n    this.IsMilestone = IsMilestone;\n    this.Priority = Priority;\n    this.TaskTime = TaskTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Status = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    let IsMilestone = tape[ptr++];\n    let Priority = tape[ptr++];\n    let TaskTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTask(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    args.push(this.IsMilestone);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.TaskTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcTaskTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTimeRecurring = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n    this.Recurrence = Recurrence;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    let Recurrence = tape[ptr++];\n    return new IfcTaskTimeRecurring(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    args.push(this.Recurrence);\n    ;\n    return args;\n  }\n};\nvar IfcTaskType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.WorkMethod = WorkMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    return new IfcTaskType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    return args;\n  }\n};\nvar IfcTelecomAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.TelephoneNumbers = TelephoneNumbers;\n    this.FacsimileNumbers = FacsimileNumbers;\n    this.PagerNumber = PagerNumber;\n    this.ElectronicMailAddresses = ElectronicMailAddresses;\n    this.WWWHomePageURL = WWWHomePageURL;\n    this.MessagingIDs = MessagingIDs;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let TelephoneNumbers = tape[ptr++];\n    let FacsimileNumbers = tape[ptr++];\n    let PagerNumber = tape[ptr++];\n    let ElectronicMailAddresses = tape[ptr++];\n    let WWWHomePageURL = tape[ptr++];\n    let MessagingIDs = tape[ptr++];\n    return new IfcTelecomAddress(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.TelephoneNumbers);\n    ;\n    args.push(this.FacsimileNumbers);\n    ;\n    args.push(this.PagerNumber);\n    ;\n    args.push(this.ElectronicMailAddresses);\n    ;\n    args.push(this.WWWHomePageURL);\n    ;\n    args.push(this.MessagingIDs);\n    ;\n    return args;\n  }\n};\nvar IfcTendon = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.TensionForce = TensionForce;\n    this.PreStress = PreStress;\n    this.FrictionCoefficient = FrictionCoefficient;\n    this.AnchorageSlip = AnchorageSlip;\n    this.MinCurvatureRadius = MinCurvatureRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let TensionForce = tape[ptr++];\n    let PreStress = tape[ptr++];\n    let FrictionCoefficient = tape[ptr++];\n    let AnchorageSlip = tape[ptr++];\n    let MinCurvatureRadius = tape[ptr++];\n    return new IfcTendon(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.TensionForce);\n    ;\n    args.push(this.PreStress);\n    ;\n    args.push(this.FrictionCoefficient);\n    ;\n    args.push(this.AnchorageSlip);\n    ;\n    args.push(this.MinCurvatureRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.SheathDiameter = SheathDiameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let SheathDiameter = tape[ptr++];\n    return new IfcTendonType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.SheathDiameter);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedFaceSet = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTessellatedFaceSet(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTessellatedItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTextLiteral = class {\n  constructor(expressID, type, Literal, Placement, Path) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    return new IfcTextLiteral(expressID, type, Literal, Placement, Path);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    return args;\n  }\n};\nvar IfcTextLiteralWithExtent = class {\n  constructor(expressID, type, Literal, Placement, Path, Extent, BoxAlignment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n    this.Extent = Extent;\n    this.BoxAlignment = BoxAlignment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    let Extent = tape[ptr++];\n    let BoxAlignment = tape[ptr++];\n    return new IfcTextLiteralWithExtent(expressID, type, Literal, Placement, Path, Extent, BoxAlignment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    args.push(this.Extent);\n    ;\n    args.push(this.BoxAlignment);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyle = class {\n  constructor(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TextCharacterAppearance = TextCharacterAppearance;\n    this.TextStyle = TextStyle;\n    this.TextFontStyle = TextFontStyle;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TextCharacterAppearance = tape[ptr++];\n    let TextStyle = tape[ptr++];\n    let TextFontStyle = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcTextStyle(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TextCharacterAppearance);\n    ;\n    args.push(this.TextStyle);\n    ;\n    args.push(this.TextFontStyle);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleFontModel = class {\n  constructor(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FontFamily = FontFamily;\n    this.FontStyle = FontStyle;\n    this.FontVariant = FontVariant;\n    this.FontWeight = FontWeight;\n    this.FontSize = FontSize;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FontFamily = tape[ptr++];\n    let FontStyle = tape[ptr++];\n    let FontVariant = tape[ptr++];\n    let FontWeight = tape[ptr++];\n    let FontSize = tape[ptr++];\n    return new IfcTextStyleFontModel(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FontFamily);\n    ;\n    args.push(this.FontStyle);\n    ;\n    args.push(this.FontVariant);\n    ;\n    args.push(this.FontWeight);\n    ;\n    args.push(this.FontSize);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleForDefinedFont = class {\n  constructor(expressID, type, Colour, BackgroundColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Colour = Colour;\n    this.BackgroundColour = BackgroundColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Colour = tape[ptr++];\n    let BackgroundColour = tape[ptr++];\n    return new IfcTextStyleForDefinedFont(expressID, type, Colour, BackgroundColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Colour);\n    ;\n    args.push(this.BackgroundColour);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleTextModel = class {\n  constructor(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TextIndent = TextIndent;\n    this.TextAlign = TextAlign;\n    this.TextDecoration = TextDecoration;\n    this.LetterSpacing = LetterSpacing;\n    this.WordSpacing = WordSpacing;\n    this.TextTransform = TextTransform;\n    this.LineHeight = LineHeight;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TextIndent = tape[ptr++];\n    let TextAlign = tape[ptr++];\n    let TextDecoration = tape[ptr++];\n    let LetterSpacing = tape[ptr++];\n    let WordSpacing = tape[ptr++];\n    let TextTransform = tape[ptr++];\n    let LineHeight = tape[ptr++];\n    return new IfcTextStyleTextModel(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TextIndent);\n    ;\n    args.push(this.TextAlign);\n    ;\n    args.push(this.TextDecoration);\n    ;\n    args.push(this.LetterSpacing);\n    ;\n    args.push(this.WordSpacing);\n    ;\n    args.push(this.TextTransform);\n    ;\n    args.push(this.LineHeight);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinate = class {\n  constructor(expressID, type, Maps) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    return new IfcTextureCoordinate(expressID, type, Maps);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinateGenerator = class {\n  constructor(expressID, type, Maps, Mode, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Mode = Mode;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Mode = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcTextureCoordinateGenerator(expressID, type, Maps, Mode, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcTextureMap = class {\n  constructor(expressID, type, Maps, Vertices, MappedTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Vertices = Vertices;\n    this.MappedTo = MappedTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Vertices = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    return new IfcTextureMap(expressID, type, Maps, Vertices, MappedTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Vertices);\n    ;\n    args.push(this.MappedTo);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertex = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTextureVertex(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertexList = class {\n  constructor(expressID, type, TexCoordsList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TexCoordsList = TexCoordsList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TexCoordsList = tape[ptr++];\n    return new IfcTextureVertexList(expressID, type, TexCoordsList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TexCoordsList);\n    ;\n    return args;\n  }\n};\nvar IfcTimePeriod = class {\n  constructor(expressID, type, StartTime, EndTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    return new IfcTimePeriod(expressID, type, StartTime, EndTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeriesValue = class {\n  constructor(expressID, type, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ListValues = tape[ptr++];\n    return new IfcTimeSeriesValue(expressID, type, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcTopologicalRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTopologicalRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTopologyRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcTopologyRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcToroidalSurface = class {\n  constructor(expressID, type, Position, MajorRadius, MinorRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.MajorRadius = MajorRadius;\n    this.MinorRadius = MinorRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let MajorRadius = tape[ptr++];\n    let MinorRadius = tape[ptr++];\n    return new IfcToroidalSurface(expressID, type, Position, MajorRadius, MinorRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.MajorRadius);\n    ;\n    args.push(this.MinorRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTransformer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransformerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransitionCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.StartRadius = StartRadius;\n    this.EndRadius = EndRadius;\n    this.IsStartRadiusCCW = IsStartRadiusCCW;\n    this.IsEndRadiusCCW = IsEndRadiusCCW;\n    this.TransitionCurveType = TransitionCurveType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let StartRadius = tape[ptr++];\n    let EndRadius = tape[ptr++];\n    let IsStartRadiusCCW = tape[ptr++];\n    let IsEndRadiusCCW = tape[ptr++];\n    let TransitionCurveType = tape[ptr++];\n    return new IfcTransitionCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.StartRadius);\n    ;\n    args.push(this.EndRadius);\n    ;\n    args.push(this.IsStartRadiusCCW);\n    ;\n    args.push(this.IsEndRadiusCCW);\n    ;\n    args.push(this.TransitionCurveType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTrapeziumProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomXDim = BottomXDim;\n    this.TopXDim = TopXDim;\n    this.YDim = YDim;\n    this.TopXOffset = TopXOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomXDim = tape[ptr++];\n    let TopXDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let TopXOffset = tape[ptr++];\n    return new IfcTrapeziumProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomXDim);\n    ;\n    args.push(this.TopXDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.TopXOffset);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedFaceSet = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcTriangulatedFaceSet(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedIrregularNetwork = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n    this.Flags = Flags;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    let Flags = tape[ptr++];\n    return new IfcTriangulatedIrregularNetwork(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    args.push(this.Flags);\n    ;\n    return args;\n  }\n};\nvar IfcTrimmedCurve = class {\n  constructor(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Trim1 = Trim1;\n    this.Trim2 = Trim2;\n    this.SenseAgreement = SenseAgreement;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Trim1 = tape[ptr++];\n    let Trim2 = tape[ptr++];\n    let SenseAgreement = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcTrimmedCurve(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Trim1);\n    ;\n    args.push(this.Trim2);\n    ;\n    args.push(this.SenseAgreement);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundle(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundleType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundleType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    return new IfcTypeObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    return new IfcTypeProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcTypeProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcTypeResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    return new IfcTypeResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    return args;\n  }\n};\nvar IfcUShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcUShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcUnitAssignment = class {\n  constructor(expressID, type, Units) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Units = Units;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Units = tape[ptr++];\n    return new IfcUnitAssignment(expressID, type, Units);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Units);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValve = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValve(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValveType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValveType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVector = class {\n  constructor(expressID, type, Orientation, Magnitude) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Orientation = Orientation;\n    this.Magnitude = Magnitude;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Orientation = tape[ptr++];\n    let Magnitude = tape[ptr++];\n    return new IfcVector(expressID, type, Orientation, Magnitude);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Orientation);\n    ;\n    args.push(this.Magnitude);\n    ;\n    return args;\n  }\n};\nvar IfcVertex = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcVertex(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcVertexLoop = class {\n  constructor(expressID, type, LoopVertex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LoopVertex = LoopVertex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LoopVertex = tape[ptr++];\n    return new IfcVertexLoop(expressID, type, LoopVertex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LoopVertex);\n    ;\n    return args;\n  }\n};\nvar IfcVertexPoint = class {\n  constructor(expressID, type, VertexGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VertexGeometry = VertexGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VertexGeometry = tape[ptr++];\n    return new IfcVertexPoint(expressID, type, VertexGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VertexGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcVirtualElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualGridIntersection = class {\n  constructor(expressID, type, IntersectingAxes, OffsetDistances) {\n    this.expressID = expressID;\n    this.type = type;\n    this.IntersectingAxes = IntersectingAxes;\n    this.OffsetDistances = OffsetDistances;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let IntersectingAxes = tape[ptr++];\n    let OffsetDistances = tape[ptr++];\n    return new IfcVirtualGridIntersection(expressID, type, IntersectingAxes, OffsetDistances);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.IntersectingAxes);\n    ;\n    args.push(this.OffsetDistances);\n    ;\n    return args;\n  }\n};\nvar IfcVoidingFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVoidingFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWindow = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindow(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.TransomThickness = TransomThickness;\n    this.MullionThickness = MullionThickness;\n    this.FirstTransomOffset = FirstTransomOffset;\n    this.SecondTransomOffset = SecondTransomOffset;\n    this.FirstMullionOffset = FirstMullionOffset;\n    this.SecondMullionOffset = SecondMullionOffset;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningOffset = LiningOffset;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let MullionThickness = tape[ptr++];\n    let FirstTransomOffset = tape[ptr++];\n    let SecondTransomOffset = tape[ptr++];\n    let FirstMullionOffset = tape[ptr++];\n    let SecondMullionOffset = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcWindowLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.MullionThickness);\n    ;\n    args.push(this.FirstTransomOffset);\n    ;\n    args.push(this.SecondTransomOffset);\n    ;\n    args.push(this.FirstMullionOffset);\n    ;\n    args.push(this.SecondMullionOffset);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcWindowPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcWindowPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ConstructionType = ConstructionType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcWindowStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcWindowType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkCalendar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.WorkingTimes = WorkingTimes;\n    this.ExceptionTimes = ExceptionTimes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let WorkingTimes = tape[ptr++];\n    let ExceptionTimes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkCalendar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.WorkingTimes);\n    ;\n    args.push(this.ExceptionTimes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    return new IfcWorkControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    return args;\n  }\n};\nvar IfcWorkPlan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkPlan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.RecurrencePattern = RecurrencePattern;\n    this.Start = Start;\n    this.Finish = Finish;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let RecurrencePattern = tape[ptr++];\n    let Start = tape[ptr++];\n    let Finish = tape[ptr++];\n    return new IfcWorkTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.RecurrencePattern);\n    ;\n    args.push(this.Start);\n    ;\n    args.push(this.Finish);\n    ;\n    return args;\n  }\n};\nvar IfcZShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    return new IfcZShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    return args;\n  }\n};\nvar IfcZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\n\n// dist/web-ifc-api.ts\nvar WebIFCWasm = require_web_ifc();\nvar UNKNOWN = 0;\nvar STRING = 1;\nvar LABEL = 2;\nvar ENUM = 3;\nvar REAL = 4;\nvar REF = 5;\nvar EMPTY = 6;\nvar SET_BEGIN = 7;\nvar SET_END = 8;\nvar LINE_END = 9;\nfunction ms() {\n  return new Date().getTime();\n}\nvar IfcAPI = class {\n  constructor() {\n    this.wasmModule = void 0;\n    this.fs = void 0;\n  }\n  Init() {\n    return __async(this, null, function* () {\n      if (WebIFCWasm) {\n        this.wasmModule = yield WebIFCWasm({ noInitialRun: true });\n        this.fs = this.wasmModule.FS;\n      } else {\n        console.error(`Could not find wasm module at './web-ifc' from web-ifc-api.ts`);\n      }\n    });\n  }\n  OpenModel(data, settings) {\n    this.wasmModule[\"FS_createDataFile\"](\"/\", \"filename\", data, true, true, true);\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12\n    }, settings);\n    let result = this.wasmModule.OpenModel(s);\n    this.wasmModule[\"FS_unlink\"](\"/filename\");\n    return result;\n  }\n  CreateModel(settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12\n    }, settings);\n    let result = this.wasmModule.CreateModel(s);\n    return result;\n  }\n  ExportFileAsIFC(modelID) {\n    this.wasmModule.ExportFileAsIFC(modelID);\n    let result = this.fs.readFile(\"/export.ifc\");\n    this.wasmModule[\"FS_unlink\"](\"/export.ifc\");\n    return result;\n  }\n  GetGeometry(modelID, geometryExpressID) {\n    return this.wasmModule.GetGeometry(modelID, geometryExpressID);\n  }\n  GetLine(modelID, expressID, flatten = false) {\n    let rawLineData = this.GetRawLineData(modelID, expressID);\n    let lineData = FromRawLineData[rawLineData.type](rawLineData);\n    if (flatten) {\n      this.FlattenLine(modelID, lineData);\n    }\n    return lineData;\n  }\n  WriteLine(modelID, lineObject) {\n    Object.keys(lineObject).forEach((propertyName) => {\n      let property = lineObject[propertyName];\n      if (property && property.expressID !== void 0) {\n        this.WriteLine(modelID, property);\n        lineObject[propertyName] = {\n          type: 5,\n          value: property.expressID\n        };\n      } else if (Array.isArray(property) && property.length > 0) {\n        for (let i = 0; i < property.length; i++) {\n          if (property[i].expressID !== void 0) {\n            this.WriteLine(modelID, property[i]);\n            lineObject[propertyName][i] = {\n              type: 5,\n              value: property[i].expressID\n            };\n          }\n        }\n      }\n    });\n    let rawLineData = {\n      ID: lineObject.expressID,\n      type: lineObject.type,\n      arguments: lineObject.ToTape()\n    };\n    this.WriteRawLineData(modelID, rawLineData);\n  }\n  FlattenLine(modelID, line) {\n    Object.keys(line).forEach((propertyName) => {\n      let property = line[propertyName];\n      if (property && property.type === 5) {\n        line[propertyName] = this.GetLine(modelID, property.value, true);\n      } else if (Array.isArray(property) && property.length > 0 && property[0].type === 5) {\n        for (let i = 0; i < property.length; i++) {\n          line[propertyName][i] = this.GetLine(modelID, property[i].value, true);\n        }\n      }\n    });\n  }\n  GetRawLineData(modelID, expressID) {\n    return this.wasmModule.GetLine(modelID, expressID);\n  }\n  WriteRawLineData(modelID, data) {\n    return this.wasmModule.WriteLine(modelID, data.ID, data.type, data.arguments);\n  }\n  GetLineIDsWithType(modelID, type) {\n    return this.wasmModule.GetLineIDsWithType(modelID, type);\n  }\n  GetAllLines(modelID) {\n    return this.wasmModule.GetAllLines(modelID);\n  }\n  SetGeometryTransformation(modelID, transformationMatrix) {\n    if (transformationMatrix.length != 16) {\n      console.log(`Bad transformation matrix size: ${transformationMatrix.length}`);\n      return;\n    }\n    this.wasmModule.SetGeometryTransformation(modelID, transformationMatrix);\n  }\n  GetVertexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPF32, ptr, size);\n  }\n  GetIndexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPU32, ptr, size);\n  }\n  getSubArray(heap, startPtr, sizeBytes) {\n    return heap.subarray(startPtr / 4, startPtr / 4 + sizeBytes).slice(0);\n  }\n  CloseModel(modelID) {\n    this.wasmModule.CloseModel(modelID);\n  }\n  StreamAllMeshes(modelID, meshCallback) {\n    this.wasmModule.StreamAllMeshes(modelID, meshCallback);\n  }\n  IsModelOpen(modelID) {\n    return this.wasmModule.IsModelOpen(modelID);\n  }\n  LoadAllGeometry(modelID) {\n    return this.wasmModule.LoadAllGeometry(modelID);\n  }\n  GetFlatMesh(modelID, expressID) {\n    return this.wasmModule.GetFlatMesh(modelID, expressID);\n  }\n  SetWasmPath(path) {\n    WasmPath = path;\n  }\n};\nexport {\n  EMPTY,\n  ENUM,\n  FromRawLineData,\n  Handle,\n  IFCACTIONREQUEST,\n  IFCACTOR,\n  IFCACTORROLE,\n  IFCACTUATOR,\n  IFCACTUATORTYPE,\n  IFCADDRESS,\n  IFCADVANCEDBREP,\n  IFCADVANCEDBREPWITHVOIDS,\n  IFCADVANCEDFACE,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTERMINALBOXTYPE,\n  IFCAIRTERMINALTYPE,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCAIRTOAIRHEATRECOVERYTYPE,\n  IFCALARM,\n  IFCALARMTYPE,\n  IFCALIGNMENT,\n  IFCALIGNMENT2DHORIZONTAL,\n  IFCALIGNMENT2DHORIZONTALSEGMENT,\n  IFCALIGNMENT2DSEGMENT,\n  IFCALIGNMENT2DVERSEGCIRCULARARC,\n  IFCALIGNMENT2DVERSEGLINE,\n  IFCALIGNMENT2DVERSEGPARABOLICARC,\n  IFCALIGNMENT2DVERTICAL,\n  IFCALIGNMENT2DVERTICALSEGMENT,\n  IFCALIGNMENTCURVE,\n  IFCANNOTATION,\n  IFCANNOTATIONFILLAREA,\n  IFCAPPLICATION,\n  IFCAPPLIEDVALUE,\n  IFCAPPROVAL,\n  IFCAPPROVALRELATIONSHIP,\n  IFCARBITRARYCLOSEDPROFILEDEF,\n  IFCARBITRARYOPENPROFILEDEF,\n  IFCARBITRARYPROFILEDEFWITHVOIDS,\n  IFCASSET,\n  IFCASYMMETRICISHAPEPROFILEDEF,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCAUDIOVISUALAPPLIANCETYPE,\n  IFCAXIS1PLACEMENT,\n  IFCAXIS2PLACEMENT2D,\n  IFCAXIS2PLACEMENT3D,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEAMTYPE,\n  IFCBEARING,\n  IFCBEARINGTYPE,\n  IFCBLOBTEXTURE,\n  IFCBLOCK,\n  IFCBOILER,\n  IFCBOILERTYPE,\n  IFCBOOLEANCLIPPINGRESULT,\n  IFCBOOLEANRESULT,\n  IFCBOUNDARYCONDITION,\n  IFCBOUNDARYCURVE,\n  IFCBOUNDARYEDGECONDITION,\n  IFCBOUNDARYFACECONDITION,\n  IFCBOUNDARYNODECONDITION,\n  IFCBOUNDARYNODECONDITIONWARPING,\n  IFCBOUNDEDCURVE,\n  IFCBOUNDEDSURFACE,\n  IFCBOUNDINGBOX,\n  IFCBOXEDHALFSPACE,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBSPLINECURVE,\n  IFCBSPLINECURVEWITHKNOTS,\n  IFCBSPLINESURFACE,\n  IFCBSPLINESURFACEWITHKNOTS,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPARTTYPE,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGELEMENTPROXYTYPE,\n  IFCBUILDINGELEMENTTYPE,\n  IFCBUILDINGSTOREY,\n  IFCBUILDINGSYSTEM,\n  IFCBURNER,\n  IFCBURNERTYPE,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERFITTINGTYPE,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLECARRIERSEGMENTTYPE,\n  IFCCABLEFITTING,\n  IFCCABLEFITTINGTYPE,\n  IFCCABLESEGMENT,\n  IFCCABLESEGMENTTYPE,\n  IFCCAISSONFOUNDATION,\n  IFCCAISSONFOUNDATIONTYPE,\n  IFCCARTESIANPOINT,\n  IFCCARTESIANPOINTLIST,\n  IFCCARTESIANPOINTLIST2D,\n  IFCCARTESIANPOINTLIST3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM,\n  IFCCENTERLINEPROFILEDEF,\n  IFCCHILLER,\n  IFCCHILLERTYPE,\n  IFCCHIMNEY,\n  IFCCHIMNEYTYPE,\n  IFCCIRCLE,\n  IFCCIRCLEHOLLOWPROFILEDEF,\n  IFCCIRCLEPROFILEDEF,\n  IFCCIRCULARARCSEGMENT2D,\n  IFCCIVILELEMENT,\n  IFCCIVILELEMENTTYPE,\n  IFCCLASSIFICATION,\n  IFCCLASSIFICATIONREFERENCE,\n  IFCCLOSEDSHELL,\n  IFCCOIL,\n  IFCCOILTYPE,\n  IFCCOLOURRGB,\n  IFCCOLOURRGBLIST,\n  IFCCOLOURSPECIFICATION,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOLUMNTYPE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMMUNICATIONSAPPLIANCETYPE,\n  IFCCOMPLEXPROPERTY,\n  IFCCOMPLEXPROPERTYTEMPLATE,\n  IFCCOMPOSITECURVE,\n  IFCCOMPOSITECURVEONSURFACE,\n  IFCCOMPOSITECURVESEGMENT,\n  IFCCOMPOSITEPROFILEDEF,\n  IFCCOMPRESSOR,\n  IFCCOMPRESSORTYPE,\n  IFCCONDENSER,\n  IFCCONDENSERTYPE,\n  IFCCONIC,\n  IFCCONNECTEDFACESET,\n  IFCCONNECTIONCURVEGEOMETRY,\n  IFCCONNECTIONGEOMETRY,\n  IFCCONNECTIONPOINTECCENTRICITY,\n  IFCCONNECTIONPOINTGEOMETRY,\n  IFCCONNECTIONSURFACEGEOMETRY,\n  IFCCONNECTIONVOLUMEGEOMETRY,\n  IFCCONSTRAINT,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCE,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE,\n  IFCCONSTRUCTIONMATERIALRESOURCE,\n  IFCCONSTRUCTIONMATERIALRESOURCETYPE,\n  IFCCONSTRUCTIONPRODUCTRESOURCE,\n  IFCCONSTRUCTIONPRODUCTRESOURCETYPE,\n  IFCCONSTRUCTIONRESOURCE,\n  IFCCONSTRUCTIONRESOURCETYPE,\n  IFCCONTEXT,\n  IFCCONTEXTDEPENDENTUNIT,\n  IFCCONTROL,\n  IFCCONTROLLER,\n  IFCCONTROLLERTYPE,\n  IFCCONVERSIONBASEDUNIT,\n  IFCCONVERSIONBASEDUNITWITHOFFSET,\n  IFCCOOLEDBEAM,\n  IFCCOOLEDBEAMTYPE,\n  IFCCOOLINGTOWER,\n  IFCCOOLINGTOWERTYPE,\n  IFCCOORDINATEOPERATION,\n  IFCCOORDINATEREFERENCESYSTEM,\n  IFCCOSTITEM,\n  IFCCOSTSCHEDULE,\n  IFCCOSTVALUE,\n  IFCCOVERING,\n  IFCCOVERINGTYPE,\n  IFCCREWRESOURCE,\n  IFCCREWRESOURCETYPE,\n  IFCCSGPRIMITIVE3D,\n  IFCCSGSOLID,\n  IFCCSHAPEPROFILEDEF,\n  IFCCURRENCYRELATIONSHIP,\n  IFCCURTAINWALL,\n  IFCCURTAINWALLTYPE,\n  IFCCURVE,\n  IFCCURVEBOUNDEDPLANE,\n  IFCCURVEBOUNDEDSURFACE,\n  IFCCURVESEGMENT2D,\n  IFCCURVESTYLE,\n  IFCCURVESTYLEFONT,\n  IFCCURVESTYLEFONTANDSCALING,\n  IFCCURVESTYLEFONTPATTERN,\n  IFCCYLINDRICALSURFACE,\n  IFCDAMPER,\n  IFCDAMPERTYPE,\n  IFCDEEPFOUNDATION,\n  IFCDEEPFOUNDATIONTYPE,\n  IFCDERIVEDPROFILEDEF,\n  IFCDERIVEDUNIT,\n  IFCDERIVEDUNITELEMENT,\n  IFCDIMENSIONALEXPONENTS,\n  IFCDIRECTION,\n  IFCDISCRETEACCESSORY,\n  IFCDISCRETEACCESSORYTYPE,\n  IFCDISTANCEEXPRESSION,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCHAMBERELEMENTTYPE,\n  IFCDISTRIBUTIONCIRCUIT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENTTYPE,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONELEMENTTYPE,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENTTYPE,\n  IFCDISTRIBUTIONPORT,\n  IFCDISTRIBUTIONSYSTEM,\n  IFCDOCUMENTINFORMATION,\n  IFCDOCUMENTINFORMATIONRELATIONSHIP,\n  IFCDOCUMENTREFERENCE,\n  IFCDOOR,\n  IFCDOORLININGPROPERTIES,\n  IFCDOORPANELPROPERTIES,\n  IFCDOORSTANDARDCASE,\n  IFCDOORSTYLE,\n  IFCDOORTYPE,\n  IFCDRAUGHTINGPREDEFINEDCOLOUR,\n  IFCDRAUGHTINGPREDEFINEDCURVEFONT,\n  IFCDUCTFITTING,\n  IFCDUCTFITTINGTYPE,\n  IFCDUCTSEGMENT,\n  IFCDUCTSEGMENTTYPE,\n  IFCDUCTSILENCER,\n  IFCDUCTSILENCERTYPE,\n  IFCEDGE,\n  IFCEDGECURVE,\n  IFCEDGELOOP,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICAPPLIANCETYPE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICDISTRIBUTIONBOARDTYPE,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICFLOWSTORAGEDEVICETYPE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICGENERATORTYPE,\n  IFCELECTRICMOTOR,\n  IFCELECTRICMOTORTYPE,\n  IFCELECTRICTIMECONTROL,\n  IFCELECTRICTIMECONTROLTYPE,\n  IFCELEMENT,\n  IFCELEMENTARYSURFACE,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTASSEMBLYTYPE,\n  IFCELEMENTCOMPONENT,\n  IFCELEMENTCOMPONENTTYPE,\n  IFCELEMENTQUANTITY,\n  IFCELEMENTTYPE,\n  IFCELLIPSE,\n  IFCELLIPSEPROFILEDEF,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENERGYCONVERSIONDEVICETYPE,\n  IFCENGINE,\n  IFCENGINETYPE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATIVECOOLERTYPE,\n  IFCEVAPORATOR,\n  IFCEVAPORATORTYPE,\n  IFCEVENT,\n  IFCEVENTTIME,\n  IFCEVENTTYPE,\n  IFCEXTENDEDPROPERTIES,\n  IFCEXTERNALINFORMATION,\n  IFCEXTERNALLYDEFINEDHATCHSTYLE,\n  IFCEXTERNALLYDEFINEDSURFACESTYLE,\n  IFCEXTERNALLYDEFINEDTEXTFONT,\n  IFCEXTERNALREFERENCE,\n  IFCEXTERNALREFERENCERELATIONSHIP,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCEXTRUDEDAREASOLID,\n  IFCEXTRUDEDAREASOLIDTAPERED,\n  IFCFACE,\n  IFCFACEBASEDSURFACEMODEL,\n  IFCFACEBOUND,\n  IFCFACEOUTERBOUND,\n  IFCFACESURFACE,\n  IFCFACETEDBREP,\n  IFCFACETEDBREPWITHVOIDS,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAILURECONNECTIONCONDITION,\n  IFCFAN,\n  IFCFANTYPE,\n  IFCFASTENER,\n  IFCFASTENERTYPE,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILLAREASTYLE,\n  IFCFILLAREASTYLEHATCHING,\n  IFCFILLAREASTYLETILES,\n  IFCFILTER,\n  IFCFILTERTYPE,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFIRESUPPRESSIONTERMINALTYPE,\n  IFCFIXEDREFERENCESWEPTAREASOLID,\n  IFCFLOWCONTROLLER,\n  IFCFLOWCONTROLLERTYPE,\n  IFCFLOWFITTING,\n  IFCFLOWFITTINGTYPE,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWINSTRUMENTTYPE,\n  IFCFLOWMETER,\n  IFCFLOWMETERTYPE,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWMOVINGDEVICETYPE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSEGMENTTYPE,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWSTORAGEDEVICETYPE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTERMINALTYPE,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFLOWTREATMENTDEVICETYPE,\n  IFCFOOTING,\n  IFCFOOTINGTYPE,\n  IFCFURNISHINGELEMENT,\n  IFCFURNISHINGELEMENTTYPE,\n  IFCFURNITURE,\n  IFCFURNITURETYPE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGEOGRAPHICELEMENTTYPE,\n  IFCGEOMETRICCURVESET,\n  IFCGEOMETRICREPRESENTATIONCONTEXT,\n  IFCGEOMETRICREPRESENTATIONITEM,\n  IFCGEOMETRICREPRESENTATIONSUBCONTEXT,\n  IFCGEOMETRICSET,\n  IFCGRID,\n  IFCGRIDAXIS,\n  IFCGRIDPLACEMENT,\n  IFCGROUP,\n  IFCHALFSPACESOLID,\n  IFCHEATEXCHANGER,\n  IFCHEATEXCHANGERTYPE,\n  IFCHUMIDIFIER,\n  IFCHUMIDIFIERTYPE,\n  IFCIMAGETEXTURE,\n  IFCINDEXEDCOLOURMAP,\n  IFCINDEXEDPOLYCURVE,\n  IFCINDEXEDPOLYGONALFACE,\n  IFCINDEXEDPOLYGONALFACEWITHVOIDS,\n  IFCINDEXEDTEXTUREMAP,\n  IFCINDEXEDTRIANGLETEXTUREMAP,\n  IFCINTERCEPTOR,\n  IFCINTERCEPTORTYPE,\n  IFCINTERSECTIONCURVE,\n  IFCINVENTORY,\n  IFCIRREGULARTIMESERIES,\n  IFCIRREGULARTIMESERIESVALUE,\n  IFCISHAPEPROFILEDEF,\n  IFCJUNCTIONBOX,\n  IFCJUNCTIONBOXTYPE,\n  IFCLABORRESOURCE,\n  IFCLABORRESOURCETYPE,\n  IFCLAGTIME,\n  IFCLAMP,\n  IFCLAMPTYPE,\n  IFCLIBRARYINFORMATION,\n  IFCLIBRARYREFERENCE,\n  IFCLIGHTDISTRIBUTIONDATA,\n  IFCLIGHTFIXTURE,\n  IFCLIGHTFIXTURETYPE,\n  IFCLIGHTINTENSITYDISTRIBUTION,\n  IFCLIGHTSOURCE,\n  IFCLIGHTSOURCEAMBIENT,\n  IFCLIGHTSOURCEDIRECTIONAL,\n  IFCLIGHTSOURCEGONIOMETRIC,\n  IFCLIGHTSOURCEPOSITIONAL,\n  IFCLIGHTSOURCESPOT,\n  IFCLINE,\n  IFCLINEARPLACEMENT,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCLINESEGMENT2D,\n  IFCLOCALPLACEMENT,\n  IFCLOOP,\n  IFCLSHAPEPROFILEDEF,\n  IFCMANIFOLDSOLIDBREP,\n  IFCMAPCONVERSION,\n  IFCMAPPEDITEM,\n  IFCMATERIAL,\n  IFCMATERIALCLASSIFICATIONRELATIONSHIP,\n  IFCMATERIALCONSTITUENT,\n  IFCMATERIALCONSTITUENTSET,\n  IFCMATERIALDEFINITION,\n  IFCMATERIALDEFINITIONREPRESENTATION,\n  IFCMATERIALLAYER,\n  IFCMATERIALLAYERSET,\n  IFCMATERIALLAYERSETUSAGE,\n  IFCMATERIALLAYERWITHOFFSETS,\n  IFCMATERIALLIST,\n  IFCMATERIALPROFILE,\n  IFCMATERIALPROFILESET,\n  IFCMATERIALPROFILESETUSAGE,\n  IFCMATERIALPROFILESETUSAGETAPERING,\n  IFCMATERIALPROFILEWITHOFFSETS,\n  IFCMATERIALPROPERTIES,\n  IFCMATERIALRELATIONSHIP,\n  IFCMATERIALUSAGEDEFINITION,\n  IFCMEASUREWITHUNIT,\n  IFCMECHANICALFASTENER,\n  IFCMECHANICALFASTENERTYPE,\n  IFCMEDICALDEVICE,\n  IFCMEDICALDEVICETYPE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMEMBERTYPE,\n  IFCMETRIC,\n  IFCMIRROREDPROFILEDEF,\n  IFCMONETARYUNIT,\n  IFCMOTORCONNECTION,\n  IFCMOTORCONNECTIONTYPE,\n  IFCNAMEDUNIT,\n  IFCOBJECT,\n  IFCOBJECTDEFINITION,\n  IFCOBJECTIVE,\n  IFCOBJECTPLACEMENT,\n  IFCOCCUPANT,\n  IFCOFFSETCURVE,\n  IFCOFFSETCURVE2D,\n  IFCOFFSETCURVE3D,\n  IFCOFFSETCURVEBYDISTANCES,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOPENSHELL,\n  IFCORGANIZATION,\n  IFCORGANIZATIONRELATIONSHIP,\n  IFCORIENTATIONEXPRESSION,\n  IFCORIENTEDEDGE,\n  IFCOUTERBOUNDARYCURVE,\n  IFCOUTLET,\n  IFCOUTLETTYPE,\n  IFCOWNERHISTORY,\n  IFCPARAMETERIZEDPROFILEDEF,\n  IFCPATH,\n  IFCPCURVE,\n  IFCPERFORMANCEHISTORY,\n  IFCPERMEABLECOVERINGPROPERTIES,\n  IFCPERMIT,\n  IFCPERSON,\n  IFCPERSONANDORGANIZATION,\n  IFCPHYSICALCOMPLEXQUANTITY,\n  IFCPHYSICALQUANTITY,\n  IFCPHYSICALSIMPLEQUANTITY,\n  IFCPILE,\n  IFCPILETYPE,\n  IFCPIPEFITTING,\n  IFCPIPEFITTINGTYPE,\n  IFCPIPESEGMENT,\n  IFCPIPESEGMENTTYPE,\n  IFCPIXELTEXTURE,\n  IFCPLACEMENT,\n  IFCPLANARBOX,\n  IFCPLANAREXTENT,\n  IFCPLANE,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPLATETYPE,\n  IFCPOINT,\n  IFCPOINTONCURVE,\n  IFCPOINTONSURFACE,\n  IFCPOLYGONALBOUNDEDHALFSPACE,\n  IFCPOLYGONALFACESET,\n  IFCPOLYLINE,\n  IFCPOLYLOOP,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPOSTALADDRESS,\n  IFCPREDEFINEDCOLOUR,\n  IFCPREDEFINEDCURVEFONT,\n  IFCPREDEFINEDITEM,\n  IFCPREDEFINEDPROPERTIES,\n  IFCPREDEFINEDPROPERTYSET,\n  IFCPREDEFINEDTEXTFONT,\n  IFCPRESENTATIONITEM,\n  IFCPRESENTATIONLAYERASSIGNMENT,\n  IFCPRESENTATIONLAYERWITHSTYLE,\n  IFCPRESENTATIONSTYLE,\n  IFCPRESENTATIONSTYLEASSIGNMENT,\n  IFCPROCEDURE,\n  IFCPROCEDURETYPE,\n  IFCPROCESS,\n  IFCPRODUCT,\n  IFCPRODUCTDEFINITIONSHAPE,\n  IFCPRODUCTREPRESENTATION,\n  IFCPROFILEDEF,\n  IFCPROFILEPROPERTIES,\n  IFCPROJECT,\n  IFCPROJECTEDCRS,\n  IFCPROJECTIONELEMENT,\n  IFCPROJECTLIBRARY,\n  IFCPROJECTORDER,\n  IFCPROPERTY,\n  IFCPROPERTYABSTRACTION,\n  IFCPROPERTYBOUNDEDVALUE,\n  IFCPROPERTYDEFINITION,\n  IFCPROPERTYDEPENDENCYRELATIONSHIP,\n  IFCPROPERTYENUMERATEDVALUE,\n  IFCPROPERTYENUMERATION,\n  IFCPROPERTYLISTVALUE,\n  IFCPROPERTYREFERENCEVALUE,\n  IFCPROPERTYSET,\n  IFCPROPERTYSETDEFINITION,\n  IFCPROPERTYSETTEMPLATE,\n  IFCPROPERTYSINGLEVALUE,\n  IFCPROPERTYTABLEVALUE,\n  IFCPROPERTYTEMPLATE,\n  IFCPROPERTYTEMPLATEDEFINITION,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROTECTIVEDEVICETRIPPINGUNITTYPE,\n  IFCPROTECTIVEDEVICETYPE,\n  IFCPROXY,\n  IFCPUMP,\n  IFCPUMPTYPE,\n  IFCQUANTITYAREA,\n  IFCQUANTITYCOUNT,\n  IFCQUANTITYLENGTH,\n  IFCQUANTITYSET,\n  IFCQUANTITYTIME,\n  IFCQUANTITYVOLUME,\n  IFCQUANTITYWEIGHT,\n  IFCRAILING,\n  IFCRAILINGTYPE,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCRAMPFLIGHTTYPE,\n  IFCRAMPTYPE,\n  IFCRATIONALBSPLINECURVEWITHKNOTS,\n  IFCRATIONALBSPLINESURFACEWITHKNOTS,\n  IFCRECTANGLEHOLLOWPROFILEDEF,\n  IFCRECTANGLEPROFILEDEF,\n  IFCRECTANGULARPYRAMID,\n  IFCRECTANGULARTRIMMEDSURFACE,\n  IFCRECURRENCEPATTERN,\n  IFCREFERENCE,\n  IFCREFERENT,\n  IFCREGULARTIMESERIES,\n  IFCREINFORCEMENTBARPROPERTIES,\n  IFCREINFORCEMENTDEFINITIONPROPERTIES,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGBARTYPE,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGELEMENTTYPE,\n  IFCREINFORCINGMESH,\n  IFCREINFORCINGMESHTYPE,\n  IFCRELAGGREGATES,\n  IFCRELASSIGNS,\n  IFCRELASSIGNSTOACTOR,\n  IFCRELASSIGNSTOCONTROL,\n  IFCRELASSIGNSTOGROUP,\n  IFCRELASSIGNSTOGROUPBYFACTOR,\n  IFCRELASSIGNSTOPROCESS,\n  IFCRELASSIGNSTOPRODUCT,\n  IFCRELASSIGNSTORESOURCE,\n  IFCRELASSOCIATES,\n  IFCRELASSOCIATESAPPROVAL,\n  IFCRELASSOCIATESCLASSIFICATION,\n  IFCRELASSOCIATESCONSTRAINT,\n  IFCRELASSOCIATESDOCUMENT,\n  IFCRELASSOCIATESLIBRARY,\n  IFCRELASSOCIATESMATERIAL,\n  IFCRELATIONSHIP,\n  IFCRELCONNECTS,\n  IFCRELCONNECTSELEMENTS,\n  IFCRELCONNECTSPATHELEMENTS,\n  IFCRELCONNECTSPORTS,\n  IFCRELCONNECTSPORTTOELEMENT,\n  IFCRELCONNECTSSTRUCTURALACTIVITY,\n  IFCRELCONNECTSSTRUCTURALMEMBER,\n  IFCRELCONNECTSWITHECCENTRICITY,\n  IFCRELCONNECTSWITHREALIZINGELEMENTS,\n  IFCRELCONTAINEDINSPATIALSTRUCTURE,\n  IFCRELCOVERSBLDGELEMENTS,\n  IFCRELCOVERSSPACES,\n  IFCRELDECLARES,\n  IFCRELDECOMPOSES,\n  IFCRELDEFINES,\n  IFCRELDEFINESBYOBJECT,\n  IFCRELDEFINESBYPROPERTIES,\n  IFCRELDEFINESBYTEMPLATE,\n  IFCRELDEFINESBYTYPE,\n  IFCRELFILLSELEMENT,\n  IFCRELFLOWCONTROLELEMENTS,\n  IFCRELINTERFERESELEMENTS,\n  IFCRELNESTS,\n  IFCRELPOSITIONS,\n  IFCRELPROJECTSELEMENT,\n  IFCRELREFERENCEDINSPATIALSTRUCTURE,\n  IFCRELSEQUENCE,\n  IFCRELSERVICESBUILDINGS,\n  IFCRELSPACEBOUNDARY,\n  IFCRELSPACEBOUNDARY1STLEVEL,\n  IFCRELSPACEBOUNDARY2NDLEVEL,\n  IFCRELVOIDSELEMENT,\n  IFCREPARAMETRISEDCOMPOSITECURVESEGMENT,\n  IFCREPRESENTATION,\n  IFCREPRESENTATIONCONTEXT,\n  IFCREPRESENTATIONITEM,\n  IFCREPRESENTATIONMAP,\n  IFCRESOURCE,\n  IFCRESOURCEAPPROVALRELATIONSHIP,\n  IFCRESOURCECONSTRAINTRELATIONSHIP,\n  IFCRESOURCELEVELRELATIONSHIP,\n  IFCRESOURCETIME,\n  IFCREVOLVEDAREASOLID,\n  IFCREVOLVEDAREASOLIDTAPERED,\n  IFCRIGHTCIRCULARCONE,\n  IFCRIGHTCIRCULARCYLINDER,\n  IFCROOF,\n  IFCROOFTYPE,\n  IFCROOT,\n  IFCROUNDEDRECTANGLEPROFILEDEF,\n  IFCSANITARYTERMINAL,\n  IFCSANITARYTERMINALTYPE,\n  IFCSCHEDULINGTIME,\n  IFCSEAMCURVE,\n  IFCSECTIONEDSOLID,\n  IFCSECTIONEDSOLIDHORIZONTAL,\n  IFCSECTIONEDSPINE,\n  IFCSECTIONPROPERTIES,\n  IFCSECTIONREINFORCEMENTPROPERTIES,\n  IFCSENSOR,\n  IFCSENSORTYPE,\n  IFCSHADINGDEVICE,\n  IFCSHADINGDEVICETYPE,\n  IFCSHAPEASPECT,\n  IFCSHAPEMODEL,\n  IFCSHAPEREPRESENTATION,\n  IFCSHELLBASEDSURFACEMODEL,\n  IFCSIMPLEPROPERTY,\n  IFCSIMPLEPROPERTYTEMPLATE,\n  IFCSITE,\n  IFCSIUNIT,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSLABTYPE,\n  IFCSLIPPAGECONNECTIONCONDITION,\n  IFCSOLARDEVICE,\n  IFCSOLARDEVICETYPE,\n  IFCSOLIDMODEL,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPACEHEATERTYPE,\n  IFCSPACETYPE,\n  IFCSPATIALELEMENT,\n  IFCSPATIALELEMENTTYPE,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALSTRUCTUREELEMENTTYPE,\n  IFCSPATIALZONE,\n  IFCSPATIALZONETYPE,\n  IFCSPHERE,\n  IFCSPHERICALSURFACE,\n  IFCSTACKTERMINAL,\n  IFCSTACKTERMINALTYPE,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTAIRFLIGHTTYPE,\n  IFCSTAIRTYPE,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALANALYSISMODEL,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCONNECTIONCONDITION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALLOAD,\n  IFCSTRUCTURALLOADCASE,\n  IFCSTRUCTURALLOADCONFIGURATION,\n  IFCSTRUCTURALLOADGROUP,\n  IFCSTRUCTURALLOADLINEARFORCE,\n  IFCSTRUCTURALLOADORRESULT,\n  IFCSTRUCTURALLOADPLANARFORCE,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENT,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION,\n  IFCSTRUCTURALLOADSINGLEFORCE,\n  IFCSTRUCTURALLOADSINGLEFORCEWARPING,\n  IFCSTRUCTURALLOADSTATIC,\n  IFCSTRUCTURALLOADTEMPERATURE,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALRESULTGROUP,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSTYLEDITEM,\n  IFCSTYLEDREPRESENTATION,\n  IFCSTYLEMODEL,\n  IFCSUBCONTRACTRESOURCE,\n  IFCSUBCONTRACTRESOURCETYPE,\n  IFCSUBEDGE,\n  IFCSURFACE,\n  IFCSURFACECURVE,\n  IFCSURFACECURVESWEPTAREASOLID,\n  IFCSURFACEFEATURE,\n  IFCSURFACEOFLINEAREXTRUSION,\n  IFCSURFACEOFREVOLUTION,\n  IFCSURFACEREINFORCEMENTAREA,\n  IFCSURFACESTYLE,\n  IFCSURFACESTYLELIGHTING,\n  IFCSURFACESTYLEREFRACTION,\n  IFCSURFACESTYLERENDERING,\n  IFCSURFACESTYLESHADING,\n  IFCSURFACESTYLEWITHTEXTURES,\n  IFCSURFACETEXTURE,\n  IFCSWEPTAREASOLID,\n  IFCSWEPTDISKSOLID,\n  IFCSWEPTDISKSOLIDPOLYGONAL,\n  IFCSWEPTSURFACE,\n  IFCSWITCHINGDEVICE,\n  IFCSWITCHINGDEVICETYPE,\n  IFCSYSTEM,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCSYSTEMFURNITUREELEMENTTYPE,\n  IFCTABLE,\n  IFCTABLECOLUMN,\n  IFCTABLEROW,\n  IFCTANK,\n  IFCTANKTYPE,\n  IFCTASK,\n  IFCTASKTIME,\n  IFCTASKTIMERECURRING,\n  IFCTASKTYPE,\n  IFCTELECOMADDRESS,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONANCHORTYPE,\n  IFCTENDONCONDUIT,\n  IFCTENDONCONDUITTYPE,\n  IFCTENDONTYPE,\n  IFCTESSELLATEDFACESET,\n  IFCTESSELLATEDITEM,\n  IFCTEXTLITERAL,\n  IFCTEXTLITERALWITHEXTENT,\n  IFCTEXTSTYLE,\n  IFCTEXTSTYLEFONTMODEL,\n  IFCTEXTSTYLEFORDEFINEDFONT,\n  IFCTEXTSTYLETEXTMODEL,\n  IFCTEXTURECOORDINATE,\n  IFCTEXTURECOORDINATEGENERATOR,\n  IFCTEXTUREMAP,\n  IFCTEXTUREVERTEX,\n  IFCTEXTUREVERTEXLIST,\n  IFCTIMEPERIOD,\n  IFCTIMESERIES,\n  IFCTIMESERIESVALUE,\n  IFCTOPOLOGICALREPRESENTATIONITEM,\n  IFCTOPOLOGYREPRESENTATION,\n  IFCTOROIDALSURFACE,\n  IFCTRANSFORMER,\n  IFCTRANSFORMERTYPE,\n  IFCTRANSITIONCURVESEGMENT2D,\n  IFCTRANSPORTELEMENT,\n  IFCTRANSPORTELEMENTTYPE,\n  IFCTRAPEZIUMPROFILEDEF,\n  IFCTRIANGULATEDFACESET,\n  IFCTRIANGULATEDIRREGULARNETWORK,\n  IFCTRIMMEDCURVE,\n  IFCTSHAPEPROFILEDEF,\n  IFCTUBEBUNDLE,\n  IFCTUBEBUNDLETYPE,\n  IFCTYPEOBJECT,\n  IFCTYPEPROCESS,\n  IFCTYPEPRODUCT,\n  IFCTYPERESOURCE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYCONTROLELEMENTTYPE,\n  IFCUNITARYEQUIPMENT,\n  IFCUNITARYEQUIPMENTTYPE,\n  IFCUNITASSIGNMENT,\n  IFCUSHAPEPROFILEDEF,\n  IFCVALVE,\n  IFCVALVETYPE,\n  IFCVECTOR,\n  IFCVERTEX,\n  IFCVERTEXLOOP,\n  IFCVERTEXPOINT,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONDAMPERTYPE,\n  IFCVIBRATIONISOLATOR,\n  IFCVIBRATIONISOLATORTYPE,\n  IFCVIRTUALELEMENT,\n  IFCVIRTUALGRIDINTERSECTION,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWALLTYPE,\n  IFCWASTETERMINAL,\n  IFCWASTETERMINALTYPE,\n  IFCWINDOW,\n  IFCWINDOWLININGPROPERTIES,\n  IFCWINDOWPANELPROPERTIES,\n  IFCWINDOWSTANDARDCASE,\n  IFCWINDOWSTYLE,\n  IFCWINDOWTYPE,\n  IFCWORKCALENDAR,\n  IFCWORKCONTROL,\n  IFCWORKPLAN,\n  IFCWORKSCHEDULE,\n  IFCWORKTIME,\n  IFCZONE,\n  IFCZSHAPEPROFILEDEF,\n  IfcAPI,\n  IfcAbsorbedDoseMeasure,\n  IfcAccelerationMeasure,\n  IfcActionRequest,\n  IfcActionRequestTypeEnum,\n  IfcActionSourceTypeEnum,\n  IfcActionTypeEnum,\n  IfcActor,\n  IfcActorRole,\n  IfcActuator,\n  IfcActuatorType,\n  IfcActuatorTypeEnum,\n  IfcAddress,\n  IfcAddressTypeEnum,\n  IfcAdvancedBrep,\n  IfcAdvancedBrepWithVoids,\n  IfcAdvancedFace,\n  IfcAirTerminal,\n  IfcAirTerminalBox,\n  IfcAirTerminalBoxType,\n  IfcAirTerminalBoxTypeEnum,\n  IfcAirTerminalType,\n  IfcAirTerminalTypeEnum,\n  IfcAirToAirHeatRecovery,\n  IfcAirToAirHeatRecoveryType,\n  IfcAirToAirHeatRecoveryTypeEnum,\n  IfcAlarm,\n  IfcAlarmType,\n  IfcAlarmTypeEnum,\n  IfcAlignment,\n  IfcAlignment2DHorizontal,\n  IfcAlignment2DHorizontalSegment,\n  IfcAlignment2DSegment,\n  IfcAlignment2DVerSegCircularArc,\n  IfcAlignment2DVerSegLine,\n  IfcAlignment2DVerSegParabolicArc,\n  IfcAlignment2DVertical,\n  IfcAlignment2DVerticalSegment,\n  IfcAlignmentCurve,\n  IfcAlignmentTypeEnum,\n  IfcAmountOfSubstanceMeasure,\n  IfcAnalysisModelTypeEnum,\n  IfcAnalysisTheoryTypeEnum,\n  IfcAngularVelocityMeasure,\n  IfcAnnotation,\n  IfcAnnotationFillArea,\n  IfcApplication,\n  IfcAppliedValue,\n  IfcApproval,\n  IfcApprovalRelationship,\n  IfcArbitraryClosedProfileDef,\n  IfcArbitraryOpenProfileDef,\n  IfcArbitraryProfileDefWithVoids,\n  IfcAreaDensityMeasure,\n  IfcAreaMeasure,\n  IfcArithmeticOperatorEnum,\n  IfcAssemblyPlaceEnum,\n  IfcAsset,\n  IfcAsymmetricIShapeProfileDef,\n  IfcAudioVisualAppliance,\n  IfcAudioVisualApplianceType,\n  IfcAudioVisualApplianceTypeEnum,\n  IfcAxis1Placement,\n  IfcAxis2Placement2D,\n  IfcAxis2Placement3D,\n  IfcBSplineCurve,\n  IfcBSplineCurveForm,\n  IfcBSplineCurveWithKnots,\n  IfcBSplineSurface,\n  IfcBSplineSurfaceForm,\n  IfcBSplineSurfaceWithKnots,\n  IfcBeam,\n  IfcBeamStandardCase,\n  IfcBeamType,\n  IfcBeamTypeEnum,\n  IfcBearing,\n  IfcBearingType,\n  IfcBearingTypeDisplacementEnum,\n  IfcBearingTypeEnum,\n  IfcBenchmarkEnum,\n  IfcBinary,\n  IfcBlobTexture,\n  IfcBlock,\n  IfcBoiler,\n  IfcBoilerType,\n  IfcBoilerTypeEnum,\n  IfcBoolean,\n  IfcBooleanClippingResult,\n  IfcBooleanOperator,\n  IfcBooleanResult,\n  IfcBoundaryCondition,\n  IfcBoundaryCurve,\n  IfcBoundaryEdgeCondition,\n  IfcBoundaryFaceCondition,\n  IfcBoundaryNodeCondition,\n  IfcBoundaryNodeConditionWarping,\n  IfcBoundedCurve,\n  IfcBoundedSurface,\n  IfcBoundingBox,\n  IfcBoxAlignment,\n  IfcBoxedHalfSpace,\n  IfcBridge,\n  IfcBridgePart,\n  IfcBridgePartTypeEnum,\n  IfcBridgeTypeEnum,\n  IfcBuilding,\n  IfcBuildingElement,\n  IfcBuildingElementPart,\n  IfcBuildingElementPartType,\n  IfcBuildingElementPartTypeEnum,\n  IfcBuildingElementProxy,\n  IfcBuildingElementProxyType,\n  IfcBuildingElementProxyTypeEnum,\n  IfcBuildingElementType,\n  IfcBuildingStorey,\n  IfcBuildingSystem,\n  IfcBuildingSystemTypeEnum,\n  IfcBurner,\n  IfcBurnerType,\n  IfcBurnerTypeEnum,\n  IfcCShapeProfileDef,\n  IfcCableCarrierFitting,\n  IfcCableCarrierFittingType,\n  IfcCableCarrierFittingTypeEnum,\n  IfcCableCarrierSegment,\n  IfcCableCarrierSegmentType,\n  IfcCableCarrierSegmentTypeEnum,\n  IfcCableFitting,\n  IfcCableFittingType,\n  IfcCableFittingTypeEnum,\n  IfcCableSegment,\n  IfcCableSegmentType,\n  IfcCableSegmentTypeEnum,\n  IfcCaissonFoundation,\n  IfcCaissonFoundationType,\n  IfcCaissonFoundationTypeEnum,\n  IfcCardinalPointReference,\n  IfcCartesianPoint,\n  IfcCartesianPointList,\n  IfcCartesianPointList2D,\n  IfcCartesianPointList3D,\n  IfcCartesianTransformationOperator,\n  IfcCartesianTransformationOperator2D,\n  IfcCartesianTransformationOperator2DnonUniform,\n  IfcCartesianTransformationOperator3D,\n  IfcCartesianTransformationOperator3DnonUniform,\n  IfcCenterLineProfileDef,\n  IfcChangeActionEnum,\n  IfcChiller,\n  IfcChillerType,\n  IfcChillerTypeEnum,\n  IfcChimney,\n  IfcChimneyType,\n  IfcChimneyTypeEnum,\n  IfcCircle,\n  IfcCircleHollowProfileDef,\n  IfcCircleProfileDef,\n  IfcCircularArcSegment2D,\n  IfcCivilElement,\n  IfcCivilElementType,\n  IfcClassification,\n  IfcClassificationReference,\n  IfcClosedShell,\n  IfcCoil,\n  IfcCoilType,\n  IfcCoilTypeEnum,\n  IfcColourRgb,\n  IfcColourRgbList,\n  IfcColourSpecification,\n  IfcColumn,\n  IfcColumnStandardCase,\n  IfcColumnType,\n  IfcColumnTypeEnum,\n  IfcCommunicationsAppliance,\n  IfcCommunicationsApplianceType,\n  IfcCommunicationsApplianceTypeEnum,\n  IfcComplexProperty,\n  IfcComplexPropertyTemplate,\n  IfcComplexPropertyTemplateTypeEnum,\n  IfcCompositeCurve,\n  IfcCompositeCurveOnSurface,\n  IfcCompositeCurveSegment,\n  IfcCompositeProfileDef,\n  IfcCompressor,\n  IfcCompressorType,\n  IfcCompressorTypeEnum,\n  IfcCondenser,\n  IfcCondenserType,\n  IfcCondenserTypeEnum,\n  IfcConic,\n  IfcConnectedFaceSet,\n  IfcConnectionCurveGeometry,\n  IfcConnectionGeometry,\n  IfcConnectionPointEccentricity,\n  IfcConnectionPointGeometry,\n  IfcConnectionSurfaceGeometry,\n  IfcConnectionTypeEnum,\n  IfcConnectionVolumeGeometry,\n  IfcConstraint,\n  IfcConstraintEnum,\n  IfcConstructionEquipmentResource,\n  IfcConstructionEquipmentResourceType,\n  IfcConstructionEquipmentResourceTypeEnum,\n  IfcConstructionMaterialResource,\n  IfcConstructionMaterialResourceType,\n  IfcConstructionMaterialResourceTypeEnum,\n  IfcConstructionProductResource,\n  IfcConstructionProductResourceType,\n  IfcConstructionProductResourceTypeEnum,\n  IfcConstructionResource,\n  IfcConstructionResourceType,\n  IfcContext,\n  IfcContextDependentMeasure,\n  IfcContextDependentUnit,\n  IfcControl,\n  IfcController,\n  IfcControllerType,\n  IfcControllerTypeEnum,\n  IfcConversionBasedUnit,\n  IfcConversionBasedUnitWithOffset,\n  IfcCooledBeam,\n  IfcCooledBeamType,\n  IfcCooledBeamTypeEnum,\n  IfcCoolingTower,\n  IfcCoolingTowerType,\n  IfcCoolingTowerTypeEnum,\n  IfcCoordinateOperation,\n  IfcCoordinateReferenceSystem,\n  IfcCostItem,\n  IfcCostItemTypeEnum,\n  IfcCostSchedule,\n  IfcCostScheduleTypeEnum,\n  IfcCostValue,\n  IfcCountMeasure,\n  IfcCovering,\n  IfcCoveringType,\n  IfcCoveringTypeEnum,\n  IfcCrewResource,\n  IfcCrewResourceType,\n  IfcCrewResourceTypeEnum,\n  IfcCsgPrimitive3D,\n  IfcCsgSolid,\n  IfcCurrencyRelationship,\n  IfcCurtainWall,\n  IfcCurtainWallType,\n  IfcCurtainWallTypeEnum,\n  IfcCurvatureMeasure,\n  IfcCurve,\n  IfcCurveBoundedPlane,\n  IfcCurveBoundedSurface,\n  IfcCurveInterpolationEnum,\n  IfcCurveSegment2D,\n  IfcCurveStyle,\n  IfcCurveStyleFont,\n  IfcCurveStyleFontAndScaling,\n  IfcCurveStyleFontPattern,\n  IfcCylindricalSurface,\n  IfcDamper,\n  IfcDamperType,\n  IfcDamperTypeEnum,\n  IfcDataOriginEnum,\n  IfcDate,\n  IfcDateTime,\n  IfcDayInMonthNumber,\n  IfcDayInWeekNumber,\n  IfcDeepFoundation,\n  IfcDeepFoundationType,\n  IfcDerivedProfileDef,\n  IfcDerivedUnit,\n  IfcDerivedUnitElement,\n  IfcDerivedUnitEnum,\n  IfcDescriptiveMeasure,\n  IfcDimensionCount,\n  IfcDimensionalExponents,\n  IfcDirection,\n  IfcDirectionSenseEnum,\n  IfcDiscreteAccessory,\n  IfcDiscreteAccessoryType,\n  IfcDiscreteAccessoryTypeEnum,\n  IfcDistanceExpression,\n  IfcDistributionChamberElement,\n  IfcDistributionChamberElementType,\n  IfcDistributionChamberElementTypeEnum,\n  IfcDistributionCircuit,\n  IfcDistributionControlElement,\n  IfcDistributionControlElementType,\n  IfcDistributionElement,\n  IfcDistributionElementType,\n  IfcDistributionFlowElement,\n  IfcDistributionFlowElementType,\n  IfcDistributionPort,\n  IfcDistributionPortTypeEnum,\n  IfcDistributionSystem,\n  IfcDistributionSystemEnum,\n  IfcDocumentConfidentialityEnum,\n  IfcDocumentInformation,\n  IfcDocumentInformationRelationship,\n  IfcDocumentReference,\n  IfcDocumentStatusEnum,\n  IfcDoor,\n  IfcDoorLiningProperties,\n  IfcDoorPanelOperationEnum,\n  IfcDoorPanelPositionEnum,\n  IfcDoorPanelProperties,\n  IfcDoorStandardCase,\n  IfcDoorStyle,\n  IfcDoorStyleConstructionEnum,\n  IfcDoorStyleOperationEnum,\n  IfcDoorType,\n  IfcDoorTypeEnum,\n  IfcDoorTypeOperationEnum,\n  IfcDoseEquivalentMeasure,\n  IfcDraughtingPreDefinedColour,\n  IfcDraughtingPreDefinedCurveFont,\n  IfcDuctFitting,\n  IfcDuctFittingType,\n  IfcDuctFittingTypeEnum,\n  IfcDuctSegment,\n  IfcDuctSegmentType,\n  IfcDuctSegmentTypeEnum,\n  IfcDuctSilencer,\n  IfcDuctSilencerType,\n  IfcDuctSilencerTypeEnum,\n  IfcDuration,\n  IfcDynamicViscosityMeasure,\n  IfcEdge,\n  IfcEdgeCurve,\n  IfcEdgeLoop,\n  IfcElectricAppliance,\n  IfcElectricApplianceType,\n  IfcElectricApplianceTypeEnum,\n  IfcElectricCapacitanceMeasure,\n  IfcElectricChargeMeasure,\n  IfcElectricConductanceMeasure,\n  IfcElectricCurrentMeasure,\n  IfcElectricDistributionBoard,\n  IfcElectricDistributionBoardType,\n  IfcElectricDistributionBoardTypeEnum,\n  IfcElectricFlowStorageDevice,\n  IfcElectricFlowStorageDeviceType,\n  IfcElectricFlowStorageDeviceTypeEnum,\n  IfcElectricGenerator,\n  IfcElectricGeneratorType,\n  IfcElectricGeneratorTypeEnum,\n  IfcElectricMotor,\n  IfcElectricMotorType,\n  IfcElectricMotorTypeEnum,\n  IfcElectricResistanceMeasure,\n  IfcElectricTimeControl,\n  IfcElectricTimeControlType,\n  IfcElectricTimeControlTypeEnum,\n  IfcElectricVoltageMeasure,\n  IfcElement,\n  IfcElementAssembly,\n  IfcElementAssemblyType,\n  IfcElementAssemblyTypeEnum,\n  IfcElementComponent,\n  IfcElementComponentType,\n  IfcElementCompositionEnum,\n  IfcElementQuantity,\n  IfcElementType,\n  IfcElementarySurface,\n  IfcElements,\n  IfcEllipse,\n  IfcEllipseProfileDef,\n  IfcEnergyConversionDevice,\n  IfcEnergyConversionDeviceType,\n  IfcEnergyMeasure,\n  IfcEngine,\n  IfcEngineType,\n  IfcEngineTypeEnum,\n  IfcEvaporativeCooler,\n  IfcEvaporativeCoolerType,\n  IfcEvaporativeCoolerTypeEnum,\n  IfcEvaporator,\n  IfcEvaporatorType,\n  IfcEvaporatorTypeEnum,\n  IfcEvent,\n  IfcEventTime,\n  IfcEventTriggerTypeEnum,\n  IfcEventType,\n  IfcEventTypeEnum,\n  IfcExtendedProperties,\n  IfcExternalInformation,\n  IfcExternalReference,\n  IfcExternalReferenceRelationship,\n  IfcExternalSpatialElement,\n  IfcExternalSpatialElementTypeEnum,\n  IfcExternalSpatialStructureElement,\n  IfcExternallyDefinedHatchStyle,\n  IfcExternallyDefinedSurfaceStyle,\n  IfcExternallyDefinedTextFont,\n  IfcExtrudedAreaSolid,\n  IfcExtrudedAreaSolidTapered,\n  IfcFace,\n  IfcFaceBasedSurfaceModel,\n  IfcFaceBound,\n  IfcFaceOuterBound,\n  IfcFaceSurface,\n  IfcFacetedBrep,\n  IfcFacetedBrepWithVoids,\n  IfcFacility,\n  IfcFacilityPart,\n  IfcFailureConnectionCondition,\n  IfcFan,\n  IfcFanType,\n  IfcFanTypeEnum,\n  IfcFastener,\n  IfcFastenerType,\n  IfcFastenerTypeEnum,\n  IfcFeatureElement,\n  IfcFeatureElementAddition,\n  IfcFeatureElementSubtraction,\n  IfcFillAreaStyle,\n  IfcFillAreaStyleHatching,\n  IfcFillAreaStyleTiles,\n  IfcFilter,\n  IfcFilterType,\n  IfcFilterTypeEnum,\n  IfcFireSuppressionTerminal,\n  IfcFireSuppressionTerminalType,\n  IfcFireSuppressionTerminalTypeEnum,\n  IfcFixedReferenceSweptAreaSolid,\n  IfcFlowController,\n  IfcFlowControllerType,\n  IfcFlowDirectionEnum,\n  IfcFlowFitting,\n  IfcFlowFittingType,\n  IfcFlowInstrument,\n  IfcFlowInstrumentType,\n  IfcFlowInstrumentTypeEnum,\n  IfcFlowMeter,\n  IfcFlowMeterType,\n  IfcFlowMeterTypeEnum,\n  IfcFlowMovingDevice,\n  IfcFlowMovingDeviceType,\n  IfcFlowSegment,\n  IfcFlowSegmentType,\n  IfcFlowStorageDevice,\n  IfcFlowStorageDeviceType,\n  IfcFlowTerminal,\n  IfcFlowTerminalType,\n  IfcFlowTreatmentDevice,\n  IfcFlowTreatmentDeviceType,\n  IfcFontStyle,\n  IfcFontVariant,\n  IfcFontWeight,\n  IfcFooting,\n  IfcFootingType,\n  IfcFootingTypeEnum,\n  IfcForceMeasure,\n  IfcFrequencyMeasure,\n  IfcFurnishingElement,\n  IfcFurnishingElementType,\n  IfcFurniture,\n  IfcFurnitureType,\n  IfcFurnitureTypeEnum,\n  IfcGeographicElement,\n  IfcGeographicElementType,\n  IfcGeographicElementTypeEnum,\n  IfcGeometricCurveSet,\n  IfcGeometricProjectionEnum,\n  IfcGeometricRepresentationContext,\n  IfcGeometricRepresentationItem,\n  IfcGeometricRepresentationSubContext,\n  IfcGeometricSet,\n  IfcGlobalOrLocalEnum,\n  IfcGloballyUniqueId,\n  IfcGrid,\n  IfcGridAxis,\n  IfcGridPlacement,\n  IfcGridTypeEnum,\n  IfcGroup,\n  IfcHalfSpaceSolid,\n  IfcHeatExchanger,\n  IfcHeatExchangerType,\n  IfcHeatExchangerTypeEnum,\n  IfcHeatFluxDensityMeasure,\n  IfcHeatingValueMeasure,\n  IfcHumidifier,\n  IfcHumidifierType,\n  IfcHumidifierTypeEnum,\n  IfcIShapeProfileDef,\n  IfcIdentifier,\n  IfcIlluminanceMeasure,\n  IfcImageTexture,\n  IfcIndexedColourMap,\n  IfcIndexedPolyCurve,\n  IfcIndexedPolygonalFace,\n  IfcIndexedPolygonalFaceWithVoids,\n  IfcIndexedTextureMap,\n  IfcIndexedTriangleTextureMap,\n  IfcInductanceMeasure,\n  IfcInteger,\n  IfcIntegerCountRateMeasure,\n  IfcInterceptor,\n  IfcInterceptorType,\n  IfcInterceptorTypeEnum,\n  IfcInternalOrExternalEnum,\n  IfcIntersectionCurve,\n  IfcInventory,\n  IfcInventoryTypeEnum,\n  IfcIonConcentrationMeasure,\n  IfcIrregularTimeSeries,\n  IfcIrregularTimeSeriesValue,\n  IfcIsothermalMoistureCapacityMeasure,\n  IfcJunctionBox,\n  IfcJunctionBoxType,\n  IfcJunctionBoxTypeEnum,\n  IfcKinematicViscosityMeasure,\n  IfcKnotType,\n  IfcLShapeProfileDef,\n  IfcLabel,\n  IfcLaborResource,\n  IfcLaborResourceType,\n  IfcLaborResourceTypeEnum,\n  IfcLagTime,\n  IfcLamp,\n  IfcLampType,\n  IfcLampTypeEnum,\n  IfcLanguageId,\n  IfcLayerSetDirectionEnum,\n  IfcLengthMeasure,\n  IfcLibraryInformation,\n  IfcLibraryReference,\n  IfcLightDistributionCurveEnum,\n  IfcLightDistributionData,\n  IfcLightEmissionSourceEnum,\n  IfcLightFixture,\n  IfcLightFixtureType,\n  IfcLightFixtureTypeEnum,\n  IfcLightIntensityDistribution,\n  IfcLightSource,\n  IfcLightSourceAmbient,\n  IfcLightSourceDirectional,\n  IfcLightSourceGoniometric,\n  IfcLightSourcePositional,\n  IfcLightSourceSpot,\n  IfcLine,\n  IfcLineSegment2D,\n  IfcLinearForceMeasure,\n  IfcLinearMomentMeasure,\n  IfcLinearPlacement,\n  IfcLinearPositioningElement,\n  IfcLinearStiffnessMeasure,\n  IfcLinearVelocityMeasure,\n  IfcLoadGroupTypeEnum,\n  IfcLocalPlacement,\n  IfcLogical,\n  IfcLogicalOperatorEnum,\n  IfcLoop,\n  IfcLuminousFluxMeasure,\n  IfcLuminousIntensityDistributionMeasure,\n  IfcLuminousIntensityMeasure,\n  IfcMagneticFluxDensityMeasure,\n  IfcMagneticFluxMeasure,\n  IfcManifoldSolidBrep,\n  IfcMapConversion,\n  IfcMappedItem,\n  IfcMassDensityMeasure,\n  IfcMassFlowRateMeasure,\n  IfcMassMeasure,\n  IfcMassPerLengthMeasure,\n  IfcMaterial,\n  IfcMaterialClassificationRelationship,\n  IfcMaterialConstituent,\n  IfcMaterialConstituentSet,\n  IfcMaterialDefinition,\n  IfcMaterialDefinitionRepresentation,\n  IfcMaterialLayer,\n  IfcMaterialLayerSet,\n  IfcMaterialLayerSetUsage,\n  IfcMaterialLayerWithOffsets,\n  IfcMaterialList,\n  IfcMaterialProfile,\n  IfcMaterialProfileSet,\n  IfcMaterialProfileSetUsage,\n  IfcMaterialProfileSetUsageTapering,\n  IfcMaterialProfileWithOffsets,\n  IfcMaterialProperties,\n  IfcMaterialRelationship,\n  IfcMaterialUsageDefinition,\n  IfcMeasureWithUnit,\n  IfcMechanicalFastener,\n  IfcMechanicalFastenerType,\n  IfcMechanicalFastenerTypeEnum,\n  IfcMedicalDevice,\n  IfcMedicalDeviceType,\n  IfcMedicalDeviceTypeEnum,\n  IfcMember,\n  IfcMemberStandardCase,\n  IfcMemberType,\n  IfcMemberTypeEnum,\n  IfcMetric,\n  IfcMirroredProfileDef,\n  IfcModulusOfElasticityMeasure,\n  IfcModulusOfLinearSubgradeReactionMeasure,\n  IfcModulusOfRotationalSubgradeReactionMeasure,\n  IfcModulusOfSubgradeReactionMeasure,\n  IfcMoistureDiffusivityMeasure,\n  IfcMolecularWeightMeasure,\n  IfcMomentOfInertiaMeasure,\n  IfcMonetaryMeasure,\n  IfcMonetaryUnit,\n  IfcMonthInYearNumber,\n  IfcMotorConnection,\n  IfcMotorConnectionType,\n  IfcMotorConnectionTypeEnum,\n  IfcNamedUnit,\n  IfcNonNegativeLengthMeasure,\n  IfcNormalisedRatioMeasure,\n  IfcNullStyle,\n  IfcNumericMeasure,\n  IfcObject,\n  IfcObjectDefinition,\n  IfcObjectPlacement,\n  IfcObjectTypeEnum,\n  IfcObjective,\n  IfcObjectiveEnum,\n  IfcOccupant,\n  IfcOccupantTypeEnum,\n  IfcOffsetCurve,\n  IfcOffsetCurve2D,\n  IfcOffsetCurve3D,\n  IfcOffsetCurveByDistances,\n  IfcOpenShell,\n  IfcOpeningElement,\n  IfcOpeningElementTypeEnum,\n  IfcOpeningStandardCase,\n  IfcOrganization,\n  IfcOrganizationRelationship,\n  IfcOrientationExpression,\n  IfcOrientedEdge,\n  IfcOuterBoundaryCurve,\n  IfcOutlet,\n  IfcOutletType,\n  IfcOutletTypeEnum,\n  IfcOwnerHistory,\n  IfcPHMeasure,\n  IfcParameterValue,\n  IfcParameterizedProfileDef,\n  IfcPath,\n  IfcPcurve,\n  IfcPerformanceHistory,\n  IfcPerformanceHistoryTypeEnum,\n  IfcPermeableCoveringOperationEnum,\n  IfcPermeableCoveringProperties,\n  IfcPermit,\n  IfcPermitTypeEnum,\n  IfcPerson,\n  IfcPersonAndOrganization,\n  IfcPhysicalComplexQuantity,\n  IfcPhysicalOrVirtualEnum,\n  IfcPhysicalQuantity,\n  IfcPhysicalSimpleQuantity,\n  IfcPile,\n  IfcPileConstructionEnum,\n  IfcPileType,\n  IfcPileTypeEnum,\n  IfcPipeFitting,\n  IfcPipeFittingType,\n  IfcPipeFittingTypeEnum,\n  IfcPipeSegment,\n  IfcPipeSegmentType,\n  IfcPipeSegmentTypeEnum,\n  IfcPixelTexture,\n  IfcPlacement,\n  IfcPlanarBox,\n  IfcPlanarExtent,\n  IfcPlanarForceMeasure,\n  IfcPlane,\n  IfcPlaneAngleMeasure,\n  IfcPlate,\n  IfcPlateStandardCase,\n  IfcPlateType,\n  IfcPlateTypeEnum,\n  IfcPoint,\n  IfcPointOnCurve,\n  IfcPointOnSurface,\n  IfcPolyLoop,\n  IfcPolygonalBoundedHalfSpace,\n  IfcPolygonalFaceSet,\n  IfcPolyline,\n  IfcPort,\n  IfcPositioningElement,\n  IfcPositiveInteger,\n  IfcPositiveLengthMeasure,\n  IfcPositivePlaneAngleMeasure,\n  IfcPositiveRatioMeasure,\n  IfcPostalAddress,\n  IfcPowerMeasure,\n  IfcPreDefinedColour,\n  IfcPreDefinedCurveFont,\n  IfcPreDefinedItem,\n  IfcPreDefinedProperties,\n  IfcPreDefinedPropertySet,\n  IfcPreDefinedTextFont,\n  IfcPreferredSurfaceCurveRepresentation,\n  IfcPresentableText,\n  IfcPresentationItem,\n  IfcPresentationLayerAssignment,\n  IfcPresentationLayerWithStyle,\n  IfcPresentationStyle,\n  IfcPresentationStyleAssignment,\n  IfcPressureMeasure,\n  IfcProcedure,\n  IfcProcedureType,\n  IfcProcedureTypeEnum,\n  IfcProcess,\n  IfcProduct,\n  IfcProductDefinitionShape,\n  IfcProductRepresentation,\n  IfcProfileDef,\n  IfcProfileProperties,\n  IfcProfileTypeEnum,\n  IfcProject,\n  IfcProjectLibrary,\n  IfcProjectOrder,\n  IfcProjectOrderTypeEnum,\n  IfcProjectedCRS,\n  IfcProjectedOrTrueLengthEnum,\n  IfcProjectionElement,\n  IfcProjectionElementTypeEnum,\n  IfcProperty,\n  IfcPropertyAbstraction,\n  IfcPropertyBoundedValue,\n  IfcPropertyDefinition,\n  IfcPropertyDependencyRelationship,\n  IfcPropertyEnumeratedValue,\n  IfcPropertyEnumeration,\n  IfcPropertyListValue,\n  IfcPropertyReferenceValue,\n  IfcPropertySet,\n  IfcPropertySetDefinition,\n  IfcPropertySetTemplate,\n  IfcPropertySetTemplateTypeEnum,\n  IfcPropertySingleValue,\n  IfcPropertyTableValue,\n  IfcPropertyTemplate,\n  IfcPropertyTemplateDefinition,\n  IfcProtectiveDevice,\n  IfcProtectiveDeviceTrippingUnit,\n  IfcProtectiveDeviceTrippingUnitType,\n  IfcProtectiveDeviceTrippingUnitTypeEnum,\n  IfcProtectiveDeviceType,\n  IfcProtectiveDeviceTypeEnum,\n  IfcProxy,\n  IfcPump,\n  IfcPumpType,\n  IfcPumpTypeEnum,\n  IfcQuantityArea,\n  IfcQuantityCount,\n  IfcQuantityLength,\n  IfcQuantitySet,\n  IfcQuantityTime,\n  IfcQuantityVolume,\n  IfcQuantityWeight,\n  IfcRadioActivityMeasure,\n  IfcRailing,\n  IfcRailingType,\n  IfcRailingTypeEnum,\n  IfcRamp,\n  IfcRampFlight,\n  IfcRampFlightType,\n  IfcRampFlightTypeEnum,\n  IfcRampType,\n  IfcRampTypeEnum,\n  IfcRatioMeasure,\n  IfcRationalBSplineCurveWithKnots,\n  IfcRationalBSplineSurfaceWithKnots,\n  IfcReal,\n  IfcRectangleHollowProfileDef,\n  IfcRectangleProfileDef,\n  IfcRectangularPyramid,\n  IfcRectangularTrimmedSurface,\n  IfcRecurrencePattern,\n  IfcRecurrenceTypeEnum,\n  IfcReference,\n  IfcReferent,\n  IfcReferentTypeEnum,\n  IfcReflectanceMethodEnum,\n  IfcRegularTimeSeries,\n  IfcReinforcementBarProperties,\n  IfcReinforcementDefinitionProperties,\n  IfcReinforcingBar,\n  IfcReinforcingBarRoleEnum,\n  IfcReinforcingBarSurfaceEnum,\n  IfcReinforcingBarType,\n  IfcReinforcingBarTypeEnum,\n  IfcReinforcingElement,\n  IfcReinforcingElementType,\n  IfcReinforcingMesh,\n  IfcReinforcingMeshType,\n  IfcReinforcingMeshTypeEnum,\n  IfcRelAggregates,\n  IfcRelAssigns,\n  IfcRelAssignsToActor,\n  IfcRelAssignsToControl,\n  IfcRelAssignsToGroup,\n  IfcRelAssignsToGroupByFactor,\n  IfcRelAssignsToProcess,\n  IfcRelAssignsToProduct,\n  IfcRelAssignsToResource,\n  IfcRelAssociates,\n  IfcRelAssociatesApproval,\n  IfcRelAssociatesClassification,\n  IfcRelAssociatesConstraint,\n  IfcRelAssociatesDocument,\n  IfcRelAssociatesLibrary,\n  IfcRelAssociatesMaterial,\n  IfcRelConnects,\n  IfcRelConnectsElements,\n  IfcRelConnectsPathElements,\n  IfcRelConnectsPortToElement,\n  IfcRelConnectsPorts,\n  IfcRelConnectsStructuralActivity,\n  IfcRelConnectsStructuralMember,\n  IfcRelConnectsWithEccentricity,\n  IfcRelConnectsWithRealizingElements,\n  IfcRelContainedInSpatialStructure,\n  IfcRelCoversBldgElements,\n  IfcRelCoversSpaces,\n  IfcRelDeclares,\n  IfcRelDecomposes,\n  IfcRelDefines,\n  IfcRelDefinesByObject,\n  IfcRelDefinesByProperties,\n  IfcRelDefinesByTemplate,\n  IfcRelDefinesByType,\n  IfcRelFillsElement,\n  IfcRelFlowControlElements,\n  IfcRelInterferesElements,\n  IfcRelNests,\n  IfcRelPositions,\n  IfcRelProjectsElement,\n  IfcRelReferencedInSpatialStructure,\n  IfcRelSequence,\n  IfcRelServicesBuildings,\n  IfcRelSpaceBoundary,\n  IfcRelSpaceBoundary1stLevel,\n  IfcRelSpaceBoundary2ndLevel,\n  IfcRelVoidsElement,\n  IfcRelationship,\n  IfcReparametrisedCompositeCurveSegment,\n  IfcRepresentation,\n  IfcRepresentationContext,\n  IfcRepresentationItem,\n  IfcRepresentationMap,\n  IfcResource,\n  IfcResourceApprovalRelationship,\n  IfcResourceConstraintRelationship,\n  IfcResourceLevelRelationship,\n  IfcResourceTime,\n  IfcRevolvedAreaSolid,\n  IfcRevolvedAreaSolidTapered,\n  IfcRightCircularCone,\n  IfcRightCircularCylinder,\n  IfcRoleEnum,\n  IfcRoof,\n  IfcRoofType,\n  IfcRoofTypeEnum,\n  IfcRoot,\n  IfcRotationalFrequencyMeasure,\n  IfcRotationalMassMeasure,\n  IfcRotationalStiffnessMeasure,\n  IfcRoundedRectangleProfileDef,\n  IfcSIPrefix,\n  IfcSIUnit,\n  IfcSIUnitName,\n  IfcSanitaryTerminal,\n  IfcSanitaryTerminalType,\n  IfcSanitaryTerminalTypeEnum,\n  IfcSchedulingTime,\n  IfcSeamCurve,\n  IfcSectionModulusMeasure,\n  IfcSectionProperties,\n  IfcSectionReinforcementProperties,\n  IfcSectionTypeEnum,\n  IfcSectionalAreaIntegralMeasure,\n  IfcSectionedSolid,\n  IfcSectionedSolidHorizontal,\n  IfcSectionedSpine,\n  IfcSensor,\n  IfcSensorType,\n  IfcSensorTypeEnum,\n  IfcSequenceEnum,\n  IfcShadingDevice,\n  IfcShadingDeviceType,\n  IfcShadingDeviceTypeEnum,\n  IfcShapeAspect,\n  IfcShapeModel,\n  IfcShapeRepresentation,\n  IfcShearModulusMeasure,\n  IfcShellBasedSurfaceModel,\n  IfcSimpleProperty,\n  IfcSimplePropertyTemplate,\n  IfcSimplePropertyTemplateTypeEnum,\n  IfcSite,\n  IfcSlab,\n  IfcSlabElementedCase,\n  IfcSlabStandardCase,\n  IfcSlabType,\n  IfcSlabTypeEnum,\n  IfcSlippageConnectionCondition,\n  IfcSolarDevice,\n  IfcSolarDeviceType,\n  IfcSolarDeviceTypeEnum,\n  IfcSolidAngleMeasure,\n  IfcSolidModel,\n  IfcSoundPowerLevelMeasure,\n  IfcSoundPowerMeasure,\n  IfcSoundPressureLevelMeasure,\n  IfcSoundPressureMeasure,\n  IfcSpace,\n  IfcSpaceHeater,\n  IfcSpaceHeaterType,\n  IfcSpaceHeaterTypeEnum,\n  IfcSpaceType,\n  IfcSpaceTypeEnum,\n  IfcSpatialElement,\n  IfcSpatialElementType,\n  IfcSpatialStructureElement,\n  IfcSpatialStructureElementType,\n  IfcSpatialZone,\n  IfcSpatialZoneType,\n  IfcSpatialZoneTypeEnum,\n  IfcSpecificHeatCapacityMeasure,\n  IfcSpecularExponent,\n  IfcSpecularRoughness,\n  IfcSphere,\n  IfcSphericalSurface,\n  IfcStackTerminal,\n  IfcStackTerminalType,\n  IfcStackTerminalTypeEnum,\n  IfcStair,\n  IfcStairFlight,\n  IfcStairFlightType,\n  IfcStairFlightTypeEnum,\n  IfcStairType,\n  IfcStairTypeEnum,\n  IfcStateEnum,\n  IfcStructuralAction,\n  IfcStructuralActivity,\n  IfcStructuralAnalysisModel,\n  IfcStructuralConnection,\n  IfcStructuralConnectionCondition,\n  IfcStructuralCurveAction,\n  IfcStructuralCurveActivityTypeEnum,\n  IfcStructuralCurveConnection,\n  IfcStructuralCurveMember,\n  IfcStructuralCurveMemberTypeEnum,\n  IfcStructuralCurveMemberVarying,\n  IfcStructuralCurveReaction,\n  IfcStructuralItem,\n  IfcStructuralLinearAction,\n  IfcStructuralLoad,\n  IfcStructuralLoadCase,\n  IfcStructuralLoadConfiguration,\n  IfcStructuralLoadGroup,\n  IfcStructuralLoadLinearForce,\n  IfcStructuralLoadOrResult,\n  IfcStructuralLoadPlanarForce,\n  IfcStructuralLoadSingleDisplacement,\n  IfcStructuralLoadSingleDisplacementDistortion,\n  IfcStructuralLoadSingleForce,\n  IfcStructuralLoadSingleForceWarping,\n  IfcStructuralLoadStatic,\n  IfcStructuralLoadTemperature,\n  IfcStructuralMember,\n  IfcStructuralPlanarAction,\n  IfcStructuralPointAction,\n  IfcStructuralPointConnection,\n  IfcStructuralPointReaction,\n  IfcStructuralReaction,\n  IfcStructuralResultGroup,\n  IfcStructuralSurfaceAction,\n  IfcStructuralSurfaceActivityTypeEnum,\n  IfcStructuralSurfaceConnection,\n  IfcStructuralSurfaceMember,\n  IfcStructuralSurfaceMemberTypeEnum,\n  IfcStructuralSurfaceMemberVarying,\n  IfcStructuralSurfaceReaction,\n  IfcStyleModel,\n  IfcStyledItem,\n  IfcStyledRepresentation,\n  IfcSubContractResource,\n  IfcSubContractResourceType,\n  IfcSubContractResourceTypeEnum,\n  IfcSubedge,\n  IfcSurface,\n  IfcSurfaceCurve,\n  IfcSurfaceCurveSweptAreaSolid,\n  IfcSurfaceFeature,\n  IfcSurfaceFeatureTypeEnum,\n  IfcSurfaceOfLinearExtrusion,\n  IfcSurfaceOfRevolution,\n  IfcSurfaceReinforcementArea,\n  IfcSurfaceSide,\n  IfcSurfaceStyle,\n  IfcSurfaceStyleLighting,\n  IfcSurfaceStyleRefraction,\n  IfcSurfaceStyleRendering,\n  IfcSurfaceStyleShading,\n  IfcSurfaceStyleWithTextures,\n  IfcSurfaceTexture,\n  IfcSweptAreaSolid,\n  IfcSweptDiskSolid,\n  IfcSweptDiskSolidPolygonal,\n  IfcSweptSurface,\n  IfcSwitchingDevice,\n  IfcSwitchingDeviceType,\n  IfcSwitchingDeviceTypeEnum,\n  IfcSystem,\n  IfcSystemFurnitureElement,\n  IfcSystemFurnitureElementType,\n  IfcSystemFurnitureElementTypeEnum,\n  IfcTShapeProfileDef,\n  IfcTable,\n  IfcTableColumn,\n  IfcTableRow,\n  IfcTank,\n  IfcTankType,\n  IfcTankTypeEnum,\n  IfcTask,\n  IfcTaskDurationEnum,\n  IfcTaskTime,\n  IfcTaskTimeRecurring,\n  IfcTaskType,\n  IfcTaskTypeEnum,\n  IfcTelecomAddress,\n  IfcTemperatureGradientMeasure,\n  IfcTemperatureRateOfChangeMeasure,\n  IfcTendon,\n  IfcTendonAnchor,\n  IfcTendonAnchorType,\n  IfcTendonAnchorTypeEnum,\n  IfcTendonConduit,\n  IfcTendonConduitType,\n  IfcTendonConduitTypeEnum,\n  IfcTendonType,\n  IfcTendonTypeEnum,\n  IfcTessellatedFaceSet,\n  IfcTessellatedItem,\n  IfcText,\n  IfcTextAlignment,\n  IfcTextDecoration,\n  IfcTextFontName,\n  IfcTextLiteral,\n  IfcTextLiteralWithExtent,\n  IfcTextPath,\n  IfcTextStyle,\n  IfcTextStyleFontModel,\n  IfcTextStyleForDefinedFont,\n  IfcTextStyleTextModel,\n  IfcTextTransformation,\n  IfcTextureCoordinate,\n  IfcTextureCoordinateGenerator,\n  IfcTextureMap,\n  IfcTextureVertex,\n  IfcTextureVertexList,\n  IfcThermalAdmittanceMeasure,\n  IfcThermalConductivityMeasure,\n  IfcThermalExpansionCoefficientMeasure,\n  IfcThermalResistanceMeasure,\n  IfcThermalTransmittanceMeasure,\n  IfcThermodynamicTemperatureMeasure,\n  IfcTime,\n  IfcTimeMeasure,\n  IfcTimePeriod,\n  IfcTimeSeries,\n  IfcTimeSeriesDataTypeEnum,\n  IfcTimeSeriesValue,\n  IfcTimeStamp,\n  IfcTopologicalRepresentationItem,\n  IfcTopologyRepresentation,\n  IfcToroidalSurface,\n  IfcTorqueMeasure,\n  IfcTransformer,\n  IfcTransformerType,\n  IfcTransformerTypeEnum,\n  IfcTransitionCode,\n  IfcTransitionCurveSegment2D,\n  IfcTransitionCurveType,\n  IfcTransportElement,\n  IfcTransportElementType,\n  IfcTransportElementTypeEnum,\n  IfcTrapeziumProfileDef,\n  IfcTriangulatedFaceSet,\n  IfcTriangulatedIrregularNetwork,\n  IfcTrimmedCurve,\n  IfcTrimmingPreference,\n  IfcTubeBundle,\n  IfcTubeBundleType,\n  IfcTubeBundleTypeEnum,\n  IfcTypeObject,\n  IfcTypeProcess,\n  IfcTypeProduct,\n  IfcTypeResource,\n  IfcURIReference,\n  IfcUShapeProfileDef,\n  IfcUnitAssignment,\n  IfcUnitEnum,\n  IfcUnitaryControlElement,\n  IfcUnitaryControlElementType,\n  IfcUnitaryControlElementTypeEnum,\n  IfcUnitaryEquipment,\n  IfcUnitaryEquipmentType,\n  IfcUnitaryEquipmentTypeEnum,\n  IfcValve,\n  IfcValveType,\n  IfcValveTypeEnum,\n  IfcVaporPermeabilityMeasure,\n  IfcVector,\n  IfcVertex,\n  IfcVertexLoop,\n  IfcVertexPoint,\n  IfcVibrationDamper,\n  IfcVibrationDamperType,\n  IfcVibrationDamperTypeEnum,\n  IfcVibrationIsolator,\n  IfcVibrationIsolatorType,\n  IfcVibrationIsolatorTypeEnum,\n  IfcVirtualElement,\n  IfcVirtualGridIntersection,\n  IfcVoidingFeature,\n  IfcVoidingFeatureTypeEnum,\n  IfcVolumeMeasure,\n  IfcVolumetricFlowRateMeasure,\n  IfcWall,\n  IfcWallElementedCase,\n  IfcWallStandardCase,\n  IfcWallType,\n  IfcWallTypeEnum,\n  IfcWarpingConstantMeasure,\n  IfcWarpingMomentMeasure,\n  IfcWasteTerminal,\n  IfcWasteTerminalType,\n  IfcWasteTerminalTypeEnum,\n  IfcWindow,\n  IfcWindowLiningProperties,\n  IfcWindowPanelOperationEnum,\n  IfcWindowPanelPositionEnum,\n  IfcWindowPanelProperties,\n  IfcWindowStandardCase,\n  IfcWindowStyle,\n  IfcWindowStyleConstructionEnum,\n  IfcWindowStyleOperationEnum,\n  IfcWindowType,\n  IfcWindowTypeEnum,\n  IfcWindowTypePartitioningEnum,\n  IfcWorkCalendar,\n  IfcWorkCalendarTypeEnum,\n  IfcWorkControl,\n  IfcWorkPlan,\n  IfcWorkPlanTypeEnum,\n  IfcWorkSchedule,\n  IfcWorkScheduleTypeEnum,\n  IfcWorkTime,\n  IfcZShapeProfileDef,\n  IfcZone,\n  LABEL,\n  LINE_END,\n  REAL,\n  REF,\n  SET_BEGIN,\n  SET_END,\n  STRING,\n  UNKNOWN,\n  Value,\n  ms\n};\n\n\n var WasmPath = \"\";\n\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\nfunction computeTangents() {\n\n\tthrow new Error( 'BufferGeometryUtils: computeTangents renamed to computeMikkTSpaceTangents.' );\n\n}\n\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst dstArray = new Float32Array( attribute.getCount() * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.getCount(); i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = attribute.getX( i );\n\t\t\t\tdstArray[ j ++ ] = attribute.getY( i );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = attribute.getZ( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry );\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * @param  {Array<BufferGeometry>} geometries\n * @param  {Boolean} useGroups\n * @return {BufferGeometry}\n */\nfunction mergeBufferGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeBufferAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeBufferAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {BufferAttribute}\n */\nfunction mergeBufferAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tarray.set( attributes[ i ].array, offset );\n\n\t\toffset += attributes[ i ].array.length;\n\n\t}\n\n\treturn new BufferAttribute( array, itemSize, normalized );\n\n}\n\n/**\n * @param {BufferAttribute}\n * @return {BufferAttribute}\n */\nexport function deepCloneAttribute( attribute ) {\n\n\tif ( attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute ) {\n\n\t\treturn deinterleaveAttribute( attribute );\n\n\t}\n\n\tif ( attribute.isInstancedBufferAttribute ) {\n\n\t\treturn new InstancedBufferAttribute().copy( attribute );\n\n\t}\n\n\treturn new BufferAttribute().copy( attribute );\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {Array<InterleavedBufferAttribute>}\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n// returns a new, non-interleaved version of the provided attribute\nexport function deinterleaveAttribute( attribute ) {\n\n\tconst cons = attribute.data.array.constructor;\n\tconst count = attribute.count;\n\tconst itemSize = attribute.itemSize;\n\tconst normalized = attribute.normalized;\n\n\tconst array = new cons( count * itemSize );\n\tlet newAttribute;\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\n\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\n\n\t} else {\n\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\n\n\t\tif ( itemSize >= 2 ) {\n\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 3 ) {\n\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 4 ) {\n\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\n\n\t\t}\n\n\t}\n\n\treturn newAttribute;\n\n}\n\n// deinterleaves all attributes on the geometry\nexport function deinterleaveGeometry( geometry ) {\n\n\tconst attributes = geometry.attributes;\n\tconst morphTargets = geometry.morphTargets;\n\tconst attrMap = new Map();\n\n\tfor ( const key in attributes ) {\n\n\t\tconst attr = attributes[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tattributes[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n\tfor ( const key in morphTargets ) {\n\n\t\tconst attr = morphTargets[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @param {Array<BufferGeometry>} geometry\n * @return {number}\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} tolerance\n * @return {BufferGeometry}\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst tmpAttributes = {};\n\tconst tmpMorphAttributes = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t// Initialize the arrays, allocating space conservatively. Extra\n\t// space will be trimmed in the last step.\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst attr = geometry.attributes[ name ];\n\n\t\ttmpAttributes[ name ] = new BufferAttribute(\n\t\t\tnew attr.array.constructor( attr.count * attr.itemSize ),\n\t\t\tattr.itemSize,\n\t\t\tattr.normalized\n\t\t);\n\n\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\tif ( morphAttr ) {\n\n\t\t\ttmpMorphAttributes[ name ] = new BufferAttribute(\n\t\t\t\tnew morphAttr.array.constructor( morphAttr.count * morphAttr.itemSize ),\n\t\t\t\tmorphAttr.itemSize,\n\t\t\t\tmorphAttr.normalized\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst decimalShift = Math.log10( 1 / tolerance );\n\tconst shiftMultiplier = Math.pow( 10, decimalShift );\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * shiftMultiplier ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the temporary attributes\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newarray = tmpAttributes[ name ];\n\t\t\t\tconst newMorphArrays = tmpMorphAttributes[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tconst setterFunc = setters[ k ];\n\t\t\t\t\tnewarray[ setterFunc ]( nextIndex, attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttr ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttr.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ][ setterFunc ]( nextIndex, morphAttr[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// generate result BufferGeometry\n\tconst result = geometry.clone();\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst tmpAttribute = tmpAttributes[ name ];\n\n\t\tresult.setAttribute( name, new BufferAttribute(\n\t\t\ttmpAttribute.array.slice( 0, nextIndex * tmpAttribute.itemSize ),\n\t\t\ttmpAttribute.itemSize,\n\t\t\ttmpAttribute.normalized,\n\t\t) );\n\n\t\tif ( ! ( name in tmpMorphAttributes ) ) continue;\n\n\t\tfor ( let j = 0; j < tmpMorphAttributes[ name ].length; j ++ ) {\n\n\t\t\tconst tmpMorphAttribute = tmpMorphAttributes[ name ][ j ];\n\n\t\t\tresult.morphAttributes[ name ][ j ] = new BufferAttribute(\n\t\t\t\ttmpMorphAttribute.array.slice( 0, nextIndex * tmpMorphAttribute.itemSize ),\n\t\t\t\ttmpMorphAttribute.itemSize,\n\t\t\t\ttmpMorphAttribute.normalized,\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} drawMode\n * @return {BufferGeometry}\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n * Helpful for Raytracing or Decals.\n * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.\n * @return {Object} An Object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tif ( object.geometry.isBufferGeometry !== true ) {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils: Geometry is not of type BufferGeometry.' );\n\t\treturn null;\n\n\t}\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.boneTransform( a, _vA );\n\t\t\tobject.boneTransform( b, _vB );\n\t\t\tobject.boneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\n\n// Creates a new, non-indexed geometry with smooth normals everywhere except faces that meet at\n// an angle greater than the crease angle.\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vertors\n\tconst verts = [ new Vector3(), new Vector3(), new Vector3() ];\n\tconst tempVec1 = new Vector3();\n\tconst tempVec2 = new Vector3();\n\tconst tempNorm = new Vector3();\n\tconst tempNorm2 = new Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\tconst resultGeometry = geometry.toNonIndexed();\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nexport {\n\tcomputeTangents,\n\tcomputeMikkTSpaceTangents,\n\tmergeBufferGeometries,\n\tmergeBufferAttributes,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups,\n\ttoCreasedNormals\n};\n","import {\n\tIFCRELAGGREGATES,\n\tIFCRELCONTAINEDINSPATIALSTRUCTURE,\n\tIFCRELDEFINESBYPROPERTIES,\n\tIFCRELASSOCIATESMATERIAL,\n\tIFCRELDEFINESBYTYPE,\n\tIFCPROJECT,\n\tIfcAPI\n} from './ifc/web-ifc-api.js';\nimport {\n\tBufferAttribute,\n\tMesh,\n\tMatrix4,\n\tBufferGeometry,\n\tColor,\n\tMeshLambertMaterial,\n\tDoubleSide,\n\tLoader,\n\tFileLoader\n} from 'three';\nimport { mergeBufferGeometries } from '../utils/BufferGeometryUtils.js';\n\nconst IdAttrName = 'expressID';\nconst merge = ( geoms, createGroups = false ) => {\n\n\treturn mergeBufferGeometries( geoms, createGroups );\n\n};\n\nconst newFloatAttr = ( data, size ) => {\n\n\treturn new BufferAttribute( new Float32Array( data ), size );\n\n};\n\nconst newIntAttr = ( data, size ) => {\n\n\treturn new BufferAttribute( new Uint32Array( data ), size );\n\n};\n\nconst DEFAULT = 'default';\nconst PropsNames = {\n\taggregates: {\n\t\tname: IFCRELAGGREGATES,\n\t\trelating: 'RelatingObject',\n\t\trelated: 'RelatedObjects',\n\t\tkey: 'children'\n\t},\n\tspatial: {\n\t\tname: IFCRELCONTAINEDINSPATIALSTRUCTURE,\n\t\trelating: 'RelatingStructure',\n\t\trelated: 'RelatedElements',\n\t\tkey: 'children'\n\t},\n\tpsets: {\n\t\tname: IFCRELDEFINESBYPROPERTIES,\n\t\trelating: 'RelatingPropertyDefinition',\n\t\trelated: 'RelatedObjects',\n\t\tkey: 'hasPsets'\n\t},\n\tmaterials: {\n\t\tname: IFCRELASSOCIATESMATERIAL,\n\t\trelating: 'RelatingMaterial',\n\t\trelated: 'RelatedObjects',\n\t\tkey: 'hasMaterial'\n\t},\n\ttype: {\n\t\tname: IFCRELDEFINESBYTYPE,\n\t\trelating: 'RelatingType',\n\t\trelated: 'RelatedObjects',\n\t\tkey: 'hasType'\n\t}\n};\n\nclass IFCParser {\n\n\tconstructor( state, BVH ) {\n\n\t\tthis.state = state;\n\t\tthis.BVH = BVH;\n\t\tthis.loadedModels = 0;\n\t\tthis.currentWebIfcID = - 1;\n\t\tthis.currentModelID = - 1;\n\n\t}\n\n\tasync parse( buffer ) {\n\n\t\tif ( this.state.api.wasmModule === undefined )\n\t\t\tawait this.state.api.Init();\n\t\tthis.newIfcModel( buffer );\n\t\tthis.loadedModels ++;\n\t\treturn this.loadAllGeometry();\n\n\t}\n\n\tnewIfcModel( buffer ) {\n\n\t\tconst data = new Uint8Array( buffer );\n\t\tthis.currentWebIfcID = this.state.api.OpenModel( data, this.state.webIfcSettings );\n\t\tthis.currentModelID = this.state.useJSON ? this.loadedModels : this.currentWebIfcID;\n\t\tthis.state.models[ this.currentModelID ] = {\n\t\t\tmodelID: this.currentModelID,\n\t\t\tmesh: {},\n\t\t\titems: {},\n\t\t\ttypes: {},\n\t\t\tjsonData: {}\n\t\t};\n\n\t}\n\n\tloadAllGeometry() {\n\n\t\tthis.saveAllPlacedGeometriesByMaterial();\n\t\treturn this.generateAllGeometriesByMaterial();\n\n\t}\n\n\tgenerateAllGeometriesByMaterial() {\n\n\t\tconst { geometry, materials } = this.getGeometryAndMaterials();\n\t\tthis.BVH.applyThreeMeshBVH( geometry );\n\t\tconst mesh = new Mesh( geometry, materials );\n\t\tmesh.modelID = this.currentModelID;\n\t\tthis.state.models[ this.currentModelID ].mesh = mesh;\n\t\treturn mesh;\n\n\t}\n\n\tgetGeometryAndMaterials() {\n\n\t\tconst items = this.state.models[ this.currentModelID ].items;\n\t\tconst mergedByMaterial = [];\n\t\tconst materials = [];\n\t\tfor ( const materialID in items ) {\n\n\t\t\tmaterials.push( items[ materialID ].material );\n\t\t\tconst geometries = Object.values( items[ materialID ].geometries );\n\t\t\tmergedByMaterial.push( merge( geometries ) );\n\n\t\t}\n\n\t\tconst geometry = merge( mergedByMaterial, true );\n\t\treturn {\n\t\t\tgeometry,\n\t\t\tmaterials\n\t\t};\n\n\t}\n\n\tsaveAllPlacedGeometriesByMaterial() {\n\n\t\tconst flatMeshes = this.state.api.LoadAllGeometry( this.currentWebIfcID );\n\t\tfor ( let i = 0; i < flatMeshes.size(); i ++ ) {\n\n\t\t\tconst flatMesh = flatMeshes.get( i );\n\t\t\tconst placedGeom = flatMesh.geometries;\n\t\t\tfor ( let j = 0; j < placedGeom.size(); j ++ ) {\n\n\t\t\t\tthis.savePlacedGeometry( placedGeom.get( j ), flatMesh.expressID );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsavePlacedGeometry( placedGeometry, id ) {\n\n\t\tconst geometry = this.getBufferGeometry( placedGeometry );\n\t\tgeometry.computeVertexNormals();\n\t\tconst matrix = this.getMeshMatrix( placedGeometry.flatTransformation );\n\t\tgeometry.applyMatrix4( matrix );\n\t\tthis.saveGeometryByMaterial( geometry, placedGeometry, id );\n\n\t}\n\n\tgetBufferGeometry( placed ) {\n\n\t\tconst geometry = this.state.api.GetGeometry( this.currentWebIfcID, placed.geometryExpressID );\n\t\tconst vertexData = this.getVertices( geometry );\n\t\tconst indices = this.getIndices( geometry );\n\t\tconst { vertices, normals } = this.extractVertexData( vertexData );\n\t\treturn this.ifcGeomToBufferGeom( vertices, normals, indices );\n\n\t}\n\n\tgetVertices( geometry ) {\n\n\t\tconst vData = geometry.GetVertexData();\n\t\tconst vDataSize = geometry.GetVertexDataSize();\n\t\treturn this.state.api.GetVertexArray( vData, vDataSize );\n\n\t}\n\n\tgetIndices( geometry ) {\n\n\t\tconst iData = geometry.GetIndexData();\n\t\tconst iDataSize = geometry.GetIndexDataSize();\n\t\treturn this.state.api.GetIndexArray( iData, iDataSize );\n\n\t}\n\n\tgetMeshMatrix( matrix ) {\n\n\t\tconst mat = new Matrix4();\n\t\tmat.fromArray( matrix );\n\t\treturn mat;\n\n\t}\n\n\tifcGeomToBufferGeom( vertices, normals, indexData ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', newFloatAttr( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'normal', newFloatAttr( normals, 3 ) );\n\t\tgeometry.setIndex( new BufferAttribute( indexData, 1 ) );\n\t\treturn geometry;\n\n\t}\n\n\textractVertexData( vertexData ) {\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tlet isNormalData = false;\n\t\tfor ( let i = 0; i < vertexData.length; i ++ ) {\n\n\t\t\tisNormalData ? normals.push( vertexData[ i ] ) : vertices.push( vertexData[ i ] );\n\t\t\tif ( ( i + 1 ) % 3 == 0 )\n\t\t\t\tisNormalData = ! isNormalData;\n\n\t\t}\n\n\t\treturn {\n\t\t\tvertices,\n\t\t\tnormals\n\t\t};\n\n\t}\n\n\tsaveGeometryByMaterial( geom, placedGeom, id ) {\n\n\t\tconst color = placedGeom.color;\n\t\tconst colorID = `${color.x}${color.y}${color.z}${color.w}`;\n\t\tthis.storeGeometryAttribute( id, geom );\n\t\tthis.createMaterial( colorID, color );\n\t\tconst item = this.state.models[ this.currentModelID ].items[ colorID ];\n\t\tconst currentGeom = item.geometries[ id ];\n\t\tif ( ! currentGeom )\n\t\t\treturn ( item.geometries[ id ] = geom );\n\t\tconst merged = merge( [ currentGeom, geom ] );\n\t\titem.geometries[ id ] = merged;\n\n\t}\n\n\tstoreGeometryAttribute( id, geometry ) {\n\n\t\tconst size = geometry.attributes.position.count;\n\t\tconst idAttribute = new Array( size ).fill( id );\n\t\tgeometry.setAttribute( IdAttrName, newIntAttr( idAttribute, 1 ) );\n\n\t}\n\n\tcreateMaterial( colorID, color ) {\n\n\t\tconst items = this.state.models[ this.currentModelID ].items;\n\t\tif ( items[ colorID ] )\n\t\t\treturn;\n\t\tconst col = new Color( color.x, color.y, color.z );\n\t\tconst newMaterial = new MeshLambertMaterial( {\n\t\t\tcolor: col,\n\t\t\tside: DoubleSide\n\t\t} );\n\t\tnewMaterial.transparent = color.w !== 1;\n\t\tif ( newMaterial.transparent )\n\t\t\tnewMaterial.opacity = color.w;\n\t\titems[ colorID ] = {\n\t\t\tmaterial: newMaterial,\n\t\t\tgeometries: {}\n\t\t};\n\n\t}\n\n}\n\nclass SubsetManager {\n\n\tconstructor( state, BVH ) {\n\n\t\tthis.selected = {};\n\t\tthis.state = state;\n\t\tthis.BVH = BVH;\n\n\t}\n\n\tgetSubset( modelID, material ) {\n\n\t\tconst currentMat = this.matIDNoConfig( modelID, material );\n\t\tif ( ! this.selected[ currentMat ] )\n\t\t\treturn null;\n\t\treturn this.selected[ currentMat ].mesh;\n\n\t}\n\n\tremoveSubset( modelID, parent, material ) {\n\n\t\tconst currentMat = this.matIDNoConfig( modelID, material );\n\t\tif ( ! this.selected[ currentMat ] )\n\t\t\treturn;\n\t\tif ( parent )\n\t\t\tparent.remove( this.selected[ currentMat ].mesh );\n\t\tdelete this.selected[ currentMat ];\n\n\t}\n\n\tcreateSubset( config ) {\n\n\t\tif ( ! this.isConfigValid( config ) )\n\t\t\treturn;\n\t\tif ( this.isPreviousSelection( config ) )\n\t\t\treturn;\n\t\tif ( this.isEasySelection( config ) )\n\t\t\treturn this.addToPreviousSelection( config );\n\t\tthis.updatePreviousSelection( config.scene, config );\n\t\treturn this.createSelectionInScene( config );\n\n\t}\n\n\tcreateSelectionInScene( config ) {\n\n\t\tconst filtered = this.filter( config );\n\t\tconst { geomsByMaterial, materials } = this.getGeomAndMat( filtered );\n\t\tconst isDefMaterial = this.isDefaultMat( config );\n\t\tconst geometry = this.getMergedGeometry( geomsByMaterial, isDefMaterial );\n\t\tconst mats = isDefMaterial ? materials : config.material;\n\t\tthis.BVH.applyThreeMeshBVH( geometry );\n\t\tconst mesh = new Mesh( geometry, mats );\n\t\tthis.selected[ this.matID( config ) ].mesh = mesh;\n\t\tmesh.modelID = config.modelID;\n\t\tconfig.scene.add( mesh );\n\t\treturn mesh;\n\n\t}\n\n\tgetMergedGeometry( geomsByMaterial, hasDefaultMaterial ) {\n\n\t\treturn geomsByMaterial.length > 0\n\t\t\t? merge( geomsByMaterial, hasDefaultMaterial )\n\t\t\t: new BufferGeometry();\n\n\t}\n\n\tisConfigValid( config ) {\n\n\t\treturn ( this.isValid( config.scene ) &&\n\t\t\tthis.isValid( config.modelID ) &&\n\t\t\tthis.isValid( config.ids ) &&\n\t\t\tthis.isValid( config.removePrevious ) );\n\n\t}\n\n\tisValid( item ) {\n\n\t\treturn item !== undefined && item !== null;\n\n\t}\n\n\tgetGeomAndMat( filtered ) {\n\n\t\tconst geomsByMaterial = [];\n\t\tconst materials = [];\n\t\tfor ( const matID in filtered ) {\n\n\t\t\tconst geoms = Object.values( filtered[ matID ].geometries );\n\t\t\tif ( ! geoms.length )\n\t\t\t\tcontinue;\n\t\t\tmaterials.push( filtered[ matID ].material );\n\t\t\tif ( geoms.length > 1 )\n\t\t\t\tgeomsByMaterial.push( merge( geoms ) );\n\t\t\telse\n\t\t\t\tgeomsByMaterial.push( ...geoms );\n\n\t\t}\n\n\t\treturn {\n\t\t\tgeomsByMaterial,\n\t\t\tmaterials\n\t\t};\n\n\t}\n\n\tupdatePreviousSelection( parent, config ) {\n\n\t\tconst previous = this.selected[ this.matID( config ) ];\n\t\tif ( ! previous )\n\t\t\treturn this.newSelectionGroup( config );\n\t\tparent.remove( previous.mesh );\n\t\tconfig.removePrevious\n\t\t\t? ( previous.ids = new Set( config.ids ) )\n\t\t\t: config.ids.forEach( ( id ) => previous.ids.add( id ) );\n\n\t}\n\n\tnewSelectionGroup( config ) {\n\n\t\tthis.selected[ this.matID( config ) ] = {\n\t\t\tids: new Set( config.ids ),\n\t\t\tmesh: {}\n\t\t};\n\n\t}\n\n\tisPreviousSelection( config ) {\n\n\t\tif ( ! this.selected[ this.matID( config ) ] )\n\t\t\treturn false;\n\t\tif ( this.containsIds( config ) )\n\t\t\treturn true;\n\t\tconst previousIds = this.selected[ this.matID( config ) ].ids;\n\t\treturn JSON.stringify( config.ids ) === JSON.stringify( previousIds );\n\n\t}\n\n\tcontainsIds( config ) {\n\n\t\tconst newIds = config.ids;\n\t\tconst previous = Array.from( this.selected[ this.matID( config ) ].ids );\n\t\treturn newIds.every( ( i => v => ( i = previous.indexOf( v, i ) + 1 ) )( 0 ) );\n\n\t}\n\n\taddToPreviousSelection( config ) {\n\n\t\tconst previous = this.selected[ this.matID( config ) ];\n\t\tconst filtered = this.filter( config );\n\t\tconst geometries = Object.values( filtered ).map( ( i ) => Object.values( i.geometries ) ).flat();\n\t\tconst previousGeom = previous.mesh.geometry;\n\t\tprevious.mesh.geometry = merge( [ previousGeom, ...geometries ] );\n\t\tconfig.ids.forEach( ( id ) => previous.ids.add( id ) );\n\n\t}\n\n\tfilter( config ) {\n\n\t\tconst ids = this.selected[ this.matID( config ) ].ids;\n\t\tconst items = this.state.models[ config.modelID ].items;\n\t\tconst filtered = {};\n\t\tfor ( const matID in items ) {\n\n\t\t\tfiltered[ matID ] = {\n\t\t\t\tmaterial: items[ matID ].material,\n\t\t\t\tgeometries: this.filterGeometries( ids, items[ matID ].geometries )\n\t\t\t};\n\n\t\t}\n\n\t\treturn filtered;\n\n\t}\n\n\tfilterGeometries( selectedIDs, geometries ) {\n\n\t\tconst ids = Array.from( selectedIDs );\n\t\treturn Object.keys( geometries )\n\t\t\t.filter( ( key ) => ids.includes( parseInt( key, 10 ) ) )\n\t\t\t.reduce( ( obj, key ) => {\n\n\t\t\t\treturn {\n\t\t\t\t\t...obj,\n\t\t\t\t\t[ key ]: geometries[ key ]\n\t\t\t\t};\n\n\t\t\t}, {} );\n\n\t}\n\n\tisEasySelection( config ) {\n\n\t\tconst matID = this.matID( config );\n\t\tif ( ! config.removePrevious && ! this.isDefaultMat( config ) && this.selected[ matID ] )\n\t\t\treturn true;\n\n\t}\n\n\tisDefaultMat( config ) {\n\n\t\treturn this.matIDNoConfig( config.modelID ) === this.matID( config );\n\n\t}\n\n\tmatID( config ) {\n\n\t\tlet name;\n\t\tif ( ! config.material )\n\t\t\tname = DEFAULT;\n\t\telse\n\t\t\tname = config.material.uuid || DEFAULT;\n\t\treturn name.concat( ' - ' ).concat( config.modelID.toString() );\n\n\t}\n\n\tmatIDNoConfig( modelID, material ) {\n\n\t\tlet name = DEFAULT;\n\t\tif ( material )\n\t\t\tname = material.uuid;\n\t\treturn name.concat( ' - ' ).concat( modelID.toString() );\n\n\t}\n\n}\n\nconst IfcElements = {\n\t103090709: 'IFCPROJECT',\n\t4097777520: 'IFCSITE',\n\t4031249490: 'IFCBUILDING',\n\t3124254112: 'IFCBUILDINGSTOREY',\n\t3856911033: 'IFCSPACE',\n\t1674181508: 'IFCANNOTATION',\n\t25142252: 'IFCCONTROLLER',\n\t32344328: 'IFCBOILER',\n\t76236018: 'IFCLAMP',\n\t90941305: 'IFCPUMP',\n\t177149247: 'IFCAIRTERMINALBOX',\n\t182646315: 'IFCFLOWINSTRUMENT',\n\t263784265: 'IFCFURNISHINGELEMENT',\n\t264262732: 'IFCELECTRICGENERATOR',\n\t277319702: 'IFCAUDIOVISUALAPPLIANCE',\n\t310824031: 'IFCPIPEFITTING',\n\t331165859: 'IFCSTAIR',\n\t342316401: 'IFCDUCTFITTING',\n\t377706215: 'IFCMECHANICALFASTENER',\n\t395920057: 'IFCDOOR',\n\t402227799: 'IFCELECTRICMOTOR',\n\t413509423: 'IFCSYSTEMFURNITUREELEMENT',\n\t484807127: 'IFCEVAPORATOR',\n\t486154966: 'IFCWINDOWSTANDARDCASE',\n\t629592764: 'IFCLIGHTFIXTURE',\n\t630975310: 'IFCUNITARYCONTROLELEMENT',\n\t635142910: 'IFCCABLECARRIERFITTING',\n\t639361253: 'IFCCOIL',\n\t647756555: 'IFCFASTENER',\n\t707683696: 'IFCFLOWSTORAGEDEVICE',\n\t738039164: 'IFCPROTECTIVEDEVICE',\n\t753842376: 'IFCBEAM',\n\t812556717: 'IFCTANK',\n\t819412036: 'IFCFILTER',\n\t843113511: 'IFCCOLUMN',\n\t862014818: 'IFCELECTRICDISTRIBUTIONBOARD',\n\t900683007: 'IFCFOOTING',\n\t905975707: 'IFCCOLUMNSTANDARDCASE',\n\t926996030: 'IFCVOIDINGFEATURE',\n\t979691226: 'IFCREINFORCINGBAR',\n\t987401354: 'IFCFLOWSEGMENT',\n\t1003880860: 'IFCELECTRICTIMECONTROL',\n\t1051757585: 'IFCCABLEFITTING',\n\t1052013943: 'IFCDISTRIBUTIONCHAMBERELEMENT',\n\t1062813311: 'IFCDISTRIBUTIONCONTROLELEMENT',\n\t1073191201: 'IFCMEMBER',\n\t1095909175: 'IFCBUILDINGELEMENTPROXY',\n\t1156407060: 'IFCPLATESTANDARDCASE',\n\t1162798199: 'IFCSWITCHINGDEVICE',\n\t1329646415: 'IFCSHADINGDEVICE',\n\t1335981549: 'IFCDISCRETEACCESSORY',\n\t1360408905: 'IFCDUCTSILENCER',\n\t1404847402: 'IFCSTACKTERMINAL',\n\t1426591983: 'IFCFIRESUPPRESSIONTERMINAL',\n\t1437502449: 'IFCMEDICALDEVICE',\n\t1509553395: 'IFCFURNITURE',\n\t1529196076: 'IFCSLAB',\n\t1620046519: 'IFCTRANSPORTELEMENT',\n\t1634111441: 'IFCAIRTERMINAL',\n\t1658829314: 'IFCENERGYCONVERSIONDEVICE',\n\t1677625105: 'IFCCIVILELEMENT',\n\t1687234759: 'IFCPILE',\n\t1904799276: 'IFCELECTRICAPPLIANCE',\n\t1911478936: 'IFCMEMBERSTANDARDCASE',\n\t1945004755: 'IFCDISTRIBUTIONELEMENT',\n\t1973544240: 'IFCCOVERING',\n\t1999602285: 'IFCSPACEHEATER',\n\t2016517767: 'IFCROOF',\n\t2056796094: 'IFCAIRTOAIRHEATRECOVERY',\n\t2058353004: 'IFCFLOWCONTROLLER',\n\t2068733104: 'IFCHUMIDIFIER',\n\t2176052936: 'IFCJUNCTIONBOX',\n\t2188021234: 'IFCFLOWMETER',\n\t2223149337: 'IFCFLOWTERMINAL',\n\t2262370178: 'IFCRAILING',\n\t2272882330: 'IFCCONDENSER',\n\t2295281155: 'IFCPROTECTIVEDEVICETRIPPINGUNIT',\n\t2320036040: 'IFCREINFORCINGMESH',\n\t2347447852: 'IFCTENDONANCHOR',\n\t2391383451: 'IFCVIBRATIONISOLATOR',\n\t2391406946: 'IFCWALL',\n\t2474470126: 'IFCMOTORCONNECTION',\n\t2769231204: 'IFCVIRTUALELEMENT',\n\t2814081492: 'IFCENGINE',\n\t2906023776: 'IFCBEAMSTANDARDCASE',\n\t2938176219: 'IFCBURNER',\n\t2979338954: 'IFCBUILDINGELEMENTPART',\n\t3024970846: 'IFCRAMP',\n\t3026737570: 'IFCTUBEBUNDLE',\n\t3027962421: 'IFCSLABSTANDARDCASE',\n\t3040386961: 'IFCDISTRIBUTIONFLOWELEMENT',\n\t3053780830: 'IFCSANITARYTERMINAL',\n\t3079942009: 'IFCOPENINGSTANDARDCASE',\n\t3087945054: 'IFCALARM',\n\t3101698114: 'IFCSURFACEFEATURE',\n\t3127900445: 'IFCSLABELEMENTEDCASE',\n\t3132237377: 'IFCFLOWMOVINGDEVICE',\n\t3171933400: 'IFCPLATE',\n\t3221913625: 'IFCCOMMUNICATIONSAPPLIANCE',\n\t3242481149: 'IFCDOORSTANDARDCASE',\n\t3283111854: 'IFCRAMPFLIGHT',\n\t3296154744: 'IFCCHIMNEY',\n\t3304561284: 'IFCWINDOW',\n\t3310460725: 'IFCELECTRICFLOWSTORAGEDEVICE',\n\t3319311131: 'IFCHEATEXCHANGER',\n\t3415622556: 'IFCFAN',\n\t3420628829: 'IFCSOLARDEVICE',\n\t3493046030: 'IFCGEOGRAPHICELEMENT',\n\t3495092785: 'IFCCURTAINWALL',\n\t3508470533: 'IFCFLOWTREATMENTDEVICE',\n\t3512223829: 'IFCWALLSTANDARDCASE',\n\t3518393246: 'IFCDUCTSEGMENT',\n\t3571504051: 'IFCCOMPRESSOR',\n\t3588315303: 'IFCOPENINGELEMENT',\n\t3612865200: 'IFCPIPESEGMENT',\n\t3640358203: 'IFCCOOLINGTOWER',\n\t3651124850: 'IFCPROJECTIONELEMENT',\n\t3694346114: 'IFCOUTLET',\n\t3747195512: 'IFCEVAPORATIVECOOLER',\n\t3758799889: 'IFCCABLECARRIERSEGMENT',\n\t3824725483: 'IFCTENDON',\n\t3825984169: 'IFCTRANSFORMER',\n\t3902619387: 'IFCCHILLER',\n\t4074379575: 'IFCDAMPER',\n\t4086658281: 'IFCSENSOR',\n\t4123344466: 'IFCELEMENTASSEMBLY',\n\t4136498852: 'IFCCOOLEDBEAM',\n\t4156078855: 'IFCWALLELEMENTEDCASE',\n\t4175244083: 'IFCINTERCEPTOR',\n\t4207607924: 'IFCVALVE',\n\t4217484030: 'IFCCABLESEGMENT',\n\t4237592921: 'IFCWASTETERMINAL',\n\t4252922144: 'IFCSTAIRFLIGHT',\n\t4278956645: 'IFCFLOWFITTING',\n\t4288193352: 'IFCACTUATOR',\n\t4292641817: 'IFCUNITARYEQUIPMENT',\n\t3009204131: 'IFCGRID'\n};\n\nconst IfcTypesMap = {\n\t3821786052: 'IFCACTIONREQUEST',\n\t2296667514: 'IFCACTOR',\n\t3630933823: 'IFCACTORROLE',\n\t4288193352: 'IFCACTUATOR',\n\t2874132201: 'IFCACTUATORTYPE',\n\t618182010: 'IFCADDRESS',\n\t1635779807: 'IFCADVANCEDBREP',\n\t2603310189: 'IFCADVANCEDBREPWITHVOIDS',\n\t3406155212: 'IFCADVANCEDFACE',\n\t1634111441: 'IFCAIRTERMINAL',\n\t177149247: 'IFCAIRTERMINALBOX',\n\t1411407467: 'IFCAIRTERMINALBOXTYPE',\n\t3352864051: 'IFCAIRTERMINALTYPE',\n\t2056796094: 'IFCAIRTOAIRHEATRECOVERY',\n\t1871374353: 'IFCAIRTOAIRHEATRECOVERYTYPE',\n\t3087945054: 'IFCALARM',\n\t3001207471: 'IFCALARMTYPE',\n\t325726236: 'IFCALIGNMENT',\n\t749761778: 'IFCALIGNMENT2DHORIZONTAL',\n\t3199563722: 'IFCALIGNMENT2DHORIZONTALSEGMENT',\n\t2483840362: 'IFCALIGNMENT2DSEGMENT',\n\t3379348081: 'IFCALIGNMENT2DVERSEGCIRCULARARC',\n\t3239324667: 'IFCALIGNMENT2DVERSEGLINE',\n\t4263986512: 'IFCALIGNMENT2DVERSEGPARABOLICARC',\n\t53199957: 'IFCALIGNMENT2DVERTICAL',\n\t2029264950: 'IFCALIGNMENT2DVERTICALSEGMENT',\n\t3512275521: 'IFCALIGNMENTCURVE',\n\t1674181508: 'IFCANNOTATION',\n\t669184980: 'IFCANNOTATIONFILLAREA',\n\t639542469: 'IFCAPPLICATION',\n\t411424972: 'IFCAPPLIEDVALUE',\n\t130549933: 'IFCAPPROVAL',\n\t3869604511: 'IFCAPPROVALRELATIONSHIP',\n\t3798115385: 'IFCARBITRARYCLOSEDPROFILEDEF',\n\t1310608509: 'IFCARBITRARYOPENPROFILEDEF',\n\t2705031697: 'IFCARBITRARYPROFILEDEFWITHVOIDS',\n\t3460190687: 'IFCASSET',\n\t3207858831: 'IFCASYMMETRICISHAPEPROFILEDEF',\n\t277319702: 'IFCAUDIOVISUALAPPLIANCE',\n\t1532957894: 'IFCAUDIOVISUALAPPLIANCETYPE',\n\t4261334040: 'IFCAXIS1PLACEMENT',\n\t3125803723: 'IFCAXIS2PLACEMENT2D',\n\t2740243338: 'IFCAXIS2PLACEMENT3D',\n\t1967976161: 'IFCBSPLINECURVE',\n\t2461110595: 'IFCBSPLINECURVEWITHKNOTS',\n\t2887950389: 'IFCBSPLINESURFACE',\n\t167062518: 'IFCBSPLINESURFACEWITHKNOTS',\n\t753842376: 'IFCBEAM',\n\t2906023776: 'IFCBEAMSTANDARDCASE',\n\t819618141: 'IFCBEAMTYPE',\n\t4196446775: 'IFCBEARING',\n\t3649138523: 'IFCBEARINGTYPE',\n\t616511568: 'IFCBLOBTEXTURE',\n\t1334484129: 'IFCBLOCK',\n\t32344328: 'IFCBOILER',\n\t231477066: 'IFCBOILERTYPE',\n\t3649129432: 'IFCBOOLEANCLIPPINGRESULT',\n\t2736907675: 'IFCBOOLEANRESULT',\n\t4037036970: 'IFCBOUNDARYCONDITION',\n\t1136057603: 'IFCBOUNDARYCURVE',\n\t1560379544: 'IFCBOUNDARYEDGECONDITION',\n\t3367102660: 'IFCBOUNDARYFACECONDITION',\n\t1387855156: 'IFCBOUNDARYNODECONDITION',\n\t2069777674: 'IFCBOUNDARYNODECONDITIONWARPING',\n\t1260505505: 'IFCBOUNDEDCURVE',\n\t4182860854: 'IFCBOUNDEDSURFACE',\n\t2581212453: 'IFCBOUNDINGBOX',\n\t2713105998: 'IFCBOXEDHALFSPACE',\n\t644574406: 'IFCBRIDGE',\n\t963979645: 'IFCBRIDGEPART',\n\t4031249490: 'IFCBUILDING',\n\t3299480353: 'IFCBUILDINGELEMENT',\n\t2979338954: 'IFCBUILDINGELEMENTPART',\n\t39481116: 'IFCBUILDINGELEMENTPARTTYPE',\n\t1095909175: 'IFCBUILDINGELEMENTPROXY',\n\t1909888760: 'IFCBUILDINGELEMENTPROXYTYPE',\n\t1950629157: 'IFCBUILDINGELEMENTTYPE',\n\t3124254112: 'IFCBUILDINGSTOREY',\n\t1177604601: 'IFCBUILDINGSYSTEM',\n\t2938176219: 'IFCBURNER',\n\t2188180465: 'IFCBURNERTYPE',\n\t2898889636: 'IFCCSHAPEPROFILEDEF',\n\t635142910: 'IFCCABLECARRIERFITTING',\n\t395041908: 'IFCCABLECARRIERFITTINGTYPE',\n\t3758799889: 'IFCCABLECARRIERSEGMENT',\n\t3293546465: 'IFCCABLECARRIERSEGMENTTYPE',\n\t1051757585: 'IFCCABLEFITTING',\n\t2674252688: 'IFCCABLEFITTINGTYPE',\n\t4217484030: 'IFCCABLESEGMENT',\n\t1285652485: 'IFCCABLESEGMENTTYPE',\n\t3999819293: 'IFCCAISSONFOUNDATION',\n\t3203706013: 'IFCCAISSONFOUNDATIONTYPE',\n\t1123145078: 'IFCCARTESIANPOINT',\n\t574549367: 'IFCCARTESIANPOINTLIST',\n\t1675464909: 'IFCCARTESIANPOINTLIST2D',\n\t2059837836: 'IFCCARTESIANPOINTLIST3D',\n\t59481748: 'IFCCARTESIANTRANSFORMATIONOPERATOR',\n\t3749851601: 'IFCCARTESIANTRANSFORMATIONOPERATOR2D',\n\t3486308946: 'IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM',\n\t3331915920: 'IFCCARTESIANTRANSFORMATIONOPERATOR3D',\n\t1416205885: 'IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM',\n\t3150382593: 'IFCCENTERLINEPROFILEDEF',\n\t3902619387: 'IFCCHILLER',\n\t2951183804: 'IFCCHILLERTYPE',\n\t3296154744: 'IFCCHIMNEY',\n\t2197970202: 'IFCCHIMNEYTYPE',\n\t2611217952: 'IFCCIRCLE',\n\t2937912522: 'IFCCIRCLEHOLLOWPROFILEDEF',\n\t1383045692: 'IFCCIRCLEPROFILEDEF',\n\t1062206242: 'IFCCIRCULARARCSEGMENT2D',\n\t1677625105: 'IFCCIVILELEMENT',\n\t3893394355: 'IFCCIVILELEMENTTYPE',\n\t747523909: 'IFCCLASSIFICATION',\n\t647927063: 'IFCCLASSIFICATIONREFERENCE',\n\t2205249479: 'IFCCLOSEDSHELL',\n\t639361253: 'IFCCOIL',\n\t2301859152: 'IFCCOILTYPE',\n\t776857604: 'IFCCOLOURRGB',\n\t3285139300: 'IFCCOLOURRGBLIST',\n\t3264961684: 'IFCCOLOURSPECIFICATION',\n\t843113511: 'IFCCOLUMN',\n\t905975707: 'IFCCOLUMNSTANDARDCASE',\n\t300633059: 'IFCCOLUMNTYPE',\n\t3221913625: 'IFCCOMMUNICATIONSAPPLIANCE',\n\t400855858: 'IFCCOMMUNICATIONSAPPLIANCETYPE',\n\t2542286263: 'IFCCOMPLEXPROPERTY',\n\t3875453745: 'IFCCOMPLEXPROPERTYTEMPLATE',\n\t3732776249: 'IFCCOMPOSITECURVE',\n\t15328376: 'IFCCOMPOSITECURVEONSURFACE',\n\t2485617015: 'IFCCOMPOSITECURVESEGMENT',\n\t1485152156: 'IFCCOMPOSITEPROFILEDEF',\n\t3571504051: 'IFCCOMPRESSOR',\n\t3850581409: 'IFCCOMPRESSORTYPE',\n\t2272882330: 'IFCCONDENSER',\n\t2816379211: 'IFCCONDENSERTYPE',\n\t2510884976: 'IFCCONIC',\n\t370225590: 'IFCCONNECTEDFACESET',\n\t1981873012: 'IFCCONNECTIONCURVEGEOMETRY',\n\t2859738748: 'IFCCONNECTIONGEOMETRY',\n\t45288368: 'IFCCONNECTIONPOINTECCENTRICITY',\n\t2614616156: 'IFCCONNECTIONPOINTGEOMETRY',\n\t2732653382: 'IFCCONNECTIONSURFACEGEOMETRY',\n\t775493141: 'IFCCONNECTIONVOLUMEGEOMETRY',\n\t1959218052: 'IFCCONSTRAINT',\n\t3898045240: 'IFCCONSTRUCTIONEQUIPMENTRESOURCE',\n\t2185764099: 'IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE',\n\t1060000209: 'IFCCONSTRUCTIONMATERIALRESOURCE',\n\t4105962743: 'IFCCONSTRUCTIONMATERIALRESOURCETYPE',\n\t488727124: 'IFCCONSTRUCTIONPRODUCTRESOURCE',\n\t1525564444: 'IFCCONSTRUCTIONPRODUCTRESOURCETYPE',\n\t2559216714: 'IFCCONSTRUCTIONRESOURCE',\n\t2574617495: 'IFCCONSTRUCTIONRESOURCETYPE',\n\t3419103109: 'IFCCONTEXT',\n\t3050246964: 'IFCCONTEXTDEPENDENTUNIT',\n\t3293443760: 'IFCCONTROL',\n\t25142252: 'IFCCONTROLLER',\n\t578613899: 'IFCCONTROLLERTYPE',\n\t2889183280: 'IFCCONVERSIONBASEDUNIT',\n\t2713554722: 'IFCCONVERSIONBASEDUNITWITHOFFSET',\n\t4136498852: 'IFCCOOLEDBEAM',\n\t335055490: 'IFCCOOLEDBEAMTYPE',\n\t3640358203: 'IFCCOOLINGTOWER',\n\t2954562838: 'IFCCOOLINGTOWERTYPE',\n\t1785450214: 'IFCCOORDINATEOPERATION',\n\t1466758467: 'IFCCOORDINATEREFERENCESYSTEM',\n\t3895139033: 'IFCCOSTITEM',\n\t1419761937: 'IFCCOSTSCHEDULE',\n\t602808272: 'IFCCOSTVALUE',\n\t1973544240: 'IFCCOVERING',\n\t1916426348: 'IFCCOVERINGTYPE',\n\t3295246426: 'IFCCREWRESOURCE',\n\t1815067380: 'IFCCREWRESOURCETYPE',\n\t2506170314: 'IFCCSGPRIMITIVE3D',\n\t2147822146: 'IFCCSGSOLID',\n\t539742890: 'IFCCURRENCYRELATIONSHIP',\n\t3495092785: 'IFCCURTAINWALL',\n\t1457835157: 'IFCCURTAINWALLTYPE',\n\t2601014836: 'IFCCURVE',\n\t2827736869: 'IFCCURVEBOUNDEDPLANE',\n\t2629017746: 'IFCCURVEBOUNDEDSURFACE',\n\t1186437898: 'IFCCURVESEGMENT2D',\n\t3800577675: 'IFCCURVESTYLE',\n\t1105321065: 'IFCCURVESTYLEFONT',\n\t2367409068: 'IFCCURVESTYLEFONTANDSCALING',\n\t3510044353: 'IFCCURVESTYLEFONTPATTERN',\n\t1213902940: 'IFCCYLINDRICALSURFACE',\n\t4074379575: 'IFCDAMPER',\n\t3961806047: 'IFCDAMPERTYPE',\n\t3426335179: 'IFCDEEPFOUNDATION',\n\t1306400036: 'IFCDEEPFOUNDATIONTYPE',\n\t3632507154: 'IFCDERIVEDPROFILEDEF',\n\t1765591967: 'IFCDERIVEDUNIT',\n\t1045800335: 'IFCDERIVEDUNITELEMENT',\n\t2949456006: 'IFCDIMENSIONALEXPONENTS',\n\t32440307: 'IFCDIRECTION',\n\t1335981549: 'IFCDISCRETEACCESSORY',\n\t2635815018: 'IFCDISCRETEACCESSORYTYPE',\n\t1945343521: 'IFCDISTANCEEXPRESSION',\n\t1052013943: 'IFCDISTRIBUTIONCHAMBERELEMENT',\n\t1599208980: 'IFCDISTRIBUTIONCHAMBERELEMENTTYPE',\n\t562808652: 'IFCDISTRIBUTIONCIRCUIT',\n\t1062813311: 'IFCDISTRIBUTIONCONTROLELEMENT',\n\t2063403501: 'IFCDISTRIBUTIONCONTROLELEMENTTYPE',\n\t1945004755: 'IFCDISTRIBUTIONELEMENT',\n\t3256556792: 'IFCDISTRIBUTIONELEMENTTYPE',\n\t3040386961: 'IFCDISTRIBUTIONFLOWELEMENT',\n\t3849074793: 'IFCDISTRIBUTIONFLOWELEMENTTYPE',\n\t3041715199: 'IFCDISTRIBUTIONPORT',\n\t3205830791: 'IFCDISTRIBUTIONSYSTEM',\n\t1154170062: 'IFCDOCUMENTINFORMATION',\n\t770865208: 'IFCDOCUMENTINFORMATIONRELATIONSHIP',\n\t3732053477: 'IFCDOCUMENTREFERENCE',\n\t395920057: 'IFCDOOR',\n\t2963535650: 'IFCDOORLININGPROPERTIES',\n\t1714330368: 'IFCDOORPANELPROPERTIES',\n\t3242481149: 'IFCDOORSTANDARDCASE',\n\t526551008: 'IFCDOORSTYLE',\n\t2323601079: 'IFCDOORTYPE',\n\t445594917: 'IFCDRAUGHTINGPREDEFINEDCOLOUR',\n\t4006246654: 'IFCDRAUGHTINGPREDEFINEDCURVEFONT',\n\t342316401: 'IFCDUCTFITTING',\n\t869906466: 'IFCDUCTFITTINGTYPE',\n\t3518393246: 'IFCDUCTSEGMENT',\n\t3760055223: 'IFCDUCTSEGMENTTYPE',\n\t1360408905: 'IFCDUCTSILENCER',\n\t2030761528: 'IFCDUCTSILENCERTYPE',\n\t3900360178: 'IFCEDGE',\n\t476780140: 'IFCEDGECURVE',\n\t1472233963: 'IFCEDGELOOP',\n\t1904799276: 'IFCELECTRICAPPLIANCE',\n\t663422040: 'IFCELECTRICAPPLIANCETYPE',\n\t862014818: 'IFCELECTRICDISTRIBUTIONBOARD',\n\t2417008758: 'IFCELECTRICDISTRIBUTIONBOARDTYPE',\n\t3310460725: 'IFCELECTRICFLOWSTORAGEDEVICE',\n\t3277789161: 'IFCELECTRICFLOWSTORAGEDEVICETYPE',\n\t264262732: 'IFCELECTRICGENERATOR',\n\t1534661035: 'IFCELECTRICGENERATORTYPE',\n\t402227799: 'IFCELECTRICMOTOR',\n\t1217240411: 'IFCELECTRICMOTORTYPE',\n\t1003880860: 'IFCELECTRICTIMECONTROL',\n\t712377611: 'IFCELECTRICTIMECONTROLTYPE',\n\t1758889154: 'IFCELEMENT',\n\t4123344466: 'IFCELEMENTASSEMBLY',\n\t2397081782: 'IFCELEMENTASSEMBLYTYPE',\n\t1623761950: 'IFCELEMENTCOMPONENT',\n\t2590856083: 'IFCELEMENTCOMPONENTTYPE',\n\t1883228015: 'IFCELEMENTQUANTITY',\n\t339256511: 'IFCELEMENTTYPE',\n\t2777663545: 'IFCELEMENTARYSURFACE',\n\t1704287377: 'IFCELLIPSE',\n\t2835456948: 'IFCELLIPSEPROFILEDEF',\n\t1658829314: 'IFCENERGYCONVERSIONDEVICE',\n\t2107101300: 'IFCENERGYCONVERSIONDEVICETYPE',\n\t2814081492: 'IFCENGINE',\n\t132023988: 'IFCENGINETYPE',\n\t3747195512: 'IFCEVAPORATIVECOOLER',\n\t3174744832: 'IFCEVAPORATIVECOOLERTYPE',\n\t484807127: 'IFCEVAPORATOR',\n\t3390157468: 'IFCEVAPORATORTYPE',\n\t4148101412: 'IFCEVENT',\n\t211053100: 'IFCEVENTTIME',\n\t4024345920: 'IFCEVENTTYPE',\n\t297599258: 'IFCEXTENDEDPROPERTIES',\n\t4294318154: 'IFCEXTERNALINFORMATION',\n\t3200245327: 'IFCEXTERNALREFERENCE',\n\t1437805879: 'IFCEXTERNALREFERENCERELATIONSHIP',\n\t1209101575: 'IFCEXTERNALSPATIALELEMENT',\n\t2853485674: 'IFCEXTERNALSPATIALSTRUCTUREELEMENT',\n\t2242383968: 'IFCEXTERNALLYDEFINEDHATCHSTYLE',\n\t1040185647: 'IFCEXTERNALLYDEFINEDSURFACESTYLE',\n\t3548104201: 'IFCEXTERNALLYDEFINEDTEXTFONT',\n\t477187591: 'IFCEXTRUDEDAREASOLID',\n\t2804161546: 'IFCEXTRUDEDAREASOLIDTAPERED',\n\t2556980723: 'IFCFACE',\n\t2047409740: 'IFCFACEBASEDSURFACEMODEL',\n\t1809719519: 'IFCFACEBOUND',\n\t803316827: 'IFCFACEOUTERBOUND',\n\t3008276851: 'IFCFACESURFACE',\n\t807026263: 'IFCFACETEDBREP',\n\t3737207727: 'IFCFACETEDBREPWITHVOIDS',\n\t24185140: 'IFCFACILITY',\n\t1310830890: 'IFCFACILITYPART',\n\t4219587988: 'IFCFAILURECONNECTIONCONDITION',\n\t3415622556: 'IFCFAN',\n\t346874300: 'IFCFANTYPE',\n\t647756555: 'IFCFASTENER',\n\t2489546625: 'IFCFASTENERTYPE',\n\t2827207264: 'IFCFEATUREELEMENT',\n\t2143335405: 'IFCFEATUREELEMENTADDITION',\n\t1287392070: 'IFCFEATUREELEMENTSUBTRACTION',\n\t738692330: 'IFCFILLAREASTYLE',\n\t374418227: 'IFCFILLAREASTYLEHATCHING',\n\t315944413: 'IFCFILLAREASTYLETILES',\n\t819412036: 'IFCFILTER',\n\t1810631287: 'IFCFILTERTYPE',\n\t1426591983: 'IFCFIRESUPPRESSIONTERMINAL',\n\t4222183408: 'IFCFIRESUPPRESSIONTERMINALTYPE',\n\t2652556860: 'IFCFIXEDREFERENCESWEPTAREASOLID',\n\t2058353004: 'IFCFLOWCONTROLLER',\n\t3907093117: 'IFCFLOWCONTROLLERTYPE',\n\t4278956645: 'IFCFLOWFITTING',\n\t3198132628: 'IFCFLOWFITTINGTYPE',\n\t182646315: 'IFCFLOWINSTRUMENT',\n\t4037862832: 'IFCFLOWINSTRUMENTTYPE',\n\t2188021234: 'IFCFLOWMETER',\n\t3815607619: 'IFCFLOWMETERTYPE',\n\t3132237377: 'IFCFLOWMOVINGDEVICE',\n\t1482959167: 'IFCFLOWMOVINGDEVICETYPE',\n\t987401354: 'IFCFLOWSEGMENT',\n\t1834744321: 'IFCFLOWSEGMENTTYPE',\n\t707683696: 'IFCFLOWSTORAGEDEVICE',\n\t1339347760: 'IFCFLOWSTORAGEDEVICETYPE',\n\t2223149337: 'IFCFLOWTERMINAL',\n\t2297155007: 'IFCFLOWTERMINALTYPE',\n\t3508470533: 'IFCFLOWTREATMENTDEVICE',\n\t3009222698: 'IFCFLOWTREATMENTDEVICETYPE',\n\t900683007: 'IFCFOOTING',\n\t1893162501: 'IFCFOOTINGTYPE',\n\t263784265: 'IFCFURNISHINGELEMENT',\n\t4238390223: 'IFCFURNISHINGELEMENTTYPE',\n\t1509553395: 'IFCFURNITURE',\n\t1268542332: 'IFCFURNITURETYPE',\n\t3493046030: 'IFCGEOGRAPHICELEMENT',\n\t4095422895: 'IFCGEOGRAPHICELEMENTTYPE',\n\t987898635: 'IFCGEOMETRICCURVESET',\n\t3448662350: 'IFCGEOMETRICREPRESENTATIONCONTEXT',\n\t2453401579: 'IFCGEOMETRICREPRESENTATIONITEM',\n\t4142052618: 'IFCGEOMETRICREPRESENTATIONSUBCONTEXT',\n\t3590301190: 'IFCGEOMETRICSET',\n\t3009204131: 'IFCGRID',\n\t852622518: 'IFCGRIDAXIS',\n\t178086475: 'IFCGRIDPLACEMENT',\n\t2706460486: 'IFCGROUP',\n\t812098782: 'IFCHALFSPACESOLID',\n\t3319311131: 'IFCHEATEXCHANGER',\n\t1251058090: 'IFCHEATEXCHANGERTYPE',\n\t2068733104: 'IFCHUMIDIFIER',\n\t1806887404: 'IFCHUMIDIFIERTYPE',\n\t1484403080: 'IFCISHAPEPROFILEDEF',\n\t3905492369: 'IFCIMAGETEXTURE',\n\t3570813810: 'IFCINDEXEDCOLOURMAP',\n\t2571569899: 'IFCINDEXEDPOLYCURVE',\n\t178912537: 'IFCINDEXEDPOLYGONALFACE',\n\t2294589976: 'IFCINDEXEDPOLYGONALFACEWITHVOIDS',\n\t1437953363: 'IFCINDEXEDTEXTUREMAP',\n\t2133299955: 'IFCINDEXEDTRIANGLETEXTUREMAP',\n\t4175244083: 'IFCINTERCEPTOR',\n\t3946677679: 'IFCINTERCEPTORTYPE',\n\t3113134337: 'IFCINTERSECTIONCURVE',\n\t2391368822: 'IFCINVENTORY',\n\t3741457305: 'IFCIRREGULARTIMESERIES',\n\t3020489413: 'IFCIRREGULARTIMESERIESVALUE',\n\t2176052936: 'IFCJUNCTIONBOX',\n\t4288270099: 'IFCJUNCTIONBOXTYPE',\n\t572779678: 'IFCLSHAPEPROFILEDEF',\n\t3827777499: 'IFCLABORRESOURCE',\n\t428585644: 'IFCLABORRESOURCETYPE',\n\t1585845231: 'IFCLAGTIME',\n\t76236018: 'IFCLAMP',\n\t1051575348: 'IFCLAMPTYPE',\n\t2655187982: 'IFCLIBRARYINFORMATION',\n\t3452421091: 'IFCLIBRARYREFERENCE',\n\t4162380809: 'IFCLIGHTDISTRIBUTIONDATA',\n\t629592764: 'IFCLIGHTFIXTURE',\n\t1161773419: 'IFCLIGHTFIXTURETYPE',\n\t1566485204: 'IFCLIGHTINTENSITYDISTRIBUTION',\n\t1402838566: 'IFCLIGHTSOURCE',\n\t125510826: 'IFCLIGHTSOURCEAMBIENT',\n\t2604431987: 'IFCLIGHTSOURCEDIRECTIONAL',\n\t4266656042: 'IFCLIGHTSOURCEGONIOMETRIC',\n\t1520743889: 'IFCLIGHTSOURCEPOSITIONAL',\n\t3422422726: 'IFCLIGHTSOURCESPOT',\n\t1281925730: 'IFCLINE',\n\t3092502836: 'IFCLINESEGMENT2D',\n\t388784114: 'IFCLINEARPLACEMENT',\n\t1154579445: 'IFCLINEARPOSITIONINGELEMENT',\n\t2624227202: 'IFCLOCALPLACEMENT',\n\t1008929658: 'IFCLOOP',\n\t1425443689: 'IFCMANIFOLDSOLIDBREP',\n\t3057273783: 'IFCMAPCONVERSION',\n\t2347385850: 'IFCMAPPEDITEM',\n\t1838606355: 'IFCMATERIAL',\n\t1847130766: 'IFCMATERIALCLASSIFICATIONRELATIONSHIP',\n\t3708119000: 'IFCMATERIALCONSTITUENT',\n\t2852063980: 'IFCMATERIALCONSTITUENTSET',\n\t760658860: 'IFCMATERIALDEFINITION',\n\t2022407955: 'IFCMATERIALDEFINITIONREPRESENTATION',\n\t248100487: 'IFCMATERIALLAYER',\n\t3303938423: 'IFCMATERIALLAYERSET',\n\t1303795690: 'IFCMATERIALLAYERSETUSAGE',\n\t1847252529: 'IFCMATERIALLAYERWITHOFFSETS',\n\t2199411900: 'IFCMATERIALLIST',\n\t2235152071: 'IFCMATERIALPROFILE',\n\t164193824: 'IFCMATERIALPROFILESET',\n\t3079605661: 'IFCMATERIALPROFILESETUSAGE',\n\t3404854881: 'IFCMATERIALPROFILESETUSAGETAPERING',\n\t552965576: 'IFCMATERIALPROFILEWITHOFFSETS',\n\t3265635763: 'IFCMATERIALPROPERTIES',\n\t853536259: 'IFCMATERIALRELATIONSHIP',\n\t1507914824: 'IFCMATERIALUSAGEDEFINITION',\n\t2597039031: 'IFCMEASUREWITHUNIT',\n\t377706215: 'IFCMECHANICALFASTENER',\n\t2108223431: 'IFCMECHANICALFASTENERTYPE',\n\t1437502449: 'IFCMEDICALDEVICE',\n\t1114901282: 'IFCMEDICALDEVICETYPE',\n\t1073191201: 'IFCMEMBER',\n\t1911478936: 'IFCMEMBERSTANDARDCASE',\n\t3181161470: 'IFCMEMBERTYPE',\n\t3368373690: 'IFCMETRIC',\n\t2998442950: 'IFCMIRROREDPROFILEDEF',\n\t2706619895: 'IFCMONETARYUNIT',\n\t2474470126: 'IFCMOTORCONNECTION',\n\t977012517: 'IFCMOTORCONNECTIONTYPE',\n\t1918398963: 'IFCNAMEDUNIT',\n\t3888040117: 'IFCOBJECT',\n\t219451334: 'IFCOBJECTDEFINITION',\n\t3701648758: 'IFCOBJECTPLACEMENT',\n\t2251480897: 'IFCOBJECTIVE',\n\t4143007308: 'IFCOCCUPANT',\n\t590820931: 'IFCOFFSETCURVE',\n\t3388369263: 'IFCOFFSETCURVE2D',\n\t3505215534: 'IFCOFFSETCURVE3D',\n\t2485787929: 'IFCOFFSETCURVEBYDISTANCES',\n\t2665983363: 'IFCOPENSHELL',\n\t3588315303: 'IFCOPENINGELEMENT',\n\t3079942009: 'IFCOPENINGSTANDARDCASE',\n\t4251960020: 'IFCORGANIZATION',\n\t1411181986: 'IFCORGANIZATIONRELATIONSHIP',\n\t643959842: 'IFCORIENTATIONEXPRESSION',\n\t1029017970: 'IFCORIENTEDEDGE',\n\t144952367: 'IFCOUTERBOUNDARYCURVE',\n\t3694346114: 'IFCOUTLET',\n\t2837617999: 'IFCOUTLETTYPE',\n\t1207048766: 'IFCOWNERHISTORY',\n\t2529465313: 'IFCPARAMETERIZEDPROFILEDEF',\n\t2519244187: 'IFCPATH',\n\t1682466193: 'IFCPCURVE',\n\t2382730787: 'IFCPERFORMANCEHISTORY',\n\t3566463478: 'IFCPERMEABLECOVERINGPROPERTIES',\n\t3327091369: 'IFCPERMIT',\n\t2077209135: 'IFCPERSON',\n\t101040310: 'IFCPERSONANDORGANIZATION',\n\t3021840470: 'IFCPHYSICALCOMPLEXQUANTITY',\n\t2483315170: 'IFCPHYSICALQUANTITY',\n\t2226359599: 'IFCPHYSICALSIMPLEQUANTITY',\n\t1687234759: 'IFCPILE',\n\t1158309216: 'IFCPILETYPE',\n\t310824031: 'IFCPIPEFITTING',\n\t804291784: 'IFCPIPEFITTINGTYPE',\n\t3612865200: 'IFCPIPESEGMENT',\n\t4231323485: 'IFCPIPESEGMENTTYPE',\n\t597895409: 'IFCPIXELTEXTURE',\n\t2004835150: 'IFCPLACEMENT',\n\t603570806: 'IFCPLANARBOX',\n\t1663979128: 'IFCPLANAREXTENT',\n\t220341763: 'IFCPLANE',\n\t3171933400: 'IFCPLATE',\n\t1156407060: 'IFCPLATESTANDARDCASE',\n\t4017108033: 'IFCPLATETYPE',\n\t2067069095: 'IFCPOINT',\n\t4022376103: 'IFCPOINTONCURVE',\n\t1423911732: 'IFCPOINTONSURFACE',\n\t2924175390: 'IFCPOLYLOOP',\n\t2775532180: 'IFCPOLYGONALBOUNDEDHALFSPACE',\n\t2839578677: 'IFCPOLYGONALFACESET',\n\t3724593414: 'IFCPOLYLINE',\n\t3740093272: 'IFCPORT',\n\t1946335990: 'IFCPOSITIONINGELEMENT',\n\t3355820592: 'IFCPOSTALADDRESS',\n\t759155922: 'IFCPREDEFINEDCOLOUR',\n\t2559016684: 'IFCPREDEFINEDCURVEFONT',\n\t3727388367: 'IFCPREDEFINEDITEM',\n\t3778827333: 'IFCPREDEFINEDPROPERTIES',\n\t3967405729: 'IFCPREDEFINEDPROPERTYSET',\n\t1775413392: 'IFCPREDEFINEDTEXTFONT',\n\t677532197: 'IFCPRESENTATIONITEM',\n\t2022622350: 'IFCPRESENTATIONLAYERASSIGNMENT',\n\t1304840413: 'IFCPRESENTATIONLAYERWITHSTYLE',\n\t3119450353: 'IFCPRESENTATIONSTYLE',\n\t2417041796: 'IFCPRESENTATIONSTYLEASSIGNMENT',\n\t2744685151: 'IFCPROCEDURE',\n\t569719735: 'IFCPROCEDURETYPE',\n\t2945172077: 'IFCPROCESS',\n\t4208778838: 'IFCPRODUCT',\n\t673634403: 'IFCPRODUCTDEFINITIONSHAPE',\n\t2095639259: 'IFCPRODUCTREPRESENTATION',\n\t3958567839: 'IFCPROFILEDEF',\n\t2802850158: 'IFCPROFILEPROPERTIES',\n\t103090709: 'IFCPROJECT',\n\t653396225: 'IFCPROJECTLIBRARY',\n\t2904328755: 'IFCPROJECTORDER',\n\t3843373140: 'IFCPROJECTEDCRS',\n\t3651124850: 'IFCPROJECTIONELEMENT',\n\t2598011224: 'IFCPROPERTY',\n\t986844984: 'IFCPROPERTYABSTRACTION',\n\t871118103: 'IFCPROPERTYBOUNDEDVALUE',\n\t1680319473: 'IFCPROPERTYDEFINITION',\n\t148025276: 'IFCPROPERTYDEPENDENCYRELATIONSHIP',\n\t4166981789: 'IFCPROPERTYENUMERATEDVALUE',\n\t3710013099: 'IFCPROPERTYENUMERATION',\n\t2752243245: 'IFCPROPERTYLISTVALUE',\n\t941946838: 'IFCPROPERTYREFERENCEVALUE',\n\t1451395588: 'IFCPROPERTYSET',\n\t3357820518: 'IFCPROPERTYSETDEFINITION',\n\t492091185: 'IFCPROPERTYSETTEMPLATE',\n\t3650150729: 'IFCPROPERTYSINGLEVALUE',\n\t110355661: 'IFCPROPERTYTABLEVALUE',\n\t3521284610: 'IFCPROPERTYTEMPLATE',\n\t1482703590: 'IFCPROPERTYTEMPLATEDEFINITION',\n\t738039164: 'IFCPROTECTIVEDEVICE',\n\t2295281155: 'IFCPROTECTIVEDEVICETRIPPINGUNIT',\n\t655969474: 'IFCPROTECTIVEDEVICETRIPPINGUNITTYPE',\n\t1842657554: 'IFCPROTECTIVEDEVICETYPE',\n\t3219374653: 'IFCPROXY',\n\t90941305: 'IFCPUMP',\n\t2250791053: 'IFCPUMPTYPE',\n\t2044713172: 'IFCQUANTITYAREA',\n\t2093928680: 'IFCQUANTITYCOUNT',\n\t931644368: 'IFCQUANTITYLENGTH',\n\t2090586900: 'IFCQUANTITYSET',\n\t3252649465: 'IFCQUANTITYTIME',\n\t2405470396: 'IFCQUANTITYVOLUME',\n\t825690147: 'IFCQUANTITYWEIGHT',\n\t2262370178: 'IFCRAILING',\n\t2893384427: 'IFCRAILINGTYPE',\n\t3024970846: 'IFCRAMP',\n\t3283111854: 'IFCRAMPFLIGHT',\n\t2324767716: 'IFCRAMPFLIGHTTYPE',\n\t1469900589: 'IFCRAMPTYPE',\n\t1232101972: 'IFCRATIONALBSPLINECURVEWITHKNOTS',\n\t683857671: 'IFCRATIONALBSPLINESURFACEWITHKNOTS',\n\t2770003689: 'IFCRECTANGLEHOLLOWPROFILEDEF',\n\t3615266464: 'IFCRECTANGLEPROFILEDEF',\n\t2798486643: 'IFCRECTANGULARPYRAMID',\n\t3454111270: 'IFCRECTANGULARTRIMMEDSURFACE',\n\t3915482550: 'IFCRECURRENCEPATTERN',\n\t2433181523: 'IFCREFERENCE',\n\t4021432810: 'IFCREFERENT',\n\t3413951693: 'IFCREGULARTIMESERIES',\n\t1580146022: 'IFCREINFORCEMENTBARPROPERTIES',\n\t3765753017: 'IFCREINFORCEMENTDEFINITIONPROPERTIES',\n\t979691226: 'IFCREINFORCINGBAR',\n\t2572171363: 'IFCREINFORCINGBARTYPE',\n\t3027567501: 'IFCREINFORCINGELEMENT',\n\t964333572: 'IFCREINFORCINGELEMENTTYPE',\n\t2320036040: 'IFCREINFORCINGMESH',\n\t2310774935: 'IFCREINFORCINGMESHTYPE',\n\t160246688: 'IFCRELAGGREGATES',\n\t3939117080: 'IFCRELASSIGNS',\n\t1683148259: 'IFCRELASSIGNSTOACTOR',\n\t2495723537: 'IFCRELASSIGNSTOCONTROL',\n\t1307041759: 'IFCRELASSIGNSTOGROUP',\n\t1027710054: 'IFCRELASSIGNSTOGROUPBYFACTOR',\n\t4278684876: 'IFCRELASSIGNSTOPROCESS',\n\t2857406711: 'IFCRELASSIGNSTOPRODUCT',\n\t205026976: 'IFCRELASSIGNSTORESOURCE',\n\t1865459582: 'IFCRELASSOCIATES',\n\t4095574036: 'IFCRELASSOCIATESAPPROVAL',\n\t919958153: 'IFCRELASSOCIATESCLASSIFICATION',\n\t2728634034: 'IFCRELASSOCIATESCONSTRAINT',\n\t982818633: 'IFCRELASSOCIATESDOCUMENT',\n\t3840914261: 'IFCRELASSOCIATESLIBRARY',\n\t2655215786: 'IFCRELASSOCIATESMATERIAL',\n\t826625072: 'IFCRELCONNECTS',\n\t1204542856: 'IFCRELCONNECTSELEMENTS',\n\t3945020480: 'IFCRELCONNECTSPATHELEMENTS',\n\t4201705270: 'IFCRELCONNECTSPORTTOELEMENT',\n\t3190031847: 'IFCRELCONNECTSPORTS',\n\t2127690289: 'IFCRELCONNECTSSTRUCTURALACTIVITY',\n\t1638771189: 'IFCRELCONNECTSSTRUCTURALMEMBER',\n\t504942748: 'IFCRELCONNECTSWITHECCENTRICITY',\n\t3678494232: 'IFCRELCONNECTSWITHREALIZINGELEMENTS',\n\t3242617779: 'IFCRELCONTAINEDINSPATIALSTRUCTURE',\n\t886880790: 'IFCRELCOVERSBLDGELEMENTS',\n\t2802773753: 'IFCRELCOVERSSPACES',\n\t2565941209: 'IFCRELDECLARES',\n\t2551354335: 'IFCRELDECOMPOSES',\n\t693640335: 'IFCRELDEFINES',\n\t1462361463: 'IFCRELDEFINESBYOBJECT',\n\t4186316022: 'IFCRELDEFINESBYPROPERTIES',\n\t307848117: 'IFCRELDEFINESBYTEMPLATE',\n\t781010003: 'IFCRELDEFINESBYTYPE',\n\t3940055652: 'IFCRELFILLSELEMENT',\n\t279856033: 'IFCRELFLOWCONTROLELEMENTS',\n\t427948657: 'IFCRELINTERFERESELEMENTS',\n\t3268803585: 'IFCRELNESTS',\n\t1441486842: 'IFCRELPOSITIONS',\n\t750771296: 'IFCRELPROJECTSELEMENT',\n\t1245217292: 'IFCRELREFERENCEDINSPATIALSTRUCTURE',\n\t4122056220: 'IFCRELSEQUENCE',\n\t366585022: 'IFCRELSERVICESBUILDINGS',\n\t3451746338: 'IFCRELSPACEBOUNDARY',\n\t3523091289: 'IFCRELSPACEBOUNDARY1STLEVEL',\n\t1521410863: 'IFCRELSPACEBOUNDARY2NDLEVEL',\n\t1401173127: 'IFCRELVOIDSELEMENT',\n\t478536968: 'IFCRELATIONSHIP',\n\t816062949: 'IFCREPARAMETRISEDCOMPOSITECURVESEGMENT',\n\t1076942058: 'IFCREPRESENTATION',\n\t3377609919: 'IFCREPRESENTATIONCONTEXT',\n\t3008791417: 'IFCREPRESENTATIONITEM',\n\t1660063152: 'IFCREPRESENTATIONMAP',\n\t2914609552: 'IFCRESOURCE',\n\t2943643501: 'IFCRESOURCEAPPROVALRELATIONSHIP',\n\t1608871552: 'IFCRESOURCECONSTRAINTRELATIONSHIP',\n\t2439245199: 'IFCRESOURCELEVELRELATIONSHIP',\n\t1042787934: 'IFCRESOURCETIME',\n\t1856042241: 'IFCREVOLVEDAREASOLID',\n\t3243963512: 'IFCREVOLVEDAREASOLIDTAPERED',\n\t4158566097: 'IFCRIGHTCIRCULARCONE',\n\t3626867408: 'IFCRIGHTCIRCULARCYLINDER',\n\t2016517767: 'IFCROOF',\n\t2781568857: 'IFCROOFTYPE',\n\t2341007311: 'IFCROOT',\n\t2778083089: 'IFCROUNDEDRECTANGLEPROFILEDEF',\n\t448429030: 'IFCSIUNIT',\n\t3053780830: 'IFCSANITARYTERMINAL',\n\t1768891740: 'IFCSANITARYTERMINALTYPE',\n\t1054537805: 'IFCSCHEDULINGTIME',\n\t2157484638: 'IFCSEAMCURVE',\n\t2042790032: 'IFCSECTIONPROPERTIES',\n\t4165799628: 'IFCSECTIONREINFORCEMENTPROPERTIES',\n\t1862484736: 'IFCSECTIONEDSOLID',\n\t1290935644: 'IFCSECTIONEDSOLIDHORIZONTAL',\n\t1509187699: 'IFCSECTIONEDSPINE',\n\t4086658281: 'IFCSENSOR',\n\t1783015770: 'IFCSENSORTYPE',\n\t1329646415: 'IFCSHADINGDEVICE',\n\t4074543187: 'IFCSHADINGDEVICETYPE',\n\t867548509: 'IFCSHAPEASPECT',\n\t3982875396: 'IFCSHAPEMODEL',\n\t4240577450: 'IFCSHAPEREPRESENTATION',\n\t4124623270: 'IFCSHELLBASEDSURFACEMODEL',\n\t3692461612: 'IFCSIMPLEPROPERTY',\n\t3663146110: 'IFCSIMPLEPROPERTYTEMPLATE',\n\t4097777520: 'IFCSITE',\n\t1529196076: 'IFCSLAB',\n\t3127900445: 'IFCSLABELEMENTEDCASE',\n\t3027962421: 'IFCSLABSTANDARDCASE',\n\t2533589738: 'IFCSLABTYPE',\n\t2609359061: 'IFCSLIPPAGECONNECTIONCONDITION',\n\t3420628829: 'IFCSOLARDEVICE',\n\t1072016465: 'IFCSOLARDEVICETYPE',\n\t723233188: 'IFCSOLIDMODEL',\n\t3856911033: 'IFCSPACE',\n\t1999602285: 'IFCSPACEHEATER',\n\t1305183839: 'IFCSPACEHEATERTYPE',\n\t3812236995: 'IFCSPACETYPE',\n\t1412071761: 'IFCSPATIALELEMENT',\n\t710998568: 'IFCSPATIALELEMENTTYPE',\n\t2706606064: 'IFCSPATIALSTRUCTUREELEMENT',\n\t3893378262: 'IFCSPATIALSTRUCTUREELEMENTTYPE',\n\t463610769: 'IFCSPATIALZONE',\n\t2481509218: 'IFCSPATIALZONETYPE',\n\t451544542: 'IFCSPHERE',\n\t4015995234: 'IFCSPHERICALSURFACE',\n\t1404847402: 'IFCSTACKTERMINAL',\n\t3112655638: 'IFCSTACKTERMINALTYPE',\n\t331165859: 'IFCSTAIR',\n\t4252922144: 'IFCSTAIRFLIGHT',\n\t1039846685: 'IFCSTAIRFLIGHTTYPE',\n\t338393293: 'IFCSTAIRTYPE',\n\t682877961: 'IFCSTRUCTURALACTION',\n\t3544373492: 'IFCSTRUCTURALACTIVITY',\n\t2515109513: 'IFCSTRUCTURALANALYSISMODEL',\n\t1179482911: 'IFCSTRUCTURALCONNECTION',\n\t2273995522: 'IFCSTRUCTURALCONNECTIONCONDITION',\n\t1004757350: 'IFCSTRUCTURALCURVEACTION',\n\t4243806635: 'IFCSTRUCTURALCURVECONNECTION',\n\t214636428: 'IFCSTRUCTURALCURVEMEMBER',\n\t2445595289: 'IFCSTRUCTURALCURVEMEMBERVARYING',\n\t2757150158: 'IFCSTRUCTURALCURVEREACTION',\n\t3136571912: 'IFCSTRUCTURALITEM',\n\t1807405624: 'IFCSTRUCTURALLINEARACTION',\n\t2162789131: 'IFCSTRUCTURALLOAD',\n\t385403989: 'IFCSTRUCTURALLOADCASE',\n\t3478079324: 'IFCSTRUCTURALLOADCONFIGURATION',\n\t1252848954: 'IFCSTRUCTURALLOADGROUP',\n\t1595516126: 'IFCSTRUCTURALLOADLINEARFORCE',\n\t609421318: 'IFCSTRUCTURALLOADORRESULT',\n\t2668620305: 'IFCSTRUCTURALLOADPLANARFORCE',\n\t2473145415: 'IFCSTRUCTURALLOADSINGLEDISPLACEMENT',\n\t1973038258: 'IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION',\n\t1597423693: 'IFCSTRUCTURALLOADSINGLEFORCE',\n\t1190533807: 'IFCSTRUCTURALLOADSINGLEFORCEWARPING',\n\t2525727697: 'IFCSTRUCTURALLOADSTATIC',\n\t3408363356: 'IFCSTRUCTURALLOADTEMPERATURE',\n\t530289379: 'IFCSTRUCTURALMEMBER',\n\t1621171031: 'IFCSTRUCTURALPLANARACTION',\n\t2082059205: 'IFCSTRUCTURALPOINTACTION',\n\t734778138: 'IFCSTRUCTURALPOINTCONNECTION',\n\t1235345126: 'IFCSTRUCTURALPOINTREACTION',\n\t3689010777: 'IFCSTRUCTURALREACTION',\n\t2986769608: 'IFCSTRUCTURALRESULTGROUP',\n\t3657597509: 'IFCSTRUCTURALSURFACEACTION',\n\t1975003073: 'IFCSTRUCTURALSURFACECONNECTION',\n\t3979015343: 'IFCSTRUCTURALSURFACEMEMBER',\n\t2218152070: 'IFCSTRUCTURALSURFACEMEMBERVARYING',\n\t603775116: 'IFCSTRUCTURALSURFACEREACTION',\n\t2830218821: 'IFCSTYLEMODEL',\n\t3958052878: 'IFCSTYLEDITEM',\n\t3049322572: 'IFCSTYLEDREPRESENTATION',\n\t148013059: 'IFCSUBCONTRACTRESOURCE',\n\t4095615324: 'IFCSUBCONTRACTRESOURCETYPE',\n\t2233826070: 'IFCSUBEDGE',\n\t2513912981: 'IFCSURFACE',\n\t699246055: 'IFCSURFACECURVE',\n\t2028607225: 'IFCSURFACECURVESWEPTAREASOLID',\n\t3101698114: 'IFCSURFACEFEATURE',\n\t2809605785: 'IFCSURFACEOFLINEAREXTRUSION',\n\t4124788165: 'IFCSURFACEOFREVOLUTION',\n\t2934153892: 'IFCSURFACEREINFORCEMENTAREA',\n\t1300840506: 'IFCSURFACESTYLE',\n\t3303107099: 'IFCSURFACESTYLELIGHTING',\n\t1607154358: 'IFCSURFACESTYLEREFRACTION',\n\t1878645084: 'IFCSURFACESTYLERENDERING',\n\t846575682: 'IFCSURFACESTYLESHADING',\n\t1351298697: 'IFCSURFACESTYLEWITHTEXTURES',\n\t626085974: 'IFCSURFACETEXTURE',\n\t2247615214: 'IFCSWEPTAREASOLID',\n\t1260650574: 'IFCSWEPTDISKSOLID',\n\t1096409881: 'IFCSWEPTDISKSOLIDPOLYGONAL',\n\t230924584: 'IFCSWEPTSURFACE',\n\t1162798199: 'IFCSWITCHINGDEVICE',\n\t2315554128: 'IFCSWITCHINGDEVICETYPE',\n\t2254336722: 'IFCSYSTEM',\n\t413509423: 'IFCSYSTEMFURNITUREELEMENT',\n\t1580310250: 'IFCSYSTEMFURNITUREELEMENTTYPE',\n\t3071757647: 'IFCTSHAPEPROFILEDEF',\n\t985171141: 'IFCTABLE',\n\t2043862942: 'IFCTABLECOLUMN',\n\t531007025: 'IFCTABLEROW',\n\t812556717: 'IFCTANK',\n\t5716631: 'IFCTANKTYPE',\n\t3473067441: 'IFCTASK',\n\t1549132990: 'IFCTASKTIME',\n\t2771591690: 'IFCTASKTIMERECURRING',\n\t3206491090: 'IFCTASKTYPE',\n\t912023232: 'IFCTELECOMADDRESS',\n\t3824725483: 'IFCTENDON',\n\t2347447852: 'IFCTENDONANCHOR',\n\t3081323446: 'IFCTENDONANCHORTYPE',\n\t3663046924: 'IFCTENDONCONDUIT',\n\t2281632017: 'IFCTENDONCONDUITTYPE',\n\t2415094496: 'IFCTENDONTYPE',\n\t2387106220: 'IFCTESSELLATEDFACESET',\n\t901063453: 'IFCTESSELLATEDITEM',\n\t4282788508: 'IFCTEXTLITERAL',\n\t3124975700: 'IFCTEXTLITERALWITHEXTENT',\n\t1447204868: 'IFCTEXTSTYLE',\n\t1983826977: 'IFCTEXTSTYLEFONTMODEL',\n\t2636378356: 'IFCTEXTSTYLEFORDEFINEDFONT',\n\t1640371178: 'IFCTEXTSTYLETEXTMODEL',\n\t280115917: 'IFCTEXTURECOORDINATE',\n\t1742049831: 'IFCTEXTURECOORDINATEGENERATOR',\n\t2552916305: 'IFCTEXTUREMAP',\n\t1210645708: 'IFCTEXTUREVERTEX',\n\t3611470254: 'IFCTEXTUREVERTEXLIST',\n\t1199560280: 'IFCTIMEPERIOD',\n\t3101149627: 'IFCTIMESERIES',\n\t581633288: 'IFCTIMESERIESVALUE',\n\t1377556343: 'IFCTOPOLOGICALREPRESENTATIONITEM',\n\t1735638870: 'IFCTOPOLOGYREPRESENTATION',\n\t1935646853: 'IFCTOROIDALSURFACE',\n\t3825984169: 'IFCTRANSFORMER',\n\t1692211062: 'IFCTRANSFORMERTYPE',\n\t2595432518: 'IFCTRANSITIONCURVESEGMENT2D',\n\t1620046519: 'IFCTRANSPORTELEMENT',\n\t2097647324: 'IFCTRANSPORTELEMENTTYPE',\n\t2715220739: 'IFCTRAPEZIUMPROFILEDEF',\n\t2916149573: 'IFCTRIANGULATEDFACESET',\n\t1229763772: 'IFCTRIANGULATEDIRREGULARNETWORK',\n\t3593883385: 'IFCTRIMMEDCURVE',\n\t3026737570: 'IFCTUBEBUNDLE',\n\t1600972822: 'IFCTUBEBUNDLETYPE',\n\t1628702193: 'IFCTYPEOBJECT',\n\t3736923433: 'IFCTYPEPROCESS',\n\t2347495698: 'IFCTYPEPRODUCT',\n\t3698973494: 'IFCTYPERESOURCE',\n\t427810014: 'IFCUSHAPEPROFILEDEF',\n\t180925521: 'IFCUNITASSIGNMENT',\n\t630975310: 'IFCUNITARYCONTROLELEMENT',\n\t3179687236: 'IFCUNITARYCONTROLELEMENTTYPE',\n\t4292641817: 'IFCUNITARYEQUIPMENT',\n\t1911125066: 'IFCUNITARYEQUIPMENTTYPE',\n\t4207607924: 'IFCVALVE',\n\t728799441: 'IFCVALVETYPE',\n\t1417489154: 'IFCVECTOR',\n\t2799835756: 'IFCVERTEX',\n\t2759199220: 'IFCVERTEXLOOP',\n\t1907098498: 'IFCVERTEXPOINT',\n\t1530820697: 'IFCVIBRATIONDAMPER',\n\t3956297820: 'IFCVIBRATIONDAMPERTYPE',\n\t2391383451: 'IFCVIBRATIONISOLATOR',\n\t3313531582: 'IFCVIBRATIONISOLATORTYPE',\n\t2769231204: 'IFCVIRTUALELEMENT',\n\t891718957: 'IFCVIRTUALGRIDINTERSECTION',\n\t926996030: 'IFCVOIDINGFEATURE',\n\t2391406946: 'IFCWALL',\n\t4156078855: 'IFCWALLELEMENTEDCASE',\n\t3512223829: 'IFCWALLSTANDARDCASE',\n\t1898987631: 'IFCWALLTYPE',\n\t4237592921: 'IFCWASTETERMINAL',\n\t1133259667: 'IFCWASTETERMINALTYPE',\n\t3304561284: 'IFCWINDOW',\n\t336235671: 'IFCWINDOWLININGPROPERTIES',\n\t512836454: 'IFCWINDOWPANELPROPERTIES',\n\t486154966: 'IFCWINDOWSTANDARDCASE',\n\t1299126871: 'IFCWINDOWSTYLE',\n\t4009809668: 'IFCWINDOWTYPE',\n\t4088093105: 'IFCWORKCALENDAR',\n\t1028945134: 'IFCWORKCONTROL',\n\t4218914973: 'IFCWORKPLAN',\n\t3342526732: 'IFCWORKSCHEDULE',\n\t1236880293: 'IFCWORKTIME',\n\t2543172580: 'IFCZSHAPEPROFILEDEF',\n\t1033361043: 'IFCZONE',\n};\n\nclass PropertyManager {\n\n\tconstructor( state ) {\n\n\t\tthis.state = state;\n\n\t}\n\n\tgetExpressId( geometry, faceIndex ) {\n\n\t\tif ( ! geometry.index )\n\t\t\treturn;\n\t\tconst geoIndex = geometry.index.array;\n\t\treturn geometry.attributes[ IdAttrName ].getX( geoIndex[ 3 * faceIndex ] );\n\n\t}\n\n\tgetItemProperties( modelID, id, recursive = false ) {\n\n\t\treturn this.state.useJSON ?\n\t\t\t{\n\t\t\t\t...this.state.models[ modelID ].jsonData[ id ]\n\t\t\t} :\n\t\t\tthis.state.api.GetLine( modelID, id, recursive );\n\n\t}\n\n\tgetAllItemsOfType( modelID, type, verbose ) {\n\n\t\treturn this.state.useJSON ?\n\t\t\tthis.getAllItemsOfTypeJSON( modelID, type, verbose ) :\n\t\t\tthis.getAllItemsOfTypeWebIfcAPI( modelID, type, verbose );\n\n\t}\n\n\tgetPropertySets( modelID, elementID, recursive = false ) {\n\n\t\treturn this.state.useJSON ?\n\t\t\tthis.getPropertyJSON( modelID, elementID, recursive, PropsNames.psets ) :\n\t\t\tthis.getPropertyWebIfcAPI( modelID, elementID, recursive, PropsNames.psets );\n\n\t}\n\n\tgetTypeProperties( modelID, elementID, recursive = false ) {\n\n\t\treturn this.state.useJSON ?\n\t\t\tthis.getPropertyJSON( modelID, elementID, recursive, PropsNames.type ) :\n\t\t\tthis.getPropertyWebIfcAPI( modelID, elementID, recursive, PropsNames.type );\n\n\t}\n\n\tgetMaterialsProperties( modelID, elementID, recursive = false ) {\n\n\t\treturn this.state.useJSON ?\n\t\t\tthis.getPropertyJSON( modelID, elementID, recursive, PropsNames.materials ) :\n\t\t\tthis.getPropertyWebIfcAPI( modelID, elementID, recursive, PropsNames.materials );\n\n\t}\n\n\tgetSpatialStructure( modelID ) {\n\n\t\treturn this.state.useJSON ?\n\t\t\tthis.getSpatialStructureJSON( modelID ) :\n\t\t\tthis.getSpatialStructureWebIfcAPI( modelID );\n\n\t}\n\n\tgetSpatialStructureJSON( modelID ) {\n\n\t\tconst chunks = this.getSpatialTreeChunks( modelID );\n\t\tconst projectID = this.getAllItemsOfTypeJSON( modelID, IFCPROJECT, false )[ 0 ];\n\t\tconst project = this.newIfcProject( projectID );\n\t\tthis.getSpatialNode( modelID, project, chunks );\n\t\treturn {\n\t\t\t...project\n\t\t};\n\n\t}\n\n\tgetSpatialStructureWebIfcAPI( modelID ) {\n\n\t\tconst chunks = this.getSpatialTreeChunks( modelID );\n\t\tconst projectID = this.state.api.GetLineIDsWithType( modelID, IFCPROJECT ).get( 0 );\n\t\tconst project = this.newIfcProject( projectID );\n\t\tthis.getSpatialNode( modelID, project, chunks );\n\t\treturn project;\n\n\t}\n\n\tgetAllItemsOfTypeJSON( modelID, type, verbose ) {\n\n\t\tconst data = this.state.models[ modelID ].jsonData;\n\t\tconst typeName = IfcTypesMap[ type ];\n\t\tif ( ! typeName ) {\n\n\t\t\tthrow new Error( `Type not found: ${type}` );\n\n\t\t}\n\n\t\treturn this.filterJSONItemsByType( data, typeName, verbose );\n\n\t}\n\n\tfilterJSONItemsByType( data, typeName, verbose ) {\n\n\t\tconst result = [];\n\t\tObject.keys( data ).forEach( key => {\n\n\t\t\tconst numKey = parseInt( key );\n\t\t\tif ( data[ numKey ].type.toUpperCase() === typeName ) {\n\n\t\t\t\tresult.push( verbose ? {\n\t\t\t\t\t...data[ numKey ]\n\t\t\t\t} : numKey );\n\n\t\t\t}\n\n\t\t} );\n\t\treturn result;\n\n\t}\n\n\tgetItemsByIDJSON( modelID, ids ) {\n\n\t\tconst data = this.state.models[ modelID ].jsonData;\n\t\tconst result = [];\n\t\tids.forEach( id => result.push( {\n\t\t\t...data[ id ]\n\t\t} ) );\n\t\treturn result;\n\n\t}\n\n\tgetPropertyJSON( modelID, elementID, recursive = false, propName ) {\n\n\t\tconst resultIDs = this.getAllRelatedItemsOfTypeJSON( modelID, elementID, propName );\n\t\tconst result = this.getItemsByIDJSON( modelID, resultIDs );\n\t\tif ( recursive ) {\n\n\t\t\tresult.forEach( result => this.getJSONReferencesRecursively( modelID, result ) );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetJSONReferencesRecursively( modelID, jsonObject ) {\n\n\t\tif ( jsonObject == undefined )\n\t\t\treturn;\n\t\tconst keys = Object.keys( jsonObject );\n\t\tfor ( let i = 0; i < keys.length; i ++ ) {\n\n\t\t\tconst key = keys[ i ];\n\t\t\tthis.getJSONItem( modelID, jsonObject, key );\n\n\t\t}\n\n\t}\n\n\tgetJSONItem( modelID, jsonObject, key ) {\n\n\t\tif ( Array.isArray( jsonObject[ key ] ) ) {\n\n\t\t\treturn this.getMultipleJSONItems( modelID, jsonObject, key );\n\n\t\t}\n\n\t\tif ( jsonObject[ key ] && jsonObject[ key ].type === 5 ) {\n\n\t\t\tjsonObject[ key ] = this.getItemsByIDJSON( modelID, [ jsonObject[ key ].value ] )[ 0 ];\n\t\t\tthis.getJSONReferencesRecursively( modelID, jsonObject[ key ] );\n\n\t\t}\n\n\t}\n\n\tgetMultipleJSONItems( modelID, jsonObject, key ) {\n\n\t\tjsonObject[ key ] = jsonObject[ key ].map( ( item ) => {\n\n\t\t\tif ( item.type === 5 ) {\n\n\t\t\t\titem = this.getItemsByIDJSON( modelID, [ item.value ] )[ 0 ];\n\t\t\t\tthis.getJSONReferencesRecursively( modelID, item );\n\n\t\t\t}\n\n\t\t\treturn item;\n\n\t\t} );\n\n\t}\n\n\tgetPropertyWebIfcAPI( modelID, elementID, recursive = false, propName ) {\n\n\t\tconst propSetIds = this.getAllRelatedItemsOfTypeWebIfcAPI( modelID, elementID, propName );\n\t\treturn propSetIds.map( ( id ) => this.state.api.GetLine( modelID, id, recursive ) );\n\n\t}\n\n\tgetAllItemsOfTypeWebIfcAPI( modelID, type, verbose ) {\n\n\t\tconst items = [];\n\t\tconst lines = this.state.api.GetLineIDsWithType( modelID, type );\n\t\tfor ( let i = 0; i < lines.size(); i ++ )\n\t\t\titems.push( lines.get( i ) );\n\t\tif ( verbose )\n\t\t\treturn items.map( ( id ) => this.state.api.GetLine( modelID, id ) );\n\t\treturn items;\n\n\t}\n\n\tnewIfcProject( id ) {\n\n\t\treturn {\n\t\t\texpressID: id,\n\t\t\ttype: 'IFCPROJECT',\n\t\t\tchildren: []\n\t\t};\n\n\t}\n\n\tgetSpatialTreeChunks( modelID ) {\n\n\t\tconst treeChunks = {};\n\t\tconst json = this.state.useJSON;\n\t\tif ( json ) {\n\n\t\t\tthis.getChunksJSON( modelID, treeChunks, PropsNames.aggregates );\n\t\t\tthis.getChunksJSON( modelID, treeChunks, PropsNames.spatial );\n\n\t\t} else {\n\n\t\t\tthis.getChunksWebIfcAPI( modelID, treeChunks, PropsNames.aggregates );\n\t\t\tthis.getChunksWebIfcAPI( modelID, treeChunks, PropsNames.spatial );\n\n\t\t}\n\n\t\treturn treeChunks;\n\n\t}\n\n\tgetChunksJSON( modelID, chunks, propNames ) {\n\n\t\tconst relation = this.getAllItemsOfTypeJSON( modelID, propNames.name, true );\n\t\trelation.forEach( rel => {\n\n\t\t\tthis.saveChunk( chunks, propNames, rel );\n\n\t\t} );\n\n\t}\n\n\tgetChunksWebIfcAPI( modelID, chunks, propNames ) {\n\n\t\tconst relation = this.state.api.GetLineIDsWithType( modelID, propNames.name );\n\t\tfor ( let i = 0; i < relation.size(); i ++ ) {\n\n\t\t\tconst rel = this.state.api.GetLine( modelID, relation.get( i ), false );\n\t\t\tthis.saveChunk( chunks, propNames, rel );\n\n\t\t}\n\n\t}\n\n\tsaveChunk( chunks, propNames, rel ) {\n\n\t\tconst relating = rel[ propNames.relating ].value;\n\t\tconst related = rel[ propNames.related ].map( ( r ) => r.value );\n\t\tif ( chunks[ relating ] == undefined ) {\n\n\t\t\tchunks[ relating ] = related;\n\n\t\t} else {\n\n\t\t\tchunks[ relating ] = chunks[ relating ].concat( related );\n\n\t\t}\n\n\t}\n\n\tgetSpatialNode( modelID, node, treeChunks ) {\n\n\t\tthis.getChildren( modelID, node, treeChunks, PropsNames.aggregates );\n\t\tthis.getChildren( modelID, node, treeChunks, PropsNames.spatial );\n\n\t}\n\n\tgetChildren( modelID, node, treeChunks, propNames ) {\n\n\t\tconst children = treeChunks[ node.expressID ];\n\t\tif ( children == undefined )\n\t\t\treturn;\n\t\tconst prop = propNames.key;\n\t\tnode[ prop ] = children.map( ( child ) => {\n\n\t\t\tconst node = this.newNode( modelID, child );\n\t\t\tthis.getSpatialNode( modelID, node, treeChunks );\n\t\t\treturn node;\n\n\t\t} );\n\n\t}\n\n\tnewNode( modelID, id ) {\n\n\t\tconst typeName = this.getNodeType( modelID, id );\n\t\treturn {\n\t\t\texpressID: id,\n\t\t\ttype: typeName,\n\t\t\tchildren: []\n\t\t};\n\n\t}\n\n\tgetNodeType( modelID, id ) {\n\n\t\tif ( this.state.useJSON )\n\t\t\treturn this.state.models[ modelID ].jsonData[ id ].type;\n\t\tconst typeID = this.state.models[ modelID ].types[ id ];\n\t\treturn IfcElements[ typeID ];\n\n\t}\n\n\tgetAllRelatedItemsOfTypeJSON( modelID, id, propNames ) {\n\n\t\tconst lines = this.getAllItemsOfTypeJSON( modelID, propNames.name, true );\n\t\tconst IDs = [];\n\t\tlines.forEach( line => {\n\n\t\t\tconst isRelated = this.isRelated( id, line, propNames );\n\t\t\tif ( isRelated )\n\t\t\t\tthis.getRelated( line, propNames, IDs );\n\n\t\t} );\n\t\treturn IDs;\n\n\t}\n\n\tgetAllRelatedItemsOfTypeWebIfcAPI( modelID, id, propNames ) {\n\n\t\tconst lines = this.state.api.GetLineIDsWithType( modelID, propNames.name );\n\t\tconst IDs = [];\n\t\tfor ( let i = 0; i < lines.size(); i ++ ) {\n\n\t\t\tconst rel = this.state.api.GetLine( modelID, lines.get( i ) );\n\t\t\tconst isRelated = this.isRelated( id, rel, propNames );\n\t\t\tif ( isRelated )\n\t\t\t\tthis.getRelated( rel, propNames, IDs );\n\n\t\t}\n\n\t\treturn IDs;\n\n\t}\n\n\tgetRelated( rel, propNames, IDs ) {\n\n\t\tconst element = rel[ propNames.relating ];\n\t\tif ( ! Array.isArray( element ) )\n\t\t\tIDs.push( element.value );\n\t\telse\n\t\t\telement.forEach( ( ele ) => IDs.push( ele.value ) );\n\n\t}\n\n\tisRelated( id, rel, propNames ) {\n\n\t\tconst relatedItems = rel[ propNames.related ];\n\t\tif ( Array.isArray( relatedItems ) ) {\n\n\t\t\tconst values = relatedItems.map( ( item ) => item.value );\n\t\t\treturn values.includes( id );\n\n\t\t}\n\n\t\treturn relatedItems.value === id;\n\n\t}\n\n}\n\nclass TypeManager {\n\n\tconstructor( state ) {\n\n\t\tthis.state = state;\n\n\t}\n\n\tgetAllTypes() {\n\n\t\tfor ( const modelID in this.state.models ) {\n\n\t\t\tconst types = this.state.models[ modelID ].types;\n\t\t\tif ( Object.keys( types ).length == 0 )\n\t\t\t\tthis.getAllTypesOfModel( parseInt( modelID ) );\n\n\t\t}\n\n\t}\n\n\tgetAllTypesOfModel( modelID ) {\n\n\t\tconst elements = Object.keys( IfcElements ).map( ( e ) => parseInt( e ) );\n\t\tconst types = this.state.models[ modelID ].types;\n\t\telements.forEach( ( type ) => {\n\n\t\t\tconst lines = this.state.api.GetLineIDsWithType( modelID, type );\n\t\t\tfor ( let i = 0; i < lines.size(); i ++ )\n\t\t\t\ttypes[ lines.get( i ) ] = type;\n\n\t\t} );\n\n\t}\n\n}\n\nlet modelIdCounter = 0;\nconst nullIfcManagerErrorMessage = 'IfcManager is null!';\n\nclass IFCModel extends Mesh {\n\n\tconstructor() {\n\n\t\tsuper( ...arguments );\n\t\tthis.modelID = modelIdCounter ++;\n\t\tthis.ifcManager = null;\n\t\tthis.mesh = this;\n\n\t}\n\n\tsetIFCManager( manager ) {\n\n\t\tthis.ifcManager = manager;\n\n\t}\n\n\tsetWasmPath( path ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\tthis.ifcManager.setWasmPath( path );\n\n\t}\n\n\tclose( scene ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\tthis.ifcManager.close( this.modelID, scene );\n\n\t}\n\n\tgetExpressId( geometry, faceIndex ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\treturn this.ifcManager.getExpressId( geometry, faceIndex );\n\n\t}\n\n\tgetAllItemsOfType( type, verbose ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\treturn this.ifcManager.getAllItemsOfType( this.modelID, type, verbose );\n\n\t}\n\n\tgetItemProperties( id, recursive = false ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\treturn this.ifcManager.getItemProperties( this.modelID, id, recursive );\n\n\t}\n\n\tgetPropertySets( id, recursive = false ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\treturn this.ifcManager.getPropertySets( this.modelID, id, recursive );\n\n\t}\n\n\tgetTypeProperties( id, recursive = false ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\treturn this.ifcManager.getTypeProperties( this.modelID, id, recursive );\n\n\t}\n\n\tgetIfcType( id ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\treturn this.ifcManager.getIfcType( this.modelID, id );\n\n\t}\n\n\tgetSpatialStructure() {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\treturn this.ifcManager.getSpatialStructure( this.modelID );\n\n\t}\n\n\tgetSubset( material ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\treturn this.ifcManager.getSubset( this.modelID, material );\n\n\t}\n\n\tremoveSubset( parent, material ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\tthis.ifcManager.removeSubset( this.modelID, parent, material );\n\n\t}\n\n\tcreateSubset( config ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\tconst modelConfig = {\n\t\t\t...config,\n\t\t\tmodelID: this.modelID\n\t\t};\n\t\treturn this.ifcManager.createSubset( modelConfig );\n\n\t}\n\n\thideItems( ids ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\tthis.ifcManager.hideItems( this.modelID, ids );\n\n\t}\n\n\thideAllItems() {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\tthis.ifcManager.hideAllItems( this.modelID );\n\n\t}\n\n\tshowItems( ids ) {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\tthis.ifcManager.showItems( this.modelID, ids );\n\n\t}\n\n\tshowAllItems() {\n\n\t\tif ( this.ifcManager === null )\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\n\t\tthis.ifcManager.showAllItems( this.modelID );\n\n\t}\n\n}\n\nclass BvhManager {\n\n\tinitializeMeshBVH( computeBoundsTree, disposeBoundsTree, acceleratedRaycast ) {\n\n\t\tthis.computeBoundsTree = computeBoundsTree;\n\t\tthis.disposeBoundsTree = disposeBoundsTree;\n\t\tthis.acceleratedRaycast = acceleratedRaycast;\n\t\tthis.setupThreeMeshBVH();\n\n\t}\n\n\tapplyThreeMeshBVH( geometry ) {\n\n\t\tif ( this.computeBoundsTree )\n\t\t\tgeometry.computeBoundsTree();\n\n\t}\n\n\tsetupThreeMeshBVH() {\n\n\t\tif ( ! this.computeBoundsTree || ! this.disposeBoundsTree || ! this.acceleratedRaycast )\n\t\t\treturn;\n\t\tBufferGeometry.prototype.computeBoundsTree = this.computeBoundsTree;\n\t\tBufferGeometry.prototype.disposeBoundsTree = this.disposeBoundsTree;\n\t\tMesh.prototype.raycast = this.acceleratedRaycast;\n\n\t}\n\n}\n\nclass ItemsHider {\n\n\tconstructor( state ) {\n\n\t\tthis.modelCoordinates = {};\n\t\tthis.expressIDCoordinatesMap = {};\n\t\tthis.state = state;\n\n\t}\n\n\n\n\tprocessCoordinates( modelID ) {\n\n\t\tconst attributes = this.getAttributes( modelID );\n\t\tconst ids = Array.from( attributes.expressID.array );\n\t\tthis.expressIDCoordinatesMap[ modelID ] = {};\n\t\tfor ( let i = 0; i < ids.length; i ++ ) {\n\n\t\t\tif ( ! this.expressIDCoordinatesMap[ modelID ][ ids[ i ] ] ) {\n\n\t\t\t\tthis.expressIDCoordinatesMap[ modelID ][ ids[ i ] ] = [];\n\n\t\t\t}\n\n\t\t\tconst current = this.expressIDCoordinatesMap[ modelID ];\n\t\t\tcurrent[ ids[ i ] ].push( 3 * i );\n\n\t\t}\n\n\t\tthis.initializeCoordinates( modelID );\n\n\t}\n\n\thideItems( modelID, ids ) {\n\n\t\tthis.editCoordinates( modelID, ids, true );\n\n\t}\n\n\tshowItems( modelID, ids ) {\n\n\t\tthis.editCoordinates( modelID, ids, false );\n\n\t}\n\n\teditCoordinates( modelID, ids, hide ) {\n\n\t\tconst current = this.expressIDCoordinatesMap[ modelID ];\n\t\tconst indices = [];\n\t\tids.forEach( ( id ) => {\n\n\t\t\tif ( current[ id ] )\n\t\t\t\tindices.push( ...current[ id ] );\n\n\t\t} );\n\t\tconst coords = this.getCoordinates( modelID );\n\t\tconst initial = this.modelCoordinates[ modelID ];\n\t\tif ( hide )\n\t\t\tindices.forEach( i => coords.set( [ 0, 0, 0 ], i ) );\n\t\telse\n\t\t\tindices.forEach( i => coords.set( [ initial[ i ], initial[ i + 1 ], initial[ i + 2 ] ], i ) );\n\t\tthis.getAttributes( modelID ).position.needsUpdate = true;\n\n\t}\n\n\tshowAllItems( modelID ) {\n\n\t\tif ( this.modelCoordinates[ modelID ] ) {\n\n\t\t\tthis.resetCoordinates( modelID );\n\t\t\tthis.getAttributes( modelID ).position.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\thideAllItems( modelID ) {\n\n\t\tthis.getCoordinates( modelID ).fill( 0 );\n\t\tthis.getAttributes( modelID ).position.needsUpdate = true;\n\n\t}\n\n\tinitializeCoordinates( modelID ) {\n\n\t\tconst coordinates = this.getCoordinates( modelID );\n\t\tif ( ! this.modelCoordinates[ modelID ] ) {\n\n\t\t\tthis.modelCoordinates[ modelID ] = new Float32Array( coordinates );\n\n\t\t}\n\n\t}\n\n\tresetCoordinates( modelID ) {\n\n\t\tconst initial = this.modelCoordinates[ modelID ];\n\t\tthis.getCoordinates( modelID ).set( initial );\n\n\t}\n\n\tgetCoordinates( modelID ) {\n\n\t\treturn this.getAttributes( modelID ).position.array;\n\n\t}\n\n\tgetAttributes( modelID ) {\n\n\t\treturn this.state.models[ modelID ].mesh.geometry.attributes;\n\n\t}\n\n}\n\nclass IFCManager {\n\n\tconstructor() {\n\n\t\tthis.state = {\n\t\t\tmodels: [],\n\t\t\tapi: new IfcAPI(),\n\t\t\tuseJSON: false\n\t\t};\n\t\tthis.BVH = new BvhManager();\n\t\tthis.parser = new IFCParser( this.state, this.BVH );\n\t\tthis.subsets = new SubsetManager( this.state, this.BVH );\n\t\tthis.properties = new PropertyManager( this.state );\n\t\tthis.types = new TypeManager( this.state );\n\t\tthis.hider = new ItemsHider( this.state );\n\n\t}\n\n\tasync parse( buffer ) {\n\n\t\tconst mesh = await this.parser.parse( buffer );\n\t\tthis.state.useJSON ? this.disposeMemory() : this.types.getAllTypes();\n\t\tthis.hider.processCoordinates( mesh.modelID );\n\t\tconst model = new IFCModel( mesh.geometry, mesh.material );\n\t\tmodel.setIFCManager( this );\n\t\treturn model;\n\n\t}\n\n\tsetWasmPath( path ) {\n\n\t\tthis.state.api.SetWasmPath( path );\n\n\t}\n\n\tapplyWebIfcConfig( settings ) {\n\n\t\tthis.state.webIfcSettings = settings;\n\n\t}\n\n\tuseJSONData( useJSON = true ) {\n\n\t\tthis.state.useJSON = useJSON;\n\t\tthis.disposeMemory();\n\n\t}\n\n\taddModelJSONData( modelID, data ) {\n\n\t\tconst model = this.state.models[ modelID ];\n\t\tif ( model ) {\n\n\t\t\tmodel.jsonData = data;\n\n\t\t}\n\n\t}\n\n\tdisposeMemory() {\n\n\t\tthis.state.api = null;\n\t\tthis.state.api = new IfcAPI();\n\n\t}\n\n\tsetupThreeMeshBVH( computeBoundsTree, disposeBoundsTree, acceleratedRaycast ) {\n\n\t\tthis.BVH.initializeMeshBVH( computeBoundsTree, disposeBoundsTree, acceleratedRaycast );\n\n\t}\n\n\tclose( modelID, scene ) {\n\n\t\tthis.state.api.CloseModel( modelID );\n\t\tif ( scene ) {\n\n\t\t\tscene.remove( this.state.models[ modelID ].mesh );\n\n\t\t}\n\n\t\tdelete this.state.models[ modelID ];\n\n\t}\n\n\tgetExpressId( geometry, faceIndex ) {\n\n\t\treturn this.properties.getExpressId( geometry, faceIndex );\n\n\t}\n\n\tgetAllItemsOfType( modelID, type, verbose ) {\n\n\t\treturn this.properties.getAllItemsOfType( modelID, type, verbose );\n\n\t}\n\n\tgetItemProperties( modelID, id, recursive = false ) {\n\n\t\treturn this.properties.getItemProperties( modelID, id, recursive );\n\n\t}\n\n\tgetPropertySets( modelID, id, recursive = false ) {\n\n\t\treturn this.properties.getPropertySets( modelID, id, recursive );\n\n\t}\n\n\tgetTypeProperties( modelID, id, recursive = false ) {\n\n\t\treturn this.properties.getTypeProperties( modelID, id, recursive );\n\n\t}\n\n\tgetMaterialsProperties( modelID, id, recursive = false ) {\n\n\t\treturn this.properties.getMaterialsProperties( modelID, id, recursive );\n\n\t}\n\n\tgetIfcType( modelID, id ) {\n\n\t\tconst typeID = this.state.models[ modelID ].types[ id ];\n\t\treturn IfcElements[ typeID ];\n\n\t}\n\n\tgetSpatialStructure( modelID ) {\n\n\t\treturn this.properties.getSpatialStructure( modelID );\n\n\t}\n\n\tgetSubset( modelID, material ) {\n\n\t\treturn this.subsets.getSubset( modelID, material );\n\n\t}\n\n\tremoveSubset( modelID, parent, material ) {\n\n\t\tthis.subsets.removeSubset( modelID, parent, material );\n\n\t}\n\n\tcreateSubset( config ) {\n\n\t\treturn this.subsets.createSubset( config );\n\n\t}\n\n\thideItems( modelID, ids ) {\n\n\t\tthis.hider.hideItems( modelID, ids );\n\n\t}\n\n\thideAllItems( modelID ) {\n\n\t\tthis.hider.hideAllItems( modelID );\n\n\t}\n\n\tshowItems( modelID, ids ) {\n\n\t\tthis.hider.showItems( modelID, ids );\n\n\t}\n\n\tshowAllItems( modelID ) {\n\n\t\tthis.hider.showAllItems( modelID );\n\n\t}\n\n}\n\nclass IFCLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.ifcManager = new IFCManager();\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, async function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tif ( typeof buffer == 'string' ) {\n\n\t\t\t\t\tthrow new Error( 'IFC files must be given as a buffer!' );\n\n\t\t\t\t}\n\n\t\t\t\tonLoad( await scope.parse( buffer ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( buffer ) {\n\n\t\treturn this.ifcManager.parse( buffer );\n\n\t}\n\n}\n\nexport { IFCLoader };\n//# sourceMappingURL=IFCLoader.js.map\n"],"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__require","x","require","Error","__commonJS","cb","mod","keys","exports","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","done","then","apply","require_crypto","require_web_ifc","module","WebIFCWasm2","_scriptDir","document","currentScript","src","__filename","WebIFCWasm3","readyPromiseResolve","readyPromiseReject","Module","moduleOverrides","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","read_","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","dirname","__dirname","filename","binary","ret","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","arguments","quit","print","console","log","warn","error","printErr","self","location","href","indexOf","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","out","bind","err","STACK_ALIGN","alignMemory","size","factor","Math","ceil","wasmBinary","noExitRuntime","wasmMemory","setTempRet0","WebAssembly","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","writeArrayToMemory","array","buffer2","set","writeAsciiToMemory","dontAddNull","alignUp","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","FS","init","initialized","TTY","preMain","ignorePermissions","exitRuntime","postRun","addOnPostRun","unshift","runDependencies","runDependencyWatcher","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","clearInterval","callback","what","RuntimeError","hasPrefix","prefix","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","tempDouble","tempI64","wasmBinaryFile","WasmPath","getBinary","err2","getBinaryPromise","fetch","credentials","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module2","exports3","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateAsync","instantiateStreaming","result","exports2","callbacks","func","arg","get","dynCallLegacy","sig","args","concat","dynCall","___assert_fail","line","setErrNo","___errno_location","PATH","splitPath","splitPathRe","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","charAt","trailingSlash","split","filter","p","join","root","dir","basename","lastSlash","extname","paths","Array","join2","l","r","getRandomDevice","crypto","randomBuffer","getRandomValues","crypto_module","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","push","ttys","shutdown","register","dev","ops","input","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","flush","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","BUFSIZE","Buffer","alloc","readSync","stdin","fd","toString","prompt","readline","intArrayFromString","val","default_tty1_ops","mmapAlloc","alignedSize","_malloc","MEMFS","ops_table","mount","createNode","parent","name2","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","max","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","name","entries","key2","newname","oldpath","position","canOwn","whence","address","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","object","this","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","syncfs","populate","completed","doCallback","errored","forEach","type","pseudo","mountRoot","unmount","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","message","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","writeFile","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","createDevice","createSpecialDirectories","createStandardStreams","ensureErrnoError","setErrno","errno2","constructor","code","stack","staticInit","fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","doXHR","xhr2","setRequestHeader","overrideMimeType","lazyArray2","_length","_chunkSize","lazyArray","defineProperties","fn","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","dep","processData","byteArray","finish","byteArray2","handled","plugin","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","db","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","umask","calculateAt","dirfd","dirstream","doStat","abs","floor","getTime","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","___sys_fcntl64","___sys_ioctl","op","argp","___sys_open","tupleRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters2","myTypeConverters","registerType","typeConverters","unregisteredTypes","registered","dt","__embind_finalize_value_array","rawTupleType","reg","elements","elementsLength","elementTypes","map","elt","getterReturnType","setterArgumentType","rawConstructor","rawDestructor","elementTypes2","getterContext","setter","setterContext","o","rv","destructorFunction","structRegistrations","__embind_finalize_value_object","structType","fieldRecords","fields","fieldTypes","field","fieldTypes2","fieldName","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","shallowCopyInternalPointer","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","getInstanceTypeName","handle","finalizationGroup","detachFinalizer","runDestructor","releaseClassHandle","toDelete","attachFinalizer","FinalizationGroup","handle2","iter","unregister","ClassHandle_clone","clone","getPrototypeOf","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","record","hasSmartPtrType","hasSmartPtr","RegisteredPointer_fromWireType","rawPointer","getPointee","destructor","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","classType","argTypes","new_","argumentList","dummy","craftInvokerFunction","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","invokerFunction","__embind_register_class_function","rawInvoker","context","isPureVirtual","unboundTypesHandler","method","className","memberFunction","emval_free_list","emval_handle_array","__emval_decref","refcount","count_emval_handles","get_first_emval","init_emval","__embind_register_emval","v","t","floatReadValueFromPointer","__embind_register_float","__embind_register_function","argTypes2","invokerArgsArray","integerReadValueFromPointer","signed","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","decodeStartPtr","currentBytePtr","maxRead","stringSegment","getLength","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","__embind_register_value_array","constructorSignature","__embind_register_value_array_element","getterSignature","setterSignature","__embind_register_value_object","__embind_register_value_object_field","__embind_register_void","isVoid","requireHandle","requireRegisteredType","impl","__emval_as","returnType","destructorsRef","rd","__emval_lookupTypes","__emval_call","argv","_emscripten_get_now","emval_symbols","getStringOrSymbol","symbol","emval_get_global","globalThis","__emval_get_global","__emval_get_property","__emval_incref","__emval_instanceof","__emval_is_number","__emval_new_array","__emval_new_cstring","__emval_new_object","__emval_run_destructors","__emval_set_property","__emval_take_value","_abort","dateNow","performance","_emscripten_get_now_is_monotonic","_clock_gettime","clk_id","tp","_emscripten_memcpy_big","dest","num","copyWithin","_emscripten_get_heap_size","emscripten_realloc_buffer","grow","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","minHeapSize","cutDown","overGrownHeapSize","replacement","ENV","getExecutableName","getEnvStrings","strings","lang","navigator","languages","env","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_read","pnum","_fd_seek","offset_low","offset_high","newOffset","HIGH_OFFSET","DOUBLE_LIMIT","_fd_write","_setTempRet0","$i","__isLeapYear","year","__arraySum","index","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","_strftime","s","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","firstSundayUntilEndJanuary","daysDifference","firstMonday","firstMondayUntilEndJanuary","off","ahead","bytes","_strftime_l","readMode","writeMode","stringy","u8array","numBytesWritten","___wasm_call_ctors","calledRun","callMain","entryFunction","argc","exit","toLog","run","doRun","shouldRunNow","setTimeout","implicit","runCaller","ready","define","IFCACTIONREQUEST","IFCACTOR","IFCACTORROLE","IFCACTUATOR","IFCACTUATORTYPE","IFCADDRESS","IFCADVANCEDBREP","IFCADVANCEDBREPWITHVOIDS","IFCADVANCEDFACE","IFCAIRTERMINAL","IFCAIRTERMINALBOX","IFCAIRTERMINALBOXTYPE","IFCAIRTERMINALTYPE","IFCAIRTOAIRHEATRECOVERY","IFCAIRTOAIRHEATRECOVERYTYPE","IFCALARM","IFCALARMTYPE","IFCALIGNMENT","IFCALIGNMENT2DHORIZONTAL","IFCALIGNMENT2DHORIZONTALSEGMENT","IFCALIGNMENT2DSEGMENT","IFCALIGNMENT2DVERSEGCIRCULARARC","IFCALIGNMENT2DVERSEGLINE","IFCALIGNMENT2DVERSEGPARABOLICARC","IFCALIGNMENT2DVERTICAL","IFCALIGNMENT2DVERTICALSEGMENT","IFCALIGNMENTCURVE","IFCANNOTATION","IFCANNOTATIONFILLAREA","IFCAPPLICATION","IFCAPPLIEDVALUE","IFCAPPROVAL","IFCAPPROVALRELATIONSHIP","IFCARBITRARYCLOSEDPROFILEDEF","IFCARBITRARYOPENPROFILEDEF","IFCARBITRARYPROFILEDEFWITHVOIDS","IFCASSET","IFCASYMMETRICISHAPEPROFILEDEF","IFCAUDIOVISUALAPPLIANCE","IFCAUDIOVISUALAPPLIANCETYPE","IFCAXIS1PLACEMENT","IFCAXIS2PLACEMENT2D","IFCAXIS2PLACEMENT3D","IFCBSPLINECURVE","IFCBSPLINECURVEWITHKNOTS","IFCBSPLINESURFACE","IFCBSPLINESURFACEWITHKNOTS","IFCBEAM","IFCBEAMSTANDARDCASE","IFCBEAMTYPE","IFCBEARING","IFCBEARINGTYPE","IFCBLOBTEXTURE","IFCBLOCK","IFCBOILER","IFCBOILERTYPE","IFCBOOLEANCLIPPINGRESULT","IFCBOOLEANRESULT","IFCBOUNDARYCONDITION","IFCBOUNDARYCURVE","IFCBOUNDARYEDGECONDITION","IFCBOUNDARYFACECONDITION","IFCBOUNDARYNODECONDITION","IFCBOUNDARYNODECONDITIONWARPING","IFCBOUNDEDCURVE","IFCBOUNDEDSURFACE","IFCBOUNDINGBOX","IFCBOXEDHALFSPACE","IFCBRIDGE","IFCBRIDGEPART","IFCBUILDING","IFCBUILDINGELEMENT","IFCBUILDINGELEMENTPART","IFCBUILDINGELEMENTPARTTYPE","IFCBUILDINGELEMENTPROXY","IFCBUILDINGELEMENTPROXYTYPE","IFCBUILDINGELEMENTTYPE","IFCBUILDINGSTOREY","IFCBUILDINGSYSTEM","IFCBURNER","IFCBURNERTYPE","IFCCSHAPEPROFILEDEF","IFCCABLECARRIERFITTING","IFCCABLECARRIERFITTINGTYPE","IFCCABLECARRIERSEGMENT","IFCCABLECARRIERSEGMENTTYPE","IFCCABLEFITTING","IFCCABLEFITTINGTYPE","IFCCABLESEGMENT","IFCCABLESEGMENTTYPE","IFCCAISSONFOUNDATION","IFCCAISSONFOUNDATIONTYPE","IFCCARTESIANPOINT","IFCCARTESIANPOINTLIST","IFCCARTESIANPOINTLIST2D","IFCCARTESIANPOINTLIST3D","IFCCARTESIANTRANSFORMATIONOPERATOR","IFCCARTESIANTRANSFORMATIONOPERATOR2D","IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM","IFCCARTESIANTRANSFORMATIONOPERATOR3D","IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM","IFCCENTERLINEPROFILEDEF","IFCCHILLER","IFCCHILLERTYPE","IFCCHIMNEY","IFCCHIMNEYTYPE","IFCCIRCLE","IFCCIRCLEHOLLOWPROFILEDEF","IFCCIRCLEPROFILEDEF","IFCCIRCULARARCSEGMENT2D","IFCCIVILELEMENT","IFCCIVILELEMENTTYPE","IFCCLASSIFICATION","IFCCLASSIFICATIONREFERENCE","IFCCLOSEDSHELL","IFCCOIL","IFCCOILTYPE","IFCCOLOURRGB","IFCCOLOURRGBLIST","IFCCOLOURSPECIFICATION","IFCCOLUMN","IFCCOLUMNSTANDARDCASE","IFCCOLUMNTYPE","IFCCOMMUNICATIONSAPPLIANCE","IFCCOMMUNICATIONSAPPLIANCETYPE","IFCCOMPLEXPROPERTY","IFCCOMPLEXPROPERTYTEMPLATE","IFCCOMPOSITECURVE","IFCCOMPOSITECURVEONSURFACE","IFCCOMPOSITECURVESEGMENT","IFCCOMPOSITEPROFILEDEF","IFCCOMPRESSOR","IFCCOMPRESSORTYPE","IFCCONDENSER","IFCCONDENSERTYPE","IFCCONIC","IFCCONNECTEDFACESET","IFCCONNECTIONCURVEGEOMETRY","IFCCONNECTIONGEOMETRY","IFCCONNECTIONPOINTECCENTRICITY","IFCCONNECTIONPOINTGEOMETRY","IFCCONNECTIONSURFACEGEOMETRY","IFCCONNECTIONVOLUMEGEOMETRY","IFCCONSTRAINT","IFCCONSTRUCTIONEQUIPMENTRESOURCE","IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE","IFCCONSTRUCTIONMATERIALRESOURCE","IFCCONSTRUCTIONMATERIALRESOURCETYPE","IFCCONSTRUCTIONPRODUCTRESOURCE","IFCCONSTRUCTIONPRODUCTRESOURCETYPE","IFCCONSTRUCTIONRESOURCE","IFCCONSTRUCTIONRESOURCETYPE","IFCCONTEXT","IFCCONTEXTDEPENDENTUNIT","IFCCONTROL","IFCCONTROLLER","IFCCONTROLLERTYPE","IFCCONVERSIONBASEDUNIT","IFCCONVERSIONBASEDUNITWITHOFFSET","IFCCOOLEDBEAM","IFCCOOLEDBEAMTYPE","IFCCOOLINGTOWER","IFCCOOLINGTOWERTYPE","IFCCOORDINATEOPERATION","IFCCOORDINATEREFERENCESYSTEM","IFCCOSTITEM","IFCCOSTSCHEDULE","IFCCOSTVALUE","IFCCOVERING","IFCCOVERINGTYPE","IFCCREWRESOURCE","IFCCREWRESOURCETYPE","IFCCSGPRIMITIVE3D","IFCCSGSOLID","IFCCURRENCYRELATIONSHIP","IFCCURTAINWALL","IFCCURTAINWALLTYPE","IFCCURVE","IFCCURVEBOUNDEDPLANE","IFCCURVEBOUNDEDSURFACE","IFCCURVESEGMENT2D","IFCCURVESTYLE","IFCCURVESTYLEFONT","IFCCURVESTYLEFONTANDSCALING","IFCCURVESTYLEFONTPATTERN","IFCCYLINDRICALSURFACE","IFCDAMPER","IFCDAMPERTYPE","IFCDEEPFOUNDATION","IFCDEEPFOUNDATIONTYPE","IFCDERIVEDPROFILEDEF","IFCDERIVEDUNIT","IFCDERIVEDUNITELEMENT","IFCDIMENSIONALEXPONENTS","IFCDIRECTION","IFCDISCRETEACCESSORY","IFCDISCRETEACCESSORYTYPE","IFCDISTANCEEXPRESSION","IFCDISTRIBUTIONCHAMBERELEMENT","IFCDISTRIBUTIONCHAMBERELEMENTTYPE","IFCDISTRIBUTIONCIRCUIT","IFCDISTRIBUTIONCONTROLELEMENT","IFCDISTRIBUTIONCONTROLELEMENTTYPE","IFCDISTRIBUTIONELEMENT","IFCDISTRIBUTIONELEMENTTYPE","IFCDISTRIBUTIONFLOWELEMENT","IFCDISTRIBUTIONFLOWELEMENTTYPE","IFCDISTRIBUTIONPORT","IFCDISTRIBUTIONSYSTEM","IFCDOCUMENTINFORMATION","IFCDOCUMENTINFORMATIONRELATIONSHIP","IFCDOCUMENTREFERENCE","IFCDOOR","IFCDOORLININGPROPERTIES","IFCDOORPANELPROPERTIES","IFCDOORSTANDARDCASE","IFCDOORSTYLE","IFCDOORTYPE","IFCDRAUGHTINGPREDEFINEDCOLOUR","IFCDRAUGHTINGPREDEFINEDCURVEFONT","IFCDUCTFITTING","IFCDUCTFITTINGTYPE","IFCDUCTSEGMENT","IFCDUCTSEGMENTTYPE","IFCDUCTSILENCER","IFCDUCTSILENCERTYPE","IFCEDGE","IFCEDGECURVE","IFCEDGELOOP","IFCELECTRICAPPLIANCE","IFCELECTRICAPPLIANCETYPE","IFCELECTRICDISTRIBUTIONBOARD","IFCELECTRICDISTRIBUTIONBOARDTYPE","IFCELECTRICFLOWSTORAGEDEVICE","IFCELECTRICFLOWSTORAGEDEVICETYPE","IFCELECTRICGENERATOR","IFCELECTRICGENERATORTYPE","IFCELECTRICMOTOR","IFCELECTRICMOTORTYPE","IFCELECTRICTIMECONTROL","IFCELECTRICTIMECONTROLTYPE","IFCELEMENT","IFCELEMENTASSEMBLY","IFCELEMENTASSEMBLYTYPE","IFCELEMENTCOMPONENT","IFCELEMENTCOMPONENTTYPE","IFCELEMENTQUANTITY","IFCELEMENTTYPE","IFCELEMENTARYSURFACE","IFCELLIPSE","IFCELLIPSEPROFILEDEF","IFCENERGYCONVERSIONDEVICE","IFCENERGYCONVERSIONDEVICETYPE","IFCENGINE","IFCENGINETYPE","IFCEVAPORATIVECOOLER","IFCEVAPORATIVECOOLERTYPE","IFCEVAPORATOR","IFCEVAPORATORTYPE","IFCEVENT","IFCEVENTTIME","IFCEVENTTYPE","IFCEXTENDEDPROPERTIES","IFCEXTERNALINFORMATION","IFCEXTERNALREFERENCE","IFCEXTERNALREFERENCERELATIONSHIP","IFCEXTERNALSPATIALELEMENT","IFCEXTERNALSPATIALSTRUCTUREELEMENT","IFCEXTERNALLYDEFINEDHATCHSTYLE","IFCEXTERNALLYDEFINEDSURFACESTYLE","IFCEXTERNALLYDEFINEDTEXTFONT","IFCEXTRUDEDAREASOLID","IFCEXTRUDEDAREASOLIDTAPERED","IFCFACE","IFCFACEBASEDSURFACEMODEL","IFCFACEBOUND","IFCFACEOUTERBOUND","IFCFACESURFACE","IFCFACETEDBREP","IFCFACETEDBREPWITHVOIDS","IFCFACILITY","IFCFACILITYPART","IFCFAILURECONNECTIONCONDITION","IFCFAN","IFCFANTYPE","IFCFASTENER","IFCFASTENERTYPE","IFCFEATUREELEMENT","IFCFEATUREELEMENTADDITION","IFCFEATUREELEMENTSUBTRACTION","IFCFILLAREASTYLE","IFCFILLAREASTYLEHATCHING","IFCFILLAREASTYLETILES","IFCFILTER","IFCFILTERTYPE","IFCFIRESUPPRESSIONTERMINAL","IFCFIRESUPPRESSIONTERMINALTYPE","IFCFIXEDREFERENCESWEPTAREASOLID","IFCFLOWCONTROLLER","IFCFLOWCONTROLLERTYPE","IFCFLOWFITTING","IFCFLOWFITTINGTYPE","IFCFLOWINSTRUMENT","IFCFLOWINSTRUMENTTYPE","IFCFLOWMETER","IFCFLOWMETERTYPE","IFCFLOWMOVINGDEVICE","IFCFLOWMOVINGDEVICETYPE","IFCFLOWSEGMENT","IFCFLOWSEGMENTTYPE","IFCFLOWSTORAGEDEVICE","IFCFLOWSTORAGEDEVICETYPE","IFCFLOWTERMINAL","IFCFLOWTERMINALTYPE","IFCFLOWTREATMENTDEVICE","IFCFLOWTREATMENTDEVICETYPE","IFCFOOTING","IFCFOOTINGTYPE","IFCFURNISHINGELEMENT","IFCFURNISHINGELEMENTTYPE","IFCFURNITURE","IFCFURNITURETYPE","IFCGEOGRAPHICELEMENT","IFCGEOGRAPHICELEMENTTYPE","IFCGEOMETRICCURVESET","IFCGEOMETRICREPRESENTATIONCONTEXT","IFCGEOMETRICREPRESENTATIONITEM","IFCGEOMETRICREPRESENTATIONSUBCONTEXT","IFCGEOMETRICSET","IFCGRID","IFCGRIDAXIS","IFCGRIDPLACEMENT","IFCGROUP","IFCHALFSPACESOLID","IFCHEATEXCHANGER","IFCHEATEXCHANGERTYPE","IFCHUMIDIFIER","IFCHUMIDIFIERTYPE","IFCISHAPEPROFILEDEF","IFCIMAGETEXTURE","IFCINDEXEDCOLOURMAP","IFCINDEXEDPOLYCURVE","IFCINDEXEDPOLYGONALFACE","IFCINDEXEDPOLYGONALFACEWITHVOIDS","IFCINDEXEDTEXTUREMAP","IFCINDEXEDTRIANGLETEXTUREMAP","IFCINTERCEPTOR","IFCINTERCEPTORTYPE","IFCINTERSECTIONCURVE","IFCINVENTORY","IFCIRREGULARTIMESERIES","IFCIRREGULARTIMESERIESVALUE","IFCJUNCTIONBOX","IFCJUNCTIONBOXTYPE","IFCLSHAPEPROFILEDEF","IFCLABORRESOURCE","IFCLABORRESOURCETYPE","IFCLAGTIME","IFCLAMP","IFCLAMPTYPE","IFCLIBRARYINFORMATION","IFCLIBRARYREFERENCE","IFCLIGHTDISTRIBUTIONDATA","IFCLIGHTFIXTURE","IFCLIGHTFIXTURETYPE","IFCLIGHTINTENSITYDISTRIBUTION","IFCLIGHTSOURCE","IFCLIGHTSOURCEAMBIENT","IFCLIGHTSOURCEDIRECTIONAL","IFCLIGHTSOURCEGONIOMETRIC","IFCLIGHTSOURCEPOSITIONAL","IFCLIGHTSOURCESPOT","IFCLINE","IFCLINESEGMENT2D","IFCLINEARPLACEMENT","IFCLINEARPOSITIONINGELEMENT","IFCLOCALPLACEMENT","IFCLOOP","IFCMANIFOLDSOLIDBREP","IFCMAPCONVERSION","IFCMAPPEDITEM","IFCMATERIAL","IFCMATERIALCLASSIFICATIONRELATIONSHIP","IFCMATERIALCONSTITUENT","IFCMATERIALCONSTITUENTSET","IFCMATERIALDEFINITION","IFCMATERIALDEFINITIONREPRESENTATION","IFCMATERIALLAYER","IFCMATERIALLAYERSET","IFCMATERIALLAYERSETUSAGE","IFCMATERIALLAYERWITHOFFSETS","IFCMATERIALLIST","IFCMATERIALPROFILE","IFCMATERIALPROFILESET","IFCMATERIALPROFILESETUSAGE","IFCMATERIALPROFILESETUSAGETAPERING","IFCMATERIALPROFILEWITHOFFSETS","IFCMATERIALPROPERTIES","IFCMATERIALRELATIONSHIP","IFCMATERIALUSAGEDEFINITION","IFCMEASUREWITHUNIT","IFCMECHANICALFASTENER","IFCMECHANICALFASTENERTYPE","IFCMEDICALDEVICE","IFCMEDICALDEVICETYPE","IFCMEMBER","IFCMEMBERSTANDARDCASE","IFCMEMBERTYPE","IFCMETRIC","IFCMIRROREDPROFILEDEF","IFCMONETARYUNIT","IFCMOTORCONNECTION","IFCMOTORCONNECTIONTYPE","IFCNAMEDUNIT","IFCOBJECT","IFCOBJECTDEFINITION","IFCOBJECTPLACEMENT","IFCOBJECTIVE","IFCOCCUPANT","IFCOFFSETCURVE","IFCOFFSETCURVE2D","IFCOFFSETCURVE3D","IFCOFFSETCURVEBYDISTANCES","IFCOPENSHELL","IFCOPENINGELEMENT","IFCOPENINGSTANDARDCASE","IFCORGANIZATION","IFCORGANIZATIONRELATIONSHIP","IFCORIENTATIONEXPRESSION","IFCORIENTEDEDGE","IFCOUTERBOUNDARYCURVE","IFCOUTLET","IFCOUTLETTYPE","IFCOWNERHISTORY","IFCPARAMETERIZEDPROFILEDEF","IFCPATH","IFCPCURVE","IFCPERFORMANCEHISTORY","IFCPERMEABLECOVERINGPROPERTIES","IFCPERMIT","IFCPERSON","IFCPERSONANDORGANIZATION","IFCPHYSICALCOMPLEXQUANTITY","IFCPHYSICALQUANTITY","IFCPHYSICALSIMPLEQUANTITY","IFCPILE","IFCPILETYPE","IFCPIPEFITTING","IFCPIPEFITTINGTYPE","IFCPIPESEGMENT","IFCPIPESEGMENTTYPE","IFCPIXELTEXTURE","IFCPLACEMENT","IFCPLANARBOX","IFCPLANAREXTENT","IFCPLANE","IFCPLATE","IFCPLATESTANDARDCASE","IFCPLATETYPE","IFCPOINT","IFCPOINTONCURVE","IFCPOINTONSURFACE","IFCPOLYLOOP","IFCPOLYGONALBOUNDEDHALFSPACE","IFCPOLYGONALFACESET","IFCPOLYLINE","IFCPORT","IFCPOSITIONINGELEMENT","IFCPOSTALADDRESS","IFCPREDEFINEDCOLOUR","IFCPREDEFINEDCURVEFONT","IFCPREDEFINEDITEM","IFCPREDEFINEDPROPERTIES","IFCPREDEFINEDPROPERTYSET","IFCPREDEFINEDTEXTFONT","IFCPRESENTATIONITEM","IFCPRESENTATIONLAYERASSIGNMENT","IFCPRESENTATIONLAYERWITHSTYLE","IFCPRESENTATIONSTYLE","IFCPRESENTATIONSTYLEASSIGNMENT","IFCPROCEDURE","IFCPROCEDURETYPE","IFCPROCESS","IFCPRODUCT","IFCPRODUCTDEFINITIONSHAPE","IFCPRODUCTREPRESENTATION","IFCPROFILEDEF","IFCPROFILEPROPERTIES","IFCPROJECT","IFCPROJECTLIBRARY","IFCPROJECTORDER","IFCPROJECTEDCRS","IFCPROJECTIONELEMENT","IFCPROPERTY","IFCPROPERTYABSTRACTION","IFCPROPERTYBOUNDEDVALUE","IFCPROPERTYDEFINITION","IFCPROPERTYDEPENDENCYRELATIONSHIP","IFCPROPERTYENUMERATEDVALUE","IFCPROPERTYENUMERATION","IFCPROPERTYLISTVALUE","IFCPROPERTYREFERENCEVALUE","IFCPROPERTYSET","IFCPROPERTYSETDEFINITION","IFCPROPERTYSETTEMPLATE","IFCPROPERTYSINGLEVALUE","IFCPROPERTYTABLEVALUE","IFCPROPERTYTEMPLATE","IFCPROPERTYTEMPLATEDEFINITION","IFCPROTECTIVEDEVICE","IFCPROTECTIVEDEVICETRIPPINGUNIT","IFCPROTECTIVEDEVICETRIPPINGUNITTYPE","IFCPROTECTIVEDEVICETYPE","IFCPROXY","IFCPUMP","IFCPUMPTYPE","IFCQUANTITYAREA","IFCQUANTITYCOUNT","IFCQUANTITYLENGTH","IFCQUANTITYSET","IFCQUANTITYTIME","IFCQUANTITYVOLUME","IFCQUANTITYWEIGHT","IFCRAILING","IFCRAILINGTYPE","IFCRAMP","IFCRAMPFLIGHT","IFCRAMPFLIGHTTYPE","IFCRAMPTYPE","IFCRATIONALBSPLINECURVEWITHKNOTS","IFCRATIONALBSPLINESURFACEWITHKNOTS","IFCRECTANGLEHOLLOWPROFILEDEF","IFCRECTANGLEPROFILEDEF","IFCRECTANGULARPYRAMID","IFCRECTANGULARTRIMMEDSURFACE","IFCRECURRENCEPATTERN","IFCREFERENCE","IFCREFERENT","IFCREGULARTIMESERIES","IFCREINFORCEMENTBARPROPERTIES","IFCREINFORCEMENTDEFINITIONPROPERTIES","IFCREINFORCINGBAR","IFCREINFORCINGBARTYPE","IFCREINFORCINGELEMENT","IFCREINFORCINGELEMENTTYPE","IFCREINFORCINGMESH","IFCREINFORCINGMESHTYPE","IFCRELAGGREGATES","IFCRELASSIGNS","IFCRELASSIGNSTOACTOR","IFCRELASSIGNSTOCONTROL","IFCRELASSIGNSTOGROUP","IFCRELASSIGNSTOGROUPBYFACTOR","IFCRELASSIGNSTOPROCESS","IFCRELASSIGNSTOPRODUCT","IFCRELASSIGNSTORESOURCE","IFCRELASSOCIATES","IFCRELASSOCIATESAPPROVAL","IFCRELASSOCIATESCLASSIFICATION","IFCRELASSOCIATESCONSTRAINT","IFCRELASSOCIATESDOCUMENT","IFCRELASSOCIATESLIBRARY","IFCRELASSOCIATESMATERIAL","IFCRELCONNECTS","IFCRELCONNECTSELEMENTS","IFCRELCONNECTSPATHELEMENTS","IFCRELCONNECTSPORTTOELEMENT","IFCRELCONNECTSPORTS","IFCRELCONNECTSSTRUCTURALACTIVITY","IFCRELCONNECTSSTRUCTURALMEMBER","IFCRELCONNECTSWITHECCENTRICITY","IFCRELCONNECTSWITHREALIZINGELEMENTS","IFCRELCONTAINEDINSPATIALSTRUCTURE","IFCRELCOVERSBLDGELEMENTS","IFCRELCOVERSSPACES","IFCRELDECLARES","IFCRELDECOMPOSES","IFCRELDEFINES","IFCRELDEFINESBYOBJECT","IFCRELDEFINESBYPROPERTIES","IFCRELDEFINESBYTEMPLATE","IFCRELDEFINESBYTYPE","IFCRELFILLSELEMENT","IFCRELFLOWCONTROLELEMENTS","IFCRELINTERFERESELEMENTS","IFCRELNESTS","IFCRELPOSITIONS","IFCRELPROJECTSELEMENT","IFCRELREFERENCEDINSPATIALSTRUCTURE","IFCRELSEQUENCE","IFCRELSERVICESBUILDINGS","IFCRELSPACEBOUNDARY","IFCRELSPACEBOUNDARY1STLEVEL","IFCRELSPACEBOUNDARY2NDLEVEL","IFCRELVOIDSELEMENT","IFCRELATIONSHIP","IFCREPARAMETRISEDCOMPOSITECURVESEGMENT","IFCREPRESENTATION","IFCREPRESENTATIONCONTEXT","IFCREPRESENTATIONITEM","IFCREPRESENTATIONMAP","IFCRESOURCE","IFCRESOURCEAPPROVALRELATIONSHIP","IFCRESOURCECONSTRAINTRELATIONSHIP","IFCRESOURCELEVELRELATIONSHIP","IFCRESOURCETIME","IFCREVOLVEDAREASOLID","IFCREVOLVEDAREASOLIDTAPERED","IFCRIGHTCIRCULARCONE","IFCRIGHTCIRCULARCYLINDER","IFCROOF","IFCROOFTYPE","IFCROOT","IFCROUNDEDRECTANGLEPROFILEDEF","IFCSIUNIT","IFCSANITARYTERMINAL","IFCSANITARYTERMINALTYPE","IFCSCHEDULINGTIME","IFCSEAMCURVE","IFCSECTIONPROPERTIES","IFCSECTIONREINFORCEMENTPROPERTIES","IFCSECTIONEDSOLID","IFCSECTIONEDSOLIDHORIZONTAL","IFCSECTIONEDSPINE","IFCSENSOR","IFCSENSORTYPE","IFCSHADINGDEVICE","IFCSHADINGDEVICETYPE","IFCSHAPEASPECT","IFCSHAPEMODEL","IFCSHAPEREPRESENTATION","IFCSHELLBASEDSURFACEMODEL","IFCSIMPLEPROPERTY","IFCSIMPLEPROPERTYTEMPLATE","IFCSITE","IFCSLAB","IFCSLABELEMENTEDCASE","IFCSLABSTANDARDCASE","IFCSLABTYPE","IFCSLIPPAGECONNECTIONCONDITION","IFCSOLARDEVICE","IFCSOLARDEVICETYPE","IFCSOLIDMODEL","IFCSPACE","IFCSPACEHEATER","IFCSPACEHEATERTYPE","IFCSPACETYPE","IFCSPATIALELEMENT","IFCSPATIALELEMENTTYPE","IFCSPATIALSTRUCTUREELEMENT","IFCSPATIALSTRUCTUREELEMENTTYPE","IFCSPATIALZONE","IFCSPATIALZONETYPE","IFCSPHERE","IFCSPHERICALSURFACE","IFCSTACKTERMINAL","IFCSTACKTERMINALTYPE","IFCSTAIR","IFCSTAIRFLIGHT","IFCSTAIRFLIGHTTYPE","IFCSTAIRTYPE","IFCSTRUCTURALACTION","IFCSTRUCTURALACTIVITY","IFCSTRUCTURALANALYSISMODEL","IFCSTRUCTURALCONNECTION","IFCSTRUCTURALCONNECTIONCONDITION","IFCSTRUCTURALCURVEACTION","IFCSTRUCTURALCURVECONNECTION","IFCSTRUCTURALCURVEMEMBER","IFCSTRUCTURALCURVEMEMBERVARYING","IFCSTRUCTURALCURVEREACTION","IFCSTRUCTURALITEM","IFCSTRUCTURALLINEARACTION","IFCSTRUCTURALLOAD","IFCSTRUCTURALLOADCASE","IFCSTRUCTURALLOADCONFIGURATION","IFCSTRUCTURALLOADGROUP","IFCSTRUCTURALLOADLINEARFORCE","IFCSTRUCTURALLOADORRESULT","IFCSTRUCTURALLOADPLANARFORCE","IFCSTRUCTURALLOADSINGLEDISPLACEMENT","IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION","IFCSTRUCTURALLOADSINGLEFORCE","IFCSTRUCTURALLOADSINGLEFORCEWARPING","IFCSTRUCTURALLOADSTATIC","IFCSTRUCTURALLOADTEMPERATURE","IFCSTRUCTURALMEMBER","IFCSTRUCTURALPLANARACTION","IFCSTRUCTURALPOINTACTION","IFCSTRUCTURALPOINTCONNECTION","IFCSTRUCTURALPOINTREACTION","IFCSTRUCTURALREACTION","IFCSTRUCTURALRESULTGROUP","IFCSTRUCTURALSURFACEACTION","IFCSTRUCTURALSURFACECONNECTION","IFCSTRUCTURALSURFACEMEMBER","IFCSTRUCTURALSURFACEMEMBERVARYING","IFCSTRUCTURALSURFACEREACTION","IFCSTYLEMODEL","IFCSTYLEDITEM","IFCSTYLEDREPRESENTATION","IFCSUBCONTRACTRESOURCE","IFCSUBCONTRACTRESOURCETYPE","IFCSUBEDGE","IFCSURFACE","IFCSURFACECURVE","IFCSURFACECURVESWEPTAREASOLID","IFCSURFACEFEATURE","IFCSURFACEOFLINEAREXTRUSION","IFCSURFACEOFREVOLUTION","IFCSURFACEREINFORCEMENTAREA","IFCSURFACESTYLE","IFCSURFACESTYLELIGHTING","IFCSURFACESTYLEREFRACTION","IFCSURFACESTYLERENDERING","IFCSURFACESTYLESHADING","IFCSURFACESTYLEWITHTEXTURES","IFCSURFACETEXTURE","IFCSWEPTAREASOLID","IFCSWEPTDISKSOLID","IFCSWEPTDISKSOLIDPOLYGONAL","IFCSWEPTSURFACE","IFCSWITCHINGDEVICE","IFCSWITCHINGDEVICETYPE","IFCSYSTEM","IFCSYSTEMFURNITUREELEMENT","IFCSYSTEMFURNITUREELEMENTTYPE","IFCTSHAPEPROFILEDEF","IFCTABLE","IFCTABLECOLUMN","IFCTABLEROW","IFCTANK","IFCTANKTYPE","IFCTASK","IFCTASKTIME","IFCTASKTIMERECURRING","IFCTASKTYPE","IFCTELECOMADDRESS","IFCTENDON","IFCTENDONANCHOR","IFCTENDONANCHORTYPE","IFCTENDONCONDUIT","IFCTENDONCONDUITTYPE","IFCTENDONTYPE","IFCTESSELLATEDFACESET","IFCTESSELLATEDITEM","IFCTEXTLITERAL","IFCTEXTLITERALWITHEXTENT","IFCTEXTSTYLE","IFCTEXTSTYLEFONTMODEL","IFCTEXTSTYLEFORDEFINEDFONT","IFCTEXTSTYLETEXTMODEL","IFCTEXTURECOORDINATE","IFCTEXTURECOORDINATEGENERATOR","IFCTEXTUREMAP","IFCTEXTUREVERTEX","IFCTEXTUREVERTEXLIST","IFCTIMEPERIOD","IFCTIMESERIES","IFCTIMESERIESVALUE","IFCTOPOLOGICALREPRESENTATIONITEM","IFCTOPOLOGYREPRESENTATION","IFCTOROIDALSURFACE","IFCTRANSFORMER","IFCTRANSFORMERTYPE","IFCTRANSITIONCURVESEGMENT2D","IFCTRANSPORTELEMENT","IFCTRANSPORTELEMENTTYPE","IFCTRAPEZIUMPROFILEDEF","IFCTRIANGULATEDFACESET","IFCTRIANGULATEDIRREGULARNETWORK","IFCTRIMMEDCURVE","IFCTUBEBUNDLE","IFCTUBEBUNDLETYPE","IFCTYPEOBJECT","IFCTYPEPROCESS","IFCTYPEPRODUCT","IFCTYPERESOURCE","IFCUSHAPEPROFILEDEF","IFCUNITASSIGNMENT","IFCUNITARYCONTROLELEMENT","IFCUNITARYCONTROLELEMENTTYPE","IFCUNITARYEQUIPMENT","IFCUNITARYEQUIPMENTTYPE","IFCVALVE","IFCVALVETYPE","IFCVECTOR","IFCVERTEX","IFCVERTEXLOOP","IFCVERTEXPOINT","IFCVIBRATIONDAMPER","IFCVIBRATIONDAMPERTYPE","IFCVIBRATIONISOLATOR","IFCVIBRATIONISOLATORTYPE","IFCVIRTUALELEMENT","IFCVIRTUALGRIDINTERSECTION","IFCVOIDINGFEATURE","IFCWALL","IFCWALLELEMENTEDCASE","IFCWALLSTANDARDCASE","IFCWALLTYPE","IFCWASTETERMINAL","IFCWASTETERMINALTYPE","IFCWINDOW","IFCWINDOWLININGPROPERTIES","IFCWINDOWPANELPROPERTIES","IFCWINDOWSTANDARDCASE","IFCWINDOWSTYLE","IFCWINDOWTYPE","IFCWORKCALENDAR","IFCWORKCONTROL","IFCWORKPLAN","IFCWORKSCHEDULE","IFCWORKTIME","IFCZSHAPEPROFILEDEF","IFCZONE","FromRawLineData","IfcActionRequest","FromTape","ID","IfcActor","IfcActorRole","IfcActuator","IfcActuatorType","IfcAddress","IfcAdvancedBrep","IfcAdvancedBrepWithVoids","IfcAdvancedFace","IfcAirTerminal","IfcAirTerminalBox","IfcAirTerminalBoxType","IfcAirTerminalType","IfcAirToAirHeatRecovery","IfcAirToAirHeatRecoveryType","IfcAlarm","IfcAlarmType","IfcAlignment","IfcAlignment2DHorizontal","IfcAlignment2DHorizontalSegment","IfcAlignment2DSegment","IfcAlignment2DVerSegCircularArc","IfcAlignment2DVerSegLine","IfcAlignment2DVerSegParabolicArc","IfcAlignment2DVertical","IfcAlignment2DVerticalSegment","IfcAlignmentCurve","IfcAnnotation","IfcAnnotationFillArea","IfcApplication","IfcAppliedValue","IfcApproval","IfcApprovalRelationship","IfcArbitraryClosedProfileDef","IfcArbitraryOpenProfileDef","IfcArbitraryProfileDefWithVoids","IfcAsset","IfcAsymmetricIShapeProfileDef","IfcAudioVisualAppliance","IfcAudioVisualApplianceType","IfcAxis1Placement","IfcAxis2Placement2D","IfcAxis2Placement3D","IfcBSplineCurve","IfcBSplineCurveWithKnots","IfcBSplineSurface","IfcBSplineSurfaceWithKnots","IfcBeam","IfcBeamStandardCase","IfcBeamType","IfcBearing","IfcBearingType","IfcBlobTexture","IfcBlock","IfcBoiler","IfcBoilerType","IfcBooleanClippingResult","IfcBooleanResult","IfcBoundaryCondition","IfcBoundaryCurve","IfcBoundaryEdgeCondition","IfcBoundaryFaceCondition","IfcBoundaryNodeCondition","IfcBoundaryNodeConditionWarping","IfcBoundedCurve","IfcBoundedSurface","IfcBoundingBox","IfcBoxedHalfSpace","IfcBridge","IfcBridgePart","IfcBuilding","IfcBuildingElement","IfcBuildingElementPart","IfcBuildingElementPartType","IfcBuildingElementProxy","IfcBuildingElementProxyType","IfcBuildingElementType","IfcBuildingStorey","IfcBuildingSystem","IfcBurner","IfcBurnerType","IfcCShapeProfileDef","IfcCableCarrierFitting","IfcCableCarrierFittingType","IfcCableCarrierSegment","IfcCableCarrierSegmentType","IfcCableFitting","IfcCableFittingType","IfcCableSegment","IfcCableSegmentType","IfcCaissonFoundation","IfcCaissonFoundationType","IfcCartesianPoint","IfcCartesianPointList","IfcCartesianPointList2D","IfcCartesianPointList3D","IfcCartesianTransformationOperator","IfcCartesianTransformationOperator2D","IfcCartesianTransformationOperator2DnonUniform","IfcCartesianTransformationOperator3D","IfcCartesianTransformationOperator3DnonUniform","IfcCenterLineProfileDef","IfcChiller","IfcChillerType","IfcChimney","IfcChimneyType","IfcCircle","IfcCircleHollowProfileDef","IfcCircleProfileDef","IfcCircularArcSegment2D","IfcCivilElement","IfcCivilElementType","IfcClassification","IfcClassificationReference","IfcClosedShell","IfcCoil","IfcCoilType","IfcColourRgb","IfcColourRgbList","IfcColourSpecification","IfcColumn","IfcColumnStandardCase","IfcColumnType","IfcCommunicationsAppliance","IfcCommunicationsApplianceType","IfcComplexProperty","IfcComplexPropertyTemplate","IfcCompositeCurve","IfcCompositeCurveOnSurface","IfcCompositeCurveSegment","IfcCompositeProfileDef","IfcCompressor","IfcCompressorType","IfcCondenser","IfcCondenserType","IfcConic","IfcConnectedFaceSet","IfcConnectionCurveGeometry","IfcConnectionGeometry","IfcConnectionPointEccentricity","IfcConnectionPointGeometry","IfcConnectionSurfaceGeometry","IfcConnectionVolumeGeometry","IfcConstraint","IfcConstructionEquipmentResource","IfcConstructionEquipmentResourceType","IfcConstructionMaterialResource","IfcConstructionMaterialResourceType","IfcConstructionProductResource","IfcConstructionProductResourceType","IfcConstructionResource","IfcConstructionResourceType","IfcContext","IfcContextDependentUnit","IfcControl","IfcController","IfcControllerType","IfcConversionBasedUnit","IfcConversionBasedUnitWithOffset","IfcCooledBeam","IfcCooledBeamType","IfcCoolingTower","IfcCoolingTowerType","IfcCoordinateOperation","IfcCoordinateReferenceSystem","IfcCostItem","IfcCostSchedule","IfcCostValue","IfcCovering","IfcCoveringType","IfcCrewResource","IfcCrewResourceType","IfcCsgPrimitive3D","IfcCsgSolid","IfcCurrencyRelationship","IfcCurtainWall","IfcCurtainWallType","IfcCurve","IfcCurveBoundedPlane","IfcCurveBoundedSurface","IfcCurveSegment2D","IfcCurveStyle","IfcCurveStyleFont","IfcCurveStyleFontAndScaling","IfcCurveStyleFontPattern","IfcCylindricalSurface","IfcDamper","IfcDamperType","IfcDeepFoundation","IfcDeepFoundationType","IfcDerivedProfileDef","IfcDerivedUnit","IfcDerivedUnitElement","IfcDimensionalExponents","IfcDirection","IfcDiscreteAccessory","IfcDiscreteAccessoryType","IfcDistanceExpression","IfcDistributionChamberElement","IfcDistributionChamberElementType","IfcDistributionCircuit","IfcDistributionControlElement","IfcDistributionControlElementType","IfcDistributionElement","IfcDistributionElementType","IfcDistributionFlowElement","IfcDistributionFlowElementType","IfcDistributionPort","IfcDistributionSystem","IfcDocumentInformation","IfcDocumentInformationRelationship","IfcDocumentReference","IfcDoor","IfcDoorLiningProperties","IfcDoorPanelProperties","IfcDoorStandardCase","IfcDoorStyle","IfcDoorType","IfcDraughtingPreDefinedColour","IfcDraughtingPreDefinedCurveFont","IfcDuctFitting","IfcDuctFittingType","IfcDuctSegment","IfcDuctSegmentType","IfcDuctSilencer","IfcDuctSilencerType","IfcEdge","IfcEdgeCurve","IfcEdgeLoop","IfcElectricAppliance","IfcElectricApplianceType","IfcElectricDistributionBoard","IfcElectricDistributionBoardType","IfcElectricFlowStorageDevice","IfcElectricFlowStorageDeviceType","IfcElectricGenerator","IfcElectricGeneratorType","IfcElectricMotor","IfcElectricMotorType","IfcElectricTimeControl","IfcElectricTimeControlType","IfcElement","IfcElementAssembly","IfcElementAssemblyType","IfcElementComponent","IfcElementComponentType","IfcElementQuantity","IfcElementType","IfcElementarySurface","IfcEllipse","IfcEllipseProfileDef","IfcEnergyConversionDevice","IfcEnergyConversionDeviceType","IfcEngine","IfcEngineType","IfcEvaporativeCooler","IfcEvaporativeCoolerType","IfcEvaporator","IfcEvaporatorType","IfcEvent","IfcEventTime","IfcEventType","IfcExtendedProperties","IfcExternalInformation","IfcExternalReference","IfcExternalReferenceRelationship","IfcExternalSpatialElement","IfcExternalSpatialStructureElement","IfcExternallyDefinedHatchStyle","IfcExternallyDefinedSurfaceStyle","IfcExternallyDefinedTextFont","IfcExtrudedAreaSolid","IfcExtrudedAreaSolidTapered","IfcFace","IfcFaceBasedSurfaceModel","IfcFaceBound","IfcFaceOuterBound","IfcFaceSurface","IfcFacetedBrep","IfcFacetedBrepWithVoids","IfcFacility","IfcFacilityPart","IfcFailureConnectionCondition","IfcFan","IfcFanType","IfcFastener","IfcFastenerType","IfcFeatureElement","IfcFeatureElementAddition","IfcFeatureElementSubtraction","IfcFillAreaStyle","IfcFillAreaStyleHatching","IfcFillAreaStyleTiles","IfcFilter","IfcFilterType","IfcFireSuppressionTerminal","IfcFireSuppressionTerminalType","IfcFixedReferenceSweptAreaSolid","IfcFlowController","IfcFlowControllerType","IfcFlowFitting","IfcFlowFittingType","IfcFlowInstrument","IfcFlowInstrumentType","IfcFlowMeter","IfcFlowMeterType","IfcFlowMovingDevice","IfcFlowMovingDeviceType","IfcFlowSegment","IfcFlowSegmentType","IfcFlowStorageDevice","IfcFlowStorageDeviceType","IfcFlowTerminal","IfcFlowTerminalType","IfcFlowTreatmentDevice","IfcFlowTreatmentDeviceType","IfcFooting","IfcFootingType","IfcFurnishingElement","IfcFurnishingElementType","IfcFurniture","IfcFurnitureType","IfcGeographicElement","IfcGeographicElementType","IfcGeometricCurveSet","IfcGeometricRepresentationContext","IfcGeometricRepresentationItem","IfcGeometricRepresentationSubContext","IfcGeometricSet","IfcGrid","IfcGridAxis","IfcGridPlacement","IfcGroup","IfcHalfSpaceSolid","IfcHeatExchanger","IfcHeatExchangerType","IfcHumidifier","IfcHumidifierType","IfcIShapeProfileDef","IfcImageTexture","IfcIndexedColourMap","IfcIndexedPolyCurve","IfcIndexedPolygonalFace","IfcIndexedPolygonalFaceWithVoids","IfcIndexedTextureMap","IfcIndexedTriangleTextureMap","IfcInterceptor","IfcInterceptorType","IfcIntersectionCurve","IfcInventory","IfcIrregularTimeSeries","IfcIrregularTimeSeriesValue","IfcJunctionBox","IfcJunctionBoxType","IfcLShapeProfileDef","IfcLaborResource","IfcLaborResourceType","IfcLagTime","IfcLamp","IfcLampType","IfcLibraryInformation","IfcLibraryReference","IfcLightDistributionData","IfcLightFixture","IfcLightFixtureType","IfcLightIntensityDistribution","IfcLightSource","IfcLightSourceAmbient","IfcLightSourceDirectional","IfcLightSourceGoniometric","IfcLightSourcePositional","IfcLightSourceSpot","IfcLine","IfcLineSegment2D","IfcLinearPlacement","IfcLinearPositioningElement","IfcLocalPlacement","IfcLoop","IfcManifoldSolidBrep","IfcMapConversion","IfcMappedItem","IfcMaterial","IfcMaterialClassificationRelationship","IfcMaterialConstituent","IfcMaterialConstituentSet","IfcMaterialDefinition","IfcMaterialDefinitionRepresentation","IfcMaterialLayer","IfcMaterialLayerSet","IfcMaterialLayerSetUsage","IfcMaterialLayerWithOffsets","IfcMaterialList","IfcMaterialProfile","IfcMaterialProfileSet","IfcMaterialProfileSetUsage","IfcMaterialProfileSetUsageTapering","IfcMaterialProfileWithOffsets","IfcMaterialProperties","IfcMaterialRelationship","IfcMaterialUsageDefinition","IfcMeasureWithUnit","IfcMechanicalFastener","IfcMechanicalFastenerType","IfcMedicalDevice","IfcMedicalDeviceType","IfcMember","IfcMemberStandardCase","IfcMemberType","IfcMetric","IfcMirroredProfileDef","IfcMonetaryUnit","IfcMotorConnection","IfcMotorConnectionType","IfcNamedUnit","IfcObject","IfcObjectDefinition","IfcObjectPlacement","IfcObjective","IfcOccupant","IfcOffsetCurve","IfcOffsetCurve2D","IfcOffsetCurve3D","IfcOffsetCurveByDistances","IfcOpenShell","IfcOpeningElement","IfcOpeningStandardCase","IfcOrganization","IfcOrganizationRelationship","IfcOrientationExpression","IfcOrientedEdge","IfcOuterBoundaryCurve","IfcOutlet","IfcOutletType","IfcOwnerHistory","IfcParameterizedProfileDef","IfcPath","IfcPcurve","IfcPerformanceHistory","IfcPermeableCoveringProperties","IfcPermit","IfcPerson","IfcPersonAndOrganization","IfcPhysicalComplexQuantity","IfcPhysicalQuantity","IfcPhysicalSimpleQuantity","IfcPile","IfcPileType","IfcPipeFitting","IfcPipeFittingType","IfcPipeSegment","IfcPipeSegmentType","IfcPixelTexture","IfcPlacement","IfcPlanarBox","IfcPlanarExtent","IfcPlane","IfcPlate","IfcPlateStandardCase","IfcPlateType","IfcPoint","IfcPointOnCurve","IfcPointOnSurface","IfcPolyLoop","IfcPolygonalBoundedHalfSpace","IfcPolygonalFaceSet","IfcPolyline","IfcPort","IfcPositioningElement","IfcPostalAddress","IfcPreDefinedColour","IfcPreDefinedCurveFont","IfcPreDefinedItem","IfcPreDefinedProperties","IfcPreDefinedPropertySet","IfcPreDefinedTextFont","IfcPresentationItem","IfcPresentationLayerAssignment","IfcPresentationLayerWithStyle","IfcPresentationStyle","IfcPresentationStyleAssignment","IfcProcedure","IfcProcedureType","IfcProcess","IfcProduct","IfcProductDefinitionShape","IfcProductRepresentation","IfcProfileDef","IfcProfileProperties","IfcProject","IfcProjectLibrary","IfcProjectOrder","IfcProjectedCRS","IfcProjectionElement","IfcProperty","IfcPropertyAbstraction","IfcPropertyBoundedValue","IfcPropertyDefinition","IfcPropertyDependencyRelationship","IfcPropertyEnumeratedValue","IfcPropertyEnumeration","IfcPropertyListValue","IfcPropertyReferenceValue","IfcPropertySet","IfcPropertySetDefinition","IfcPropertySetTemplate","IfcPropertySingleValue","IfcPropertyTableValue","IfcPropertyTemplate","IfcPropertyTemplateDefinition","IfcProtectiveDevice","IfcProtectiveDeviceTrippingUnit","IfcProtectiveDeviceTrippingUnitType","IfcProtectiveDeviceType","IfcProxy","IfcPump","IfcPumpType","IfcQuantityArea","IfcQuantityCount","IfcQuantityLength","IfcQuantitySet","IfcQuantityTime","IfcQuantityVolume","IfcQuantityWeight","IfcRailing","IfcRailingType","IfcRamp","IfcRampFlight","IfcRampFlightType","IfcRampType","IfcRationalBSplineCurveWithKnots","IfcRationalBSplineSurfaceWithKnots","IfcRectangleHollowProfileDef","IfcRectangleProfileDef","IfcRectangularPyramid","IfcRectangularTrimmedSurface","IfcRecurrencePattern","IfcReference","IfcReferent","IfcRegularTimeSeries","IfcReinforcementBarProperties","IfcReinforcementDefinitionProperties","IfcReinforcingBar","IfcReinforcingBarType","IfcReinforcingElement","IfcReinforcingElementType","IfcReinforcingMesh","IfcReinforcingMeshType","IfcRelAggregates","IfcRelAssigns","IfcRelAssignsToActor","IfcRelAssignsToControl","IfcRelAssignsToGroup","IfcRelAssignsToGroupByFactor","IfcRelAssignsToProcess","IfcRelAssignsToProduct","IfcRelAssignsToResource","IfcRelAssociates","IfcRelAssociatesApproval","IfcRelAssociatesClassification","IfcRelAssociatesConstraint","IfcRelAssociatesDocument","IfcRelAssociatesLibrary","IfcRelAssociatesMaterial","IfcRelConnects","IfcRelConnectsElements","IfcRelConnectsPathElements","IfcRelConnectsPortToElement","IfcRelConnectsPorts","IfcRelConnectsStructuralActivity","IfcRelConnectsStructuralMember","IfcRelConnectsWithEccentricity","IfcRelConnectsWithRealizingElements","IfcRelContainedInSpatialStructure","IfcRelCoversBldgElements","IfcRelCoversSpaces","IfcRelDeclares","IfcRelDecomposes","IfcRelDefines","IfcRelDefinesByObject","IfcRelDefinesByProperties","IfcRelDefinesByTemplate","IfcRelDefinesByType","IfcRelFillsElement","IfcRelFlowControlElements","IfcRelInterferesElements","IfcRelNests","IfcRelPositions","IfcRelProjectsElement","IfcRelReferencedInSpatialStructure","IfcRelSequence","IfcRelServicesBuildings","IfcRelSpaceBoundary","IfcRelSpaceBoundary1stLevel","IfcRelSpaceBoundary2ndLevel","IfcRelVoidsElement","IfcRelationship","IfcReparametrisedCompositeCurveSegment","IfcRepresentation","IfcRepresentationContext","IfcRepresentationItem","IfcRepresentationMap","IfcResource","IfcResourceApprovalRelationship","IfcResourceConstraintRelationship","IfcResourceLevelRelationship","IfcResourceTime","IfcRevolvedAreaSolid","IfcRevolvedAreaSolidTapered","IfcRightCircularCone","IfcRightCircularCylinder","IfcRoof","IfcRoofType","IfcRoot","IfcRoundedRectangleProfileDef","IfcSIUnit","IfcSanitaryTerminal","IfcSanitaryTerminalType","IfcSchedulingTime","IfcSeamCurve","IfcSectionProperties","IfcSectionReinforcementProperties","IfcSectionedSolid","IfcSectionedSolidHorizontal","IfcSectionedSpine","IfcSensor","IfcSensorType","IfcShadingDevice","IfcShadingDeviceType","IfcShapeAspect","IfcShapeModel","IfcShapeRepresentation","IfcShellBasedSurfaceModel","IfcSimpleProperty","IfcSimplePropertyTemplate","IfcSite","IfcSlab","IfcSlabElementedCase","IfcSlabStandardCase","IfcSlabType","IfcSlippageConnectionCondition","IfcSolarDevice","IfcSolarDeviceType","IfcSolidModel","IfcSpace","IfcSpaceHeater","IfcSpaceHeaterType","IfcSpaceType","IfcSpatialElement","IfcSpatialElementType","IfcSpatialStructureElement","IfcSpatialStructureElementType","IfcSpatialZone","IfcSpatialZoneType","IfcSphere","IfcSphericalSurface","IfcStackTerminal","IfcStackTerminalType","IfcStair","IfcStairFlight","IfcStairFlightType","IfcStairType","IfcStructuralAction","IfcStructuralActivity","IfcStructuralAnalysisModel","IfcStructuralConnection","IfcStructuralConnectionCondition","IfcStructuralCurveAction","IfcStructuralCurveConnection","IfcStructuralCurveMember","IfcStructuralCurveMemberVarying","IfcStructuralCurveReaction","IfcStructuralItem","IfcStructuralLinearAction","IfcStructuralLoad","IfcStructuralLoadCase","IfcStructuralLoadConfiguration","IfcStructuralLoadGroup","IfcStructuralLoadLinearForce","IfcStructuralLoadOrResult","IfcStructuralLoadPlanarForce","IfcStructuralLoadSingleDisplacement","IfcStructuralLoadSingleDisplacementDistortion","IfcStructuralLoadSingleForce","IfcStructuralLoadSingleForceWarping","IfcStructuralLoadStatic","IfcStructuralLoadTemperature","IfcStructuralMember","IfcStructuralPlanarAction","IfcStructuralPointAction","IfcStructuralPointConnection","IfcStructuralPointReaction","IfcStructuralReaction","IfcStructuralResultGroup","IfcStructuralSurfaceAction","IfcStructuralSurfaceConnection","IfcStructuralSurfaceMember","IfcStructuralSurfaceMemberVarying","IfcStructuralSurfaceReaction","IfcStyleModel","IfcStyledItem","IfcStyledRepresentation","IfcSubContractResource","IfcSubContractResourceType","IfcSubedge","IfcSurface","IfcSurfaceCurve","IfcSurfaceCurveSweptAreaSolid","IfcSurfaceFeature","IfcSurfaceOfLinearExtrusion","IfcSurfaceOfRevolution","IfcSurfaceReinforcementArea","IfcSurfaceStyle","IfcSurfaceStyleLighting","IfcSurfaceStyleRefraction","IfcSurfaceStyleRendering","IfcSurfaceStyleShading","IfcSurfaceStyleWithTextures","IfcSurfaceTexture","IfcSweptAreaSolid","IfcSweptDiskSolid","IfcSweptDiskSolidPolygonal","IfcSweptSurface","IfcSwitchingDevice","IfcSwitchingDeviceType","IfcSystem","IfcSystemFurnitureElement","IfcSystemFurnitureElementType","IfcTShapeProfileDef","IfcTable","IfcTableColumn","IfcTableRow","IfcTank","IfcTankType","IfcTask","IfcTaskTime","IfcTaskTimeRecurring","IfcTaskType","IfcTelecomAddress","IfcTendon","IfcTendonAnchor","IfcTendonAnchorType","IfcTendonConduit","IfcTendonConduitType","IfcTendonType","IfcTessellatedFaceSet","IfcTessellatedItem","IfcTextLiteral","IfcTextLiteralWithExtent","IfcTextStyle","IfcTextStyleFontModel","IfcTextStyleForDefinedFont","IfcTextStyleTextModel","IfcTextureCoordinate","IfcTextureCoordinateGenerator","IfcTextureMap","IfcTextureVertex","IfcTextureVertexList","IfcTimePeriod","IfcTimeSeries","IfcTimeSeriesValue","IfcTopologicalRepresentationItem","IfcTopologyRepresentation","IfcToroidalSurface","IfcTransformer","IfcTransformerType","IfcTransitionCurveSegment2D","IfcTransportElement","IfcTransportElementType","IfcTrapeziumProfileDef","IfcTriangulatedFaceSet","IfcTriangulatedIrregularNetwork","IfcTrimmedCurve","IfcTubeBundle","IfcTubeBundleType","IfcTypeObject","IfcTypeProcess","IfcTypeProduct","IfcTypeResource","IfcUShapeProfileDef","IfcUnitAssignment","IfcUnitaryControlElement","IfcUnitaryControlElementType","IfcUnitaryEquipment","IfcUnitaryEquipmentType","IfcValve","IfcValveType","IfcVector","IfcVertex","IfcVertexLoop","IfcVertexPoint","IfcVibrationDamper","IfcVibrationDamperType","IfcVibrationIsolator","IfcVibrationIsolatorType","IfcVirtualElement","IfcVirtualGridIntersection","IfcVoidingFeature","IfcWall","IfcWallElementedCase","IfcWallStandardCase","IfcWallType","IfcWasteTerminal","IfcWasteTerminalType","IfcWindow","IfcWindowLiningProperties","IfcWindowPanelProperties","IfcWindowStandardCase","IfcWindowStyle","IfcWindowType","IfcWorkCalendar","IfcWorkControl","IfcWorkPlan","IfcWorkSchedule","IfcWorkTime","IfcZShapeProfileDef","IfcZone","IfcActionRequestTypeEnum","EMAIL","FAX","PHONE","POST","VERBAL","USERDEFINED","NOTDEFINED","IfcActionSourceTypeEnum","DEAD_LOAD_G","COMPLETION_G1","LIVE_LOAD_Q","SNOW_S","WIND_W","PRESTRESSING_P","SETTLEMENT_U","TEMPERATURE_T","EARTHQUAKE_E","FIRE","IMPULSE","IMPACT","TRANSPORT","ERECTION","PROPPING","SYSTEM_IMPERFECTION","SHRINKAGE","CREEP","LACK_OF_FIT","BUOYANCY","ICE","CURRENT","WAVE","RAIN","BRAKES","IfcActionTypeEnum","PERMANENT_G","VARIABLE_Q","EXTRAORDINARY_A","IfcActuatorTypeEnum","ELECTRICACTUATOR","HANDOPERATEDACTUATOR","HYDRAULICACTUATOR","PNEUMATICACTUATOR","THERMOSTATICACTUATOR","IfcAddressTypeEnum","OFFICE","SITE","HOME","DISTRIBUTIONPOINT","IfcAirTerminalBoxTypeEnum","CONSTANTFLOW","VARIABLEFLOWPRESSUREDEPENDANT","VARIABLEFLOWPRESSUREINDEPENDANT","IfcAirTerminalTypeEnum","DIFFUSER","GRILLE","LOUVRE","REGISTER","IfcAirToAirHeatRecoveryTypeEnum","FIXEDPLATECOUNTERFLOWEXCHANGER","FIXEDPLATECROSSFLOWEXCHANGER","FIXEDPLATEPARALLELFLOWEXCHANGER","ROTARYWHEEL","RUNAROUNDCOILLOOP","HEATPIPE","TWINTOWERENTHALPYRECOVERYLOOPS","THERMOSIPHONSEALEDTUBEHEATEXCHANGERS","THERMOSIPHONCOILTYPEHEATEXCHANGERS","IfcAlarmTypeEnum","BELL","BREAKGLASSBUTTON","LIGHT","MANUALPULLBOX","SIREN","WHISTLE","IfcAlignmentTypeEnum","IfcAnalysisModelTypeEnum","IN_PLANE_LOADING_2D","OUT_PLANE_LOADING_2D","LOADING_3D","IfcAnalysisTheoryTypeEnum","FIRST_ORDER_THEORY","SECOND_ORDER_THEORY","THIRD_ORDER_THEORY","FULL_NONLINEAR_THEORY","IfcArithmeticOperatorEnum","ADD","DIVIDE","MULTIPLY","SUBTRACT","IfcAssemblyPlaceEnum","FACTORY","IfcAudioVisualApplianceTypeEnum","AMPLIFIER","CAMERA","DISPLAY","MICROPHONE","PLAYER","PROJECTOR","RECEIVER","SPEAKER","SWITCHER","TELEPHONE","TUNER","IfcBSplineCurveForm","POLYLINE_FORM","CIRCULAR_ARC","ELLIPTIC_ARC","PARABOLIC_ARC","HYPERBOLIC_ARC","UNSPECIFIED","IfcBSplineSurfaceForm","PLANE_SURF","CYLINDRICAL_SURF","CONICAL_SURF","SPHERICAL_SURF","TOROIDAL_SURF","SURF_OF_REVOLUTION","RULED_SURF","GENERALISED_CONE","QUADRIC_SURF","SURF_OF_LINEAR_EXTRUSION","IfcBeamTypeEnum","BEAM","JOIST","HOLLOWCORE","LINTEL","SPANDREL","T_BEAM","GIRDER_SEGMENT","DIAPHRAGM","PIERCAP","HATSTONE","CORNICE","EDGEBEAM","IfcBearingTypeDisplacementEnum","FIXED_MOVEMENT","GUIDED_LONGITUDINAL","GUIDED_TRANSVERSAL","FREE_MOVEMENT","IfcBearingTypeEnum","CYLINDRICAL","SPHERICAL","ELASTOMERIC","POT","GUIDE","ROCKER","ROLLER","DISK","IfcBenchmarkEnum","GREATERTHAN","GREATERTHANOREQUALTO","LESSTHAN","LESSTHANOREQUALTO","EQUALTO","NOTEQUALTO","INCLUDES","NOTINCLUDES","INCLUDEDIN","NOTINCLUDEDIN","IfcBoilerTypeEnum","WATER","STEAM","IfcBooleanOperator","UNION","INTERSECTION","DIFFERENCE","IfcBridgePartTypeEnum","ABUTMENT","DECK","DECK_SEGMENT","FOUNDATION","PIER","PIER_SEGMENT","PYLON","SUBSTRUCTURE","SUPERSTRUCTURE","SURFACESTRUCTURE","IfcBridgeTypeEnum","ARCHED","CABLE_STAYED","CANTILEVER","CULVERT","FRAMEWORK","GIRDER","SUSPENSION","TRUSS","IfcBuildingElementPartTypeEnum","INSULATION","PRECASTPANEL","APRON","IfcBuildingElementProxyTypeEnum","COMPLEX","ELEMENT","PARTIAL","PROVISIONFORVOID","PROVISIONFORSPACE","IfcBuildingSystemTypeEnum","FENESTRATION","LOADBEARING","OUTERSHELL","SHADING","REINFORCING","PRESTRESSING","IfcBurnerTypeEnum","IfcCableCarrierFittingTypeEnum","BEND","CROSS","REDUCER","TEE","IfcCableCarrierSegmentTypeEnum","CABLELADDERSEGMENT","CABLETRAYSEGMENT","CABLETRUNKINGSEGMENT","CONDUITSEGMENT","IfcCableFittingTypeEnum","CONNECTOR","ENTRY","EXIT","JUNCTION","TRANSITION","IfcCableSegmentTypeEnum","BUSBARSEGMENT","CABLESEGMENT","CONDUCTORSEGMENT","CORESEGMENT","IfcCaissonFoundationTypeEnum","WELL","CAISSON","IfcChangeActionEnum","NOCHANGE","MODIFIED","ADDED","DELETED","IfcChillerTypeEnum","AIRCOOLED","WATERCOOLED","HEATRECOVERY","IfcChimneyTypeEnum","IfcCoilTypeEnum","DXCOOLINGCOIL","ELECTRICHEATINGCOIL","GASHEATINGCOIL","HYDRONICCOIL","STEAMHEATINGCOIL","WATERCOOLINGCOIL","WATERHEATINGCOIL","IfcColumnTypeEnum","COLUMN","PILASTER","PIERSTEM","PIERSTEM_SEGMENT","STANDCOLUMN","IfcCommunicationsApplianceTypeEnum","ANTENNA","COMPUTER","GATEWAY","MODEM","NETWORKAPPLIANCE","NETWORKBRIDGE","NETWORKHUB","PRINTER","REPEATER","ROUTER","SCANNER","IfcComplexPropertyTemplateTypeEnum","P_COMPLEX","Q_COMPLEX","IfcCompressorTypeEnum","DYNAMIC","RECIPROCATING","ROTARY","SCROLL","TROCHOIDAL","SINGLESTAGE","BOOSTER","OPENTYPE","HERMETIC","SEMIHERMETIC","WELDEDSHELLHERMETIC","ROLLINGPISTON","ROTARYVANE","SINGLESCREW","TWINSCREW","IfcCondenserTypeEnum","EVAPORATIVECOOLED","WATERCOOLEDBRAZEDPLATE","WATERCOOLEDSHELLCOIL","WATERCOOLEDSHELLTUBE","WATERCOOLEDTUBEINTUBE","IfcConnectionTypeEnum","ATPATH","ATSTART","ATEND","IfcConstraintEnum","HARD","SOFT","ADVISORY","IfcConstructionEquipmentResourceTypeEnum","DEMOLISHING","EARTHMOVING","ERECTING","HEATING","LIGHTING","PAVING","PUMPING","TRANSPORTING","IfcConstructionMaterialResourceTypeEnum","AGGREGATES","CONCRETE","DRYWALL","FUEL","GYPSUM","MASONRY","METAL","PLASTIC","WOOD","IfcConstructionProductResourceTypeEnum","ASSEMBLY","FORMWORK","IfcControllerTypeEnum","FLOATING","PROGRAMMABLE","PROPORTIONAL","MULTIPOSITION","TWOPOSITION","IfcCooledBeamTypeEnum","ACTIVE","PASSIVE","IfcCoolingTowerTypeEnum","NATURALDRAFT","MECHANICALINDUCEDDRAFT","MECHANICALFORCEDDRAFT","IfcCostItemTypeEnum","IfcCostScheduleTypeEnum","BUDGET","COSTPLAN","ESTIMATE","TENDER","PRICEDBILLOFQUANTITIES","UNPRICEDBILLOFQUANTITIES","SCHEDULEOFRATES","IfcCoveringTypeEnum","CEILING","FLOORING","CLADDING","ROOFING","MOLDING","SKIRTINGBOARD","MEMBRANE","SLEEVING","WRAPPING","COPING","IfcCrewResourceTypeEnum","IfcCurtainWallTypeEnum","IfcCurveInterpolationEnum","LINEAR","LOG_LINEAR","LOG_LOG","IfcDamperTypeEnum","BACKDRAFTDAMPER","BALANCINGDAMPER","BLASTDAMPER","CONTROLDAMPER","FIREDAMPER","FIRESMOKEDAMPER","FUMEHOODEXHAUST","GRAVITYDAMPER","GRAVITYRELIEFDAMPER","RELIEFDAMPER","SMOKEDAMPER","IfcDataOriginEnum","MEASURED","PREDICTED","SIMULATED","IfcDerivedUnitEnum","ANGULARVELOCITYUNIT","AREADENSITYUNIT","COMPOUNDPLANEANGLEUNIT","DYNAMICVISCOSITYUNIT","HEATFLUXDENSITYUNIT","INTEGERCOUNTRATEUNIT","ISOTHERMALMOISTURECAPACITYUNIT","KINEMATICVISCOSITYUNIT","LINEARVELOCITYUNIT","MASSDENSITYUNIT","MASSFLOWRATEUNIT","MOISTUREDIFFUSIVITYUNIT","MOLECULARWEIGHTUNIT","SPECIFICHEATCAPACITYUNIT","THERMALADMITTANCEUNIT","THERMALCONDUCTANCEUNIT","THERMALRESISTANCEUNIT","THERMALTRANSMITTANCEUNIT","VAPORPERMEABILITYUNIT","VOLUMETRICFLOWRATEUNIT","ROTATIONALFREQUENCYUNIT","TORQUEUNIT","MOMENTOFINERTIAUNIT","LINEARMOMENTUNIT","LINEARFORCEUNIT","PLANARFORCEUNIT","MODULUSOFELASTICITYUNIT","SHEARMODULUSUNIT","LINEARSTIFFNESSUNIT","ROTATIONALSTIFFNESSUNIT","MODULUSOFSUBGRADEREACTIONUNIT","ACCELERATIONUNIT","CURVATUREUNIT","HEATINGVALUEUNIT","IONCONCENTRATIONUNIT","LUMINOUSINTENSITYDISTRIBUTIONUNIT","MASSPERLENGTHUNIT","MODULUSOFLINEARSUBGRADEREACTIONUNIT","MODULUSOFROTATIONALSUBGRADEREACTIONUNIT","PHUNIT","ROTATIONALMASSUNIT","SECTIONAREAINTEGRALUNIT","SECTIONMODULUSUNIT","SOUNDPOWERLEVELUNIT","SOUNDPOWERUNIT","SOUNDPRESSURELEVELUNIT","SOUNDPRESSUREUNIT","TEMPERATUREGRADIENTUNIT","TEMPERATURERATEOFCHANGEUNIT","THERMALEXPANSIONCOEFFICIENTUNIT","WARPINGCONSTANTUNIT","WARPINGMOMENTUNIT","IfcDirectionSenseEnum","POSITIVE","NEGATIVE","IfcDiscreteAccessoryTypeEnum","ANCHORPLATE","BRACKET","SHOE","EXPANSION_JOINT_DEVICE","IfcDistributionChamberElementTypeEnum","FORMEDDUCT","INSPECTIONCHAMBER","INSPECTIONPIT","MANHOLE","METERCHAMBER","SUMP","TRENCH","VALVECHAMBER","IfcDistributionPortTypeEnum","CABLE","CABLECARRIER","DUCT","PIPE","IfcDistributionSystemEnum","AIRCONDITIONING","AUDIOVISUAL","CHEMICAL","CHILLEDWATER","COMMUNICATION","COMPRESSEDAIR","CONDENSERWATER","CONTROL","CONVEYING","DATA","DISPOSAL","DOMESTICCOLDWATER","DOMESTICHOTWATER","DRAINAGE","EARTHING","ELECTRICAL","ELECTROACOUSTIC","EXHAUST","FIREPROTECTION","GAS","HAZARDOUS","LIGHTNINGPROTECTION","MUNICIPALSOLIDWASTE","OIL","OPERATIONAL","POWERGENERATION","RAINWATER","REFRIGERATION","SECURITY","SEWAGE","SIGNAL","STORMWATER","TV","VACUUM","VENT","VENTILATION","WASTEWATER","WATERSUPPLY","IfcDocumentConfidentialityEnum","PUBLIC","RESTRICTED","CONFIDENTIAL","PERSONAL","IfcDocumentStatusEnum","DRAFT","FINALDRAFT","FINAL","REVISION","IfcDoorPanelOperationEnum","SWINGING","DOUBLE_ACTING","SLIDING","FOLDING","REVOLVING","ROLLINGUP","FIXEDPANEL","IfcDoorPanelPositionEnum","LEFT","MIDDLE","RIGHT","IfcDoorStyleConstructionEnum","ALUMINIUM","HIGH_GRADE_STEEL","STEEL","ALUMINIUM_WOOD","ALUMINIUM_PLASTIC","IfcDoorStyleOperationEnum","SINGLE_SWING_LEFT","SINGLE_SWING_RIGHT","DOUBLE_DOOR_SINGLE_SWING","DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT","DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT","DOUBLE_SWING_LEFT","DOUBLE_SWING_RIGHT","DOUBLE_DOOR_DOUBLE_SWING","SLIDING_TO_LEFT","SLIDING_TO_RIGHT","DOUBLE_DOOR_SLIDING","FOLDING_TO_LEFT","FOLDING_TO_RIGHT","DOUBLE_DOOR_FOLDING","IfcDoorTypeEnum","DOOR","GATE","TRAPDOOR","IfcDoorTypeOperationEnum","SWING_FIXED_LEFT","SWING_FIXED_RIGHT","IfcDuctFittingTypeEnum","OBSTRUCTION","IfcDuctSegmentTypeEnum","RIGIDSEGMENT","FLEXIBLESEGMENT","IfcDuctSilencerTypeEnum","FLATOVAL","RECTANGULAR","ROUND","IfcElectricApplianceTypeEnum","DISHWASHER","ELECTRICCOOKER","FREESTANDINGELECTRICHEATER","FREESTANDINGFAN","FREESTANDINGWATERHEATER","FREESTANDINGWATERCOOLER","FREEZER","FRIDGE_FREEZER","HANDDRYER","KITCHENMACHINE","MICROWAVE","PHOTOCOPIER","REFRIGERATOR","TUMBLEDRYER","VENDINGMACHINE","WASHINGMACHINE","IfcElectricDistributionBoardTypeEnum","CONSUMERUNIT","DISTRIBUTIONBOARD","MOTORCONTROLCENTRE","SWITCHBOARD","IfcElectricFlowStorageDeviceTypeEnum","BATTERY","CAPACITORBANK","HARMONICFILTER","INDUCTORBANK","UPS","IfcElectricGeneratorTypeEnum","CHP","ENGINEGENERATOR","STANDALONE","IfcElectricMotorTypeEnum","DC","INDUCTION","POLYPHASE","RELUCTANCESYNCHRONOUS","SYNCHRONOUS","IfcElectricTimeControlTypeEnum","TIMECLOCK","TIMEDELAY","RELAY","IfcElementAssemblyTypeEnum","ACCESSORY_ASSEMBLY","ARCH","BEAM_GRID","BRACED_FRAME","REINFORCEMENT_UNIT","RIGID_FRAME","SLAB_FIELD","CROSS_BRACING","IfcElementCompositionEnum","IfcEngineTypeEnum","EXTERNALCOMBUSTION","INTERNALCOMBUSTION","IfcEvaporativeCoolerTypeEnum","DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER","DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER","DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER","DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER","DIRECTEVAPORATIVEAIRWASHER","INDIRECTEVAPORATIVEPACKAGEAIRCOOLER","INDIRECTEVAPORATIVEWETCOIL","INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER","INDIRECTDIRECTCOMBINATION","IfcEvaporatorTypeEnum","DIRECTEXPANSION","DIRECTEXPANSIONSHELLANDTUBE","DIRECTEXPANSIONTUBEINTUBE","DIRECTEXPANSIONBRAZEDPLATE","FLOODEDSHELLANDTUBE","SHELLANDCOIL","IfcEventTriggerTypeEnum","EVENTRULE","EVENTMESSAGE","EVENTTIME","EVENTCOMPLEX","IfcEventTypeEnum","STARTEVENT","ENDEVENT","INTERMEDIATEEVENT","IfcExternalSpatialElementTypeEnum","EXTERNAL","EXTERNAL_EARTH","EXTERNAL_WATER","EXTERNAL_FIRE","IfcFanTypeEnum","CENTRIFUGALFORWARDCURVED","CENTRIFUGALRADIAL","CENTRIFUGALBACKWARDINCLINEDCURVED","CENTRIFUGALAIRFOIL","TUBEAXIAL","VANEAXIAL","PROPELLORAXIAL","IfcFastenerTypeEnum","GLUE","MORTAR","WELD","IfcFilterTypeEnum","AIRPARTICLEFILTER","COMPRESSEDAIRFILTER","ODORFILTER","OILFILTER","STRAINER","WATERFILTER","IfcFireSuppressionTerminalTypeEnum","BREECHINGINLET","FIREHYDRANT","HOSEREEL","SPRINKLER","SPRINKLERDEFLECTOR","IfcFlowDirectionEnum","SOURCE","SINK","SOURCEANDSINK","IfcFlowInstrumentTypeEnum","PRESSUREGAUGE","THERMOMETER","AMMETER","FREQUENCYMETER","POWERFACTORMETER","PHASEANGLEMETER","VOLTMETER_PEAK","VOLTMETER_RMS","IfcFlowMeterTypeEnum","ENERGYMETER","GASMETER","OILMETER","WATERMETER","IfcFootingTypeEnum","CAISSON_FOUNDATION","FOOTING_BEAM","PAD_FOOTING","PILE_CAP","STRIP_FOOTING","IfcFurnitureTypeEnum","CHAIR","TABLE","DESK","BED","FILECABINET","SHELF","SOFA","IfcGeographicElementTypeEnum","TERRAIN","SOIL_BORING_POINT","IfcGeometricProjectionEnum","GRAPH_VIEW","SKETCH_VIEW","MODEL_VIEW","PLAN_VIEW","REFLECTED_PLAN_VIEW","SECTION_VIEW","ELEVATION_VIEW","IfcGlobalOrLocalEnum","GLOBAL_COORDS","LOCAL_COORDS","IfcGridTypeEnum","RADIAL","TRIANGULAR","IRREGULAR","IfcHeatExchangerTypeEnum","PLATE","SHELLANDTUBE","IfcHumidifierTypeEnum","STEAMINJECTION","ADIABATICAIRWASHER","ADIABATICPAN","ADIABATICWETTEDELEMENT","ADIABATICATOMIZING","ADIABATICULTRASONIC","ADIABATICRIGIDMEDIA","ADIABATICCOMPRESSEDAIRNOZZLE","ASSISTEDELECTRIC","ASSISTEDNATURALGAS","ASSISTEDPROPANE","ASSISTEDBUTANE","ASSISTEDSTEAM","IfcInterceptorTypeEnum","CYCLONIC","GREASE","PETROL","IfcInternalOrExternalEnum","INTERNAL","IfcInventoryTypeEnum","ASSETINVENTORY","SPACEINVENTORY","FURNITUREINVENTORY","IfcJunctionBoxTypeEnum","POWER","IfcKnotType","UNIFORM_KNOTS","QUASI_UNIFORM_KNOTS","PIECEWISE_BEZIER_KNOTS","IfcLaborResourceTypeEnum","ADMINISTRATION","CARPENTRY","CLEANING","ELECTRIC","FINISHING","GENERAL","HVAC","LANDSCAPING","PAINTING","PLUMBING","SITEGRADING","STEELWORK","SURVEYING","IfcLampTypeEnum","COMPACTFLUORESCENT","FLUORESCENT","HALOGEN","HIGHPRESSUREMERCURY","HIGHPRESSURESODIUM","LED","METALHALIDE","OLED","TUNGSTENFILAMENT","IfcLayerSetDirectionEnum","AXIS1","AXIS2","AXIS3","IfcLightDistributionCurveEnum","TYPE_A","TYPE_B","TYPE_C","IfcLightEmissionSourceEnum","LIGHTEMITTINGDIODE","LOWPRESSURESODIUM","LOWVOLTAGEHALOGEN","MAINVOLTAGEHALOGEN","IfcLightFixtureTypeEnum","POINTSOURCE","DIRECTIONSOURCE","SECURITYLIGHTING","IfcLoadGroupTypeEnum","LOAD_GROUP","LOAD_CASE","LOAD_COMBINATION","IfcLogicalOperatorEnum","LOGICALAND","LOGICALOR","LOGICALXOR","LOGICALNOTAND","LOGICALNOTOR","IfcMechanicalFastenerTypeEnum","ANCHORBOLT","BOLT","DOWEL","NAIL","NAILPLATE","RIVET","SCREW","SHEARCONNECTOR","STAPLE","STUDSHEARCONNECTOR","COUPLER","IfcMedicalDeviceTypeEnum","AIRSTATION","FEEDAIRUNIT","OXYGENGENERATOR","OXYGENPLANT","VACUUMSTATION","IfcMemberTypeEnum","BRACE","CHORD","COLLAR","MEMBER","MULLION","PURLIN","RAFTER","STRINGER","STRUT","STUD","STIFFENING_RIB","ARCH_SEGMENT","SUSPENSION_CABLE","SUSPENDER","STAY_CABLE","IfcMotorConnectionTypeEnum","BELTDRIVE","COUPLING","DIRECTDRIVE","IfcNullStyle","NULL","IfcObjectTypeEnum","PRODUCT","PROCESS","RESOURCE","ACTOR","GROUP","PROJECT","IfcObjectiveEnum","CODECOMPLIANCE","CODEWAIVER","DESIGNINTENT","HEALTHANDSAFETY","MERGECONFLICT","MODELVIEW","PARAMETER","REQUIREMENT","SPECIFICATION","TRIGGERCONDITION","IfcOccupantTypeEnum","ASSIGNEE","ASSIGNOR","LESSEE","LESSOR","LETTINGAGENT","OWNER","TENANT","IfcOpeningElementTypeEnum","OPENING","RECESS","IfcOutletTypeEnum","AUDIOVISUALOUTLET","COMMUNICATIONSOUTLET","POWEROUTLET","DATAOUTLET","TELEPHONEOUTLET","IfcPerformanceHistoryTypeEnum","IfcPermeableCoveringOperationEnum","GRILL","LOUVER","SCREEN","IfcPermitTypeEnum","ACCESS","BUILDING","WORK","IfcPhysicalOrVirtualEnum","PHYSICAL","VIRTUAL","IfcPileConstructionEnum","CAST_IN_PLACE","COMPOSITE","PRECAST_CONCRETE","PREFAB_STEEL","IfcPileTypeEnum","BORED","DRIVEN","JETGROUTING","COHESION","FRICTION","SUPPORT","IfcPipeFittingTypeEnum","IfcPipeSegmentTypeEnum","GUTTER","SPOOL","IfcPlateTypeEnum","CURTAIN_PANEL","SHEET","FLANGE_PLATE","WEB_PLATE","STIFFENER_PLATE","GUSSET_PLATE","COVER_PLATE","SPLICE_PLATE","BASE_PLATE","IfcPreferredSurfaceCurveRepresentation","CURVE3D","PCURVE_S1","PCURVE_S2","IfcProcedureTypeEnum","ADVICE_CAUTION","ADVICE_NOTE","ADVICE_WARNING","CALIBRATION","DIAGNOSTIC","SHUTDOWN","STARTUP","IfcProfileTypeEnum","CURVE","AREA","IfcProjectOrderTypeEnum","CHANGEORDER","MAINTENANCEWORKORDER","MOVEORDER","PURCHASEORDER","WORKORDER","IfcProjectedOrTrueLengthEnum","PROJECTED_LENGTH","TRUE_LENGTH","IfcProjectionElementTypeEnum","BLISTER","DEVIATOR","IfcPropertySetTemplateTypeEnum","PSET_TYPEDRIVENONLY","PSET_TYPEDRIVENOVERRIDE","PSET_OCCURRENCEDRIVEN","PSET_PERFORMANCEDRIVEN","QTO_TYPEDRIVENONLY","QTO_TYPEDRIVENOVERRIDE","QTO_OCCURRENCEDRIVEN","IfcProtectiveDeviceTrippingUnitTypeEnum","ELECTRONIC","ELECTROMAGNETIC","RESIDUALCURRENT","THERMAL","IfcProtectiveDeviceTypeEnum","CIRCUITBREAKER","EARTHLEAKAGECIRCUITBREAKER","EARTHINGSWITCH","FUSEDISCONNECTOR","RESIDUALCURRENTCIRCUITBREAKER","RESIDUALCURRENTSWITCH","VARISTOR","IfcPumpTypeEnum","CIRCULATOR","ENDSUCTION","SPLITCASE","SUBMERSIBLEPUMP","SUMPPUMP","VERTICALINLINE","VERTICALTURBINE","IfcRailingTypeEnum","HANDRAIL","GUARDRAIL","BALUSTRADE","IfcRampFlightTypeEnum","STRAIGHT","SPIRAL","IfcRampTypeEnum","STRAIGHT_RUN_RAMP","TWO_STRAIGHT_RUN_RAMP","QUARTER_TURN_RAMP","TWO_QUARTER_TURN_RAMP","HALF_TURN_RAMP","SPIRAL_RAMP","IfcRecurrenceTypeEnum","DAILY","WEEKLY","MONTHLY_BY_DAY_OF_MONTH","MONTHLY_BY_POSITION","BY_DAY_COUNT","BY_WEEKDAY_COUNT","YEARLY_BY_DAY_OF_MONTH","YEARLY_BY_POSITION","IfcReferentTypeEnum","KILOPOINT","MILEPOINT","STATION","IfcReflectanceMethodEnum","BLINN","FLAT","GLASS","MATT","MIRROR","PHONG","STRAUSS","IfcReinforcingBarRoleEnum","MAIN","SHEAR","LIGATURE","PUNCHING","EDGE","RING","ANCHORING","IfcReinforcingBarSurfaceEnum","PLAIN","TEXTURED","IfcReinforcingBarTypeEnum","SPACEBAR","IfcReinforcingMeshTypeEnum","IfcRoleEnum","SUPPLIER","MANUFACTURER","CONTRACTOR","SUBCONTRACTOR","ARCHITECT","STRUCTURALENGINEER","COSTENGINEER","CLIENT","BUILDINGOWNER","BUILDINGOPERATOR","MECHANICALENGINEER","ELECTRICALENGINEER","PROJECTMANAGER","FACILITIESMANAGER","CIVILENGINEER","COMMISSIONINGENGINEER","ENGINEER","CONSULTANT","CONSTRUCTIONMANAGER","FIELDCONSTRUCTIONMANAGER","RESELLER","IfcRoofTypeEnum","FLAT_ROOF","SHED_ROOF","GABLE_ROOF","HIP_ROOF","HIPPED_GABLE_ROOF","GAMBREL_ROOF","MANSARD_ROOF","BARREL_ROOF","RAINBOW_ROOF","BUTTERFLY_ROOF","PAVILION_ROOF","DOME_ROOF","FREEFORM","IfcSIPrefix","EXA","PETA","TERA","GIGA","MEGA","KILO","HECTO","DECA","DECI","CENTI","MILLI","MICRO","NANO","PICO","FEMTO","ATTO","IfcSIUnitName","AMPERE","BECQUEREL","CANDELA","COULOMB","CUBIC_METRE","DEGREE_CELSIUS","FARAD","GRAM","GRAY","HENRY","HERTZ","JOULE","KELVIN","LUMEN","LUX","METRE","MOLE","NEWTON","OHM","PASCAL","RADIAN","SECOND","SIEMENS","SIEVERT","SQUARE_METRE","STERADIAN","TESLA","VOLT","WATT","WEBER","IfcSanitaryTerminalTypeEnum","BATH","BIDET","CISTERN","SHOWER","SANITARYFOUNTAIN","TOILETPAN","URINAL","WASHHANDBASIN","WCSEAT","IfcSectionTypeEnum","UNIFORM","TAPERED","IfcSensorTypeEnum","COSENSOR","CO2SENSOR","CONDUCTANCESENSOR","CONTACTSENSOR","FIRESENSOR","FLOWSENSOR","FROSTSENSOR","GASSENSOR","HEATSENSOR","HUMIDITYSENSOR","IDENTIFIERSENSOR","IONCONCENTRATIONSENSOR","LEVELSENSOR","LIGHTSENSOR","MOISTURESENSOR","MOVEMENTSENSOR","PHSENSOR","PRESSURESENSOR","RADIATIONSENSOR","RADIOACTIVITYSENSOR","SMOKESENSOR","SOUNDSENSOR","TEMPERATURESENSOR","WINDSENSOR","IfcSequenceEnum","START_START","START_FINISH","FINISH_START","FINISH_FINISH","IfcShadingDeviceTypeEnum","JALOUSIE","SHUTTER","AWNING","IfcSimplePropertyTemplateTypeEnum","P_SINGLEVALUE","P_ENUMERATEDVALUE","P_BOUNDEDVALUE","P_LISTVALUE","P_TABLEVALUE","P_REFERENCEVALUE","Q_LENGTH","Q_AREA","Q_VOLUME","Q_COUNT","Q_WEIGHT","Q_TIME","IfcSlabTypeEnum","FLOOR","ROOF","LANDING","BASESLAB","APPROACH_SLAB","WEARING","SIDEWALK","IfcSolarDeviceTypeEnum","SOLARCOLLECTOR","SOLARPANEL","IfcSpaceHeaterTypeEnum","CONVECTOR","RADIATOR","IfcSpaceTypeEnum","SPACE","PARKING","GFA","IfcSpatialZoneTypeEnum","CONSTRUCTION","FIRESAFETY","OCCUPANCY","IfcStackTerminalTypeEnum","BIRDCAGE","COWL","RAINWATERHOPPER","IfcStairFlightTypeEnum","WINDER","CURVED","IfcStairTypeEnum","STRAIGHT_RUN_STAIR","TWO_STRAIGHT_RUN_STAIR","QUARTER_WINDING_STAIR","QUARTER_TURN_STAIR","HALF_WINDING_STAIR","HALF_TURN_STAIR","TWO_QUARTER_WINDING_STAIR","TWO_QUARTER_TURN_STAIR","THREE_QUARTER_WINDING_STAIR","THREE_QUARTER_TURN_STAIR","SPIRAL_STAIR","DOUBLE_RETURN_STAIR","CURVED_RUN_STAIR","TWO_CURVED_RUN_STAIR","IfcStateEnum","READWRITE","READONLY","LOCKED","READWRITELOCKED","READONLYLOCKED","IfcStructuralCurveActivityTypeEnum","CONST","POLYGONAL","EQUIDISTANT","SINUS","PARABOLA","DISCRETE","IfcStructuralCurveMemberTypeEnum","RIGID_JOINED_MEMBER","PIN_JOINED_MEMBER","TENSION_MEMBER","COMPRESSION_MEMBER","IfcStructuralSurfaceActivityTypeEnum","BILINEAR","ISOCONTOUR","IfcStructuralSurfaceMemberTypeEnum","BENDING_ELEMENT","MEMBRANE_ELEMENT","SHELL","IfcSubContractResourceTypeEnum","PURCHASE","IfcSurfaceFeatureTypeEnum","MARK","TAG","TREATMENT","DEFECT","IfcSurfaceSide","BOTH","IfcSwitchingDeviceTypeEnum","CONTACTOR","DIMMERSWITCH","EMERGENCYSTOP","KEYPAD","MOMENTARYSWITCH","SELECTORSWITCH","STARTER","SWITCHDISCONNECTOR","TOGGLESWITCH","IfcSystemFurnitureElementTypeEnum","PANEL","WORKSURFACE","IfcTankTypeEnum","BASIN","BREAKPRESSURE","EXPANSION","FEEDANDEXPANSION","PRESSUREVESSEL","STORAGE","VESSEL","IfcTaskDurationEnum","ELAPSEDTIME","WORKTIME","IfcTaskTypeEnum","ATTENDANCE","DEMOLITION","DISMANTLE","INSTALLATION","LOGISTIC","MAINTENANCE","MOVE","OPERATION","REMOVAL","RENOVATION","IfcTendonAnchorTypeEnum","FIXED_END","TENSIONING_END","IfcTendonConduitTypeEnum","GROUTING_DUCT","TRUMPET","DIABOLO","IfcTendonTypeEnum","BAR","COATED","STRAND","WIRE","IfcTextPath","UP","DOWN","IfcTimeSeriesDataTypeEnum","CONTINUOUS","DISCRETEBINARY","PIECEWISEBINARY","PIECEWISECONSTANT","PIECEWISECONTINUOUS","IfcTransformerTypeEnum","FREQUENCY","INVERTER","RECTIFIER","VOLTAGE","IfcTransitionCode","DISCONTINUOUS","CONTSAMEGRADIENT","CONTSAMEGRADIENTSAMECURVATURE","IfcTransitionCurveType","BIQUADRATICPARABOLA","BLOSSCURVE","CLOTHOIDCURVE","COSINECURVE","CUBICPARABOLA","SINECURVE","IfcTransportElementTypeEnum","ELEVATOR","ESCALATOR","MOVINGWALKWAY","CRANEWAY","LIFTINGGEAR","IfcTrimmingPreference","CARTESIAN","IfcTubeBundleTypeEnum","FINNED","IfcUnitEnum","ABSORBEDDOSEUNIT","AMOUNTOFSUBSTANCEUNIT","AREAUNIT","DOSEEQUIVALENTUNIT","ELECTRICCAPACITANCEUNIT","ELECTRICCHARGEUNIT","ELECTRICCONDUCTANCEUNIT","ELECTRICCURRENTUNIT","ELECTRICRESISTANCEUNIT","ELECTRICVOLTAGEUNIT","ENERGYUNIT","FORCEUNIT","FREQUENCYUNIT","ILLUMINANCEUNIT","INDUCTANCEUNIT","LENGTHUNIT","LUMINOUSFLUXUNIT","LUMINOUSINTENSITYUNIT","MAGNETICFLUXDENSITYUNIT","MAGNETICFLUXUNIT","MASSUNIT","PLANEANGLEUNIT","POWERUNIT","PRESSUREUNIT","RADIOACTIVITYUNIT","SOLIDANGLEUNIT","THERMODYNAMICTEMPERATUREUNIT","TIMEUNIT","VOLUMEUNIT","IfcUnitaryControlElementTypeEnum","ALARMPANEL","CONTROLPANEL","GASDETECTIONPANEL","INDICATORPANEL","MIMICPANEL","HUMIDISTAT","THERMOSTAT","WEATHERSTATION","IfcUnitaryEquipmentTypeEnum","AIRHANDLER","AIRCONDITIONINGUNIT","DEHUMIDIFIER","SPLITSYSTEM","ROOFTOPUNIT","IfcValveTypeEnum","AIRRELEASE","ANTIVACUUM","CHANGEOVER","CHECK","COMMISSIONING","DIVERTING","DRAWOFFCOCK","DOUBLECHECK","DOUBLEREGULATING","FAUCET","FLUSHING","GASCOCK","GASTAP","ISOLATING","MIXING","PRESSUREREDUCING","PRESSURERELIEF","REGULATING","SAFETYCUTOFF","STEAMTRAP","STOPCOCK","IfcVibrationDamperTypeEnum","BENDING_YIELD","SHEAR_YIELD","AXIAL_YIELD","VISCOUS","RUBBER","IfcVibrationIsolatorTypeEnum","COMPRESSION","SPRING","BASE","IfcVoidingFeatureTypeEnum","CUTOUT","NOTCH","HOLE","MITER","CHAMFER","IfcWallTypeEnum","MOVABLE","PARAPET","PARTITIONING","PLUMBINGWALL","SOLIDWALL","STANDARD","ELEMENTEDWALL","RETAININGWALL","IfcWasteTerminalTypeEnum","FLOORTRAP","FLOORWASTE","GULLYSUMP","GULLYTRAP","ROOFDRAIN","WASTEDISPOSALUNIT","WASTETRAP","IfcWindowPanelOperationEnum","SIDEHUNGRIGHTHAND","SIDEHUNGLEFTHAND","TILTANDTURNRIGHTHAND","TILTANDTURNLEFTHAND","TOPHUNG","BOTTOMHUNG","PIVOTHORIZONTAL","PIVOTVERTICAL","SLIDINGHORIZONTAL","SLIDINGVERTICAL","REMOVABLECASEMENT","FIXEDCASEMENT","OTHEROPERATION","IfcWindowPanelPositionEnum","BOTTOM","TOP","IfcWindowStyleConstructionEnum","OTHER_CONSTRUCTION","IfcWindowStyleOperationEnum","SINGLE_PANEL","DOUBLE_PANEL_VERTICAL","DOUBLE_PANEL_HORIZONTAL","TRIPLE_PANEL_VERTICAL","TRIPLE_PANEL_BOTTOM","TRIPLE_PANEL_TOP","TRIPLE_PANEL_LEFT","TRIPLE_PANEL_RIGHT","TRIPLE_PANEL_HORIZONTAL","IfcWindowTypeEnum","WINDOW","SKYLIGHT","LIGHTDOME","IfcWindowTypePartitioningEnum","IfcWorkCalendarTypeEnum","FIRSTSHIFT","SECONDSHIFT","THIRDSHIFT","IfcWorkPlanTypeEnum","ACTUAL","BASELINE","PLANNED","IfcWorkScheduleTypeEnum","expressID","GlobalId","OwnerHistory","Name","Description","ObjectType","Identification","PredefinedType","Status","LongDescription","static","tape","ToTape","TheActor","Role","UserDefinedRole","ObjectPlacement","Representation","Tag","ApplicableOccurrence","HasPropertySets","RepresentationMaps","ElementType","Purpose","UserDefinedPurpose","Outer","Voids","Bounds","FaceSurface","SameSense","Axis","StartDistAlong","Segments","TangentialContinuity","StartTag","EndTag","CurveGeometry","HorizontalLength","StartHeight","StartGradient","Radius","IsConvex","ParabolaConstant","Horizontal","Vertical","OuterBoundary","InnerBoundaries","ApplicationDeveloper","Version","ApplicationFullName","ApplicationIdentifier","AppliedValue","UnitBasis","ApplicableDate","FixedUntilDate","Category","Condition","ArithmeticOperator","Components","Identifier","TimeOfApproval","Level","Qualifier","RequestingApproval","GivingApproval","RelatingApproval","RelatedApprovals","ProfileType","ProfileName","OuterCurve","Curve","InnerCurves","OriginalValue","CurrentValue","TotalReplacementCost","Owner","User","ResponsiblePerson","IncorporationDate","DepreciatedValue","Position","BottomFlangeWidth","OverallDepth","WebThickness","BottomFlangeThickness","BottomFlangeFilletRadius","TopFlangeWidth","TopFlangeThickness","TopFlangeFilletRadius","BottomFlangeEdgeRadius","BottomFlangeSlope","TopFlangeEdgeRadius","TopFlangeSlope","Location","RefDirection","Degree","ControlPointsList","CurveForm","ClosedCurve","SelfIntersect","KnotMultiplicities","Knots","KnotSpec","UDegree","VDegree","SurfaceForm","UClosed","VClosed","UMultiplicities","VMultiplicities","UKnots","VKnots","RepeatS","RepeatT","Mode","TextureTransform","Parameter","RasterFormat","RasterCode","XLength","YLength","ZLength","Operator","FirstOperand","SecondOperand","TranslationalStiffnessByLengthX","TranslationalStiffnessByLengthY","TranslationalStiffnessByLengthZ","RotationalStiffnessByLengthX","RotationalStiffnessByLengthY","RotationalStiffnessByLengthZ","TranslationalStiffnessByAreaX","TranslationalStiffnessByAreaY","TranslationalStiffnessByAreaZ","TranslationalStiffnessX","TranslationalStiffnessY","TranslationalStiffnessZ","RotationalStiffnessX","RotationalStiffnessY","RotationalStiffnessZ","WarpingStiffness","Corner","XDim","YDim","ZDim","BaseSurface","AgreementFlag","Enclosure","LongName","CompositionType","ElevationOfRefHeight","ElevationOfTerrain","BuildingAddress","Elevation","Depth","Width","WallThickness","Girth","InternalFilletRadius","Coordinates","CoordList","TagList","Axis1","Axis2","LocalOrigin","Scale","Scale2","Axis3","Scale3","Thickness","StartPoint","StartDirection","SegmentLength","IsCCW","Source","Edition","EditionDate","ReferenceTokens","ReferencedSource","Sort","CfsFaces","Red","Green","Blue","ColourList","UsageName","HasProperties","TemplateType","HasPropertyTemplates","Transition","ParentCurve","Profiles","Label","CurveOnRelatingElement","CurveOnRelatedElement","PointOnRelatingElement","PointOnRelatedElement","EccentricityInX","EccentricityInY","EccentricityInZ","SurfaceOnRelatingElement","SurfaceOnRelatedElement","VolumeOnRelatingElement","VolumeOnRelatedElement","ConstraintGrade","ConstraintSource","CreatingActor","CreationTime","UserDefinedGrade","Usage","BaseCosts","BaseQuantity","ResourceType","Phase","RepresentationContexts","UnitsInContext","Dimensions","UnitType","ConversionFactor","ConversionOffset","SourceCRS","TargetCRS","GeodeticDatum","VerticalDatum","CostValues","CostQuantities","SubmittedOn","UpdateDate","TreeRootExpression","RelatingMonetaryUnit","RelatedMonetaryUnit","ExchangeRate","RateDateTime","RateSource","BasisSurface","Boundaries","ImplicitOuter","CurveFont","CurveWidth","CurveColour","ModelOrDraughting","PatternList","CurveFontScaling","VisibleSegmentLength","InvisibleSegmentLength","ParentProfile","Elements","UserDefinedType","Unit","Exponent","LengthExponent","MassExponent","TimeExponent","ElectricCurrentExponent","ThermodynamicTemperatureExponent","AmountOfSubstanceExponent","LuminousIntensityExponent","DirectionRatios","DistanceAlong","OffsetLateral","OffsetVertical","OffsetLongitudinal","AlongHorizontal","FlowDirection","SystemType","IntendedUse","Scope","Revision","DocumentOwner","Editors","LastRevisionTime","ElectronicFormat","ValidFrom","ValidUntil","Confidentiality","RelatingDocument","RelatedDocuments","RelationshipType","ReferencedDocument","OverallHeight","OverallWidth","OperationType","UserDefinedOperationType","LiningDepth","LiningThickness","ThresholdDepth","ThresholdThickness","TransomThickness","TransomOffset","LiningOffset","ThresholdOffset","CasingThickness","CasingDepth","ShapeAspectStyle","LiningToPanelOffsetX","LiningToPanelOffsetY","PanelDepth","PanelOperation","PanelWidth","PanelPosition","ConstructionType","ParameterTakesPrecedence","Sizeable","EdgeStart","EdgeEnd","EdgeGeometry","EdgeList","AssemblyPlace","MethodOfMeasurement","Quantities","SemiAxis1","SemiAxis2","EventTriggerType","UserDefinedEventTriggerType","EventOccurenceTime","DataOrigin","UserDefinedDataOrigin","ActualDate","EarlyDate","LateDate","ScheduleDate","ProcessType","Properties","RelatingReference","RelatedResourceObjects","SweptArea","ExtrudedDirection","EndSweptArea","FbsmFaces","Bound","Orientation","TensionFailureX","TensionFailureY","TensionFailureZ","CompressionFailureX","CompressionFailureY","CompressionFailureZ","FillStyles","ModelorDraughting","HatchLineAppearance","StartOfNextHatchLine","PointOfReferenceHatchLine","PatternStart","HatchLineAngle","TilingPattern","Tiles","TilingScale","Directrix","StartParam","EndParam","FixedReference","ContextIdentifier","ContextType","CoordinateSpaceDimension","Precision","WorldCoordinateSystem","TrueNorth","ParentContext","TargetScale","TargetView","UserDefinedTargetView","UAxes","VAxes","WAxes","AxisTag","AxisCurve","PlacementRelTo","PlacementLocation","PlacementRefDirection","FlangeThickness","FilletRadius","FlangeEdgeRadius","FlangeSlope","URLReference","MappedTo","Opacity","Colours","ColourIndex","Points","CoordIndex","InnerCoordIndices","Maps","TexCoords","TexCoordIndex","Curve3D","AssociatedGeometry","MasterRepresentation","Jurisdiction","ResponsiblePersons","LastUpdateDate","StartTime","EndTime","TimeSeriesDataType","Values","TimeStamp","ListValues","EdgeRadius","LegSlope","LagValue","DurationType","Publisher","VersionDate","Language","ReferencedLibrary","MainPlaneAngle","SecondaryPlaneAngle","LuminousIntensity","LightDistributionCurve","DistributionData","LightColour","AmbientIntensity","Intensity","ColourAppearance","ColourTemperature","LuminousFlux","LightEmissionSource","LightDistributionDataSource","ConstantAttenuation","DistanceAttenuation","QuadricAttenuation","ConcentrationExponent","SpreadAngle","BeamWidthAngle","Pnt","Dir","PlacementMeasuredAlong","Distance","CartesianPosition","RelativePlacement","Eastings","Northings","OrthogonalHeight","XAxisAbscissa","XAxisOrdinate","MappingSource","MappingTarget","MaterialClassifications","ClassifiedMaterial","Material","Fraction","MaterialConstituents","Representations","RepresentedMaterial","LayerThickness","IsVentilated","Priority","MaterialLayers","LayerSetName","ForLayerSet","LayerSetDirection","DirectionSense","OffsetFromReferenceLine","ReferenceExtent","OffsetDirection","OffsetValues","Materials","Profile","MaterialProfiles","CompositeProfile","ForProfileSet","CardinalPoint","ForProfileEndSet","CardinalEndPoint","RelatingMaterial","RelatedMaterials","Expression","ValueComponent","UnitComponent","NominalDiameter","NominalLength","Benchmark","ValueSource","DataValue","ReferencePath","Currency","BenchmarkValues","LogicalAggregator","ObjectiveQualifier","UserDefinedQualifier","BasisCurve","Roles","Addresses","RelatingOrganization","RelatedOrganizations","LateralAxisDirection","VerticalAxisDirection","EdgeElement","OwningUser","OwningApplication","State","ChangeAction","LastModifiedDate","LastModifyingUser","LastModifyingApplication","CreationDate","ReferenceCurve","LifeCyclePhase","FrameDepth","FrameThickness","FamilyName","GivenName","MiddleNames","PrefixTitles","SuffixTitles","ThePerson","TheOrganization","HasQuantities","Discrimination","Quality","Height","ColourComponents","Pixel","SizeInX","SizeInY","Placement","PointParameter","PointParameterU","PointParameterV","Polygon","PolygonalBoundary","Closed","Faces","PnIndex","InternalLocation","AddressLines","PostalBox","Town","Region","PostalCode","Country","AssignedItems","LayerOn","LayerFrozen","LayerBlocked","LayerStyles","Styles","ProfileDefinition","MapProjection","MapZone","MapUnit","UpperBoundValue","LowerBoundValue","SetPointValue","DependingProperty","DependantProperty","EnumerationValues","EnumerationReference","PropertyReference","ApplicableEntity","NominalValue","DefiningValues","DefinedValues","DefiningUnit","DefinedUnit","CurveInterpolation","ProxyType","AreaValue","Formula","CountValue","LengthValue","TimeValue","VolumeValue","WeightValue","WeightsData","InnerFilletRadius","OuterFilletRadius","U1","V1","U2","V2","Usense","Vsense","RecurrenceType","DayComponent","WeekdayComponent","MonthComponent","Interval","Occurrences","TimePeriods","TypeIdentifier","AttributeIdentifier","InstanceName","ListPositions","InnerReference","RestartDistance","TimeStep","TotalCrossSectionArea","SteelGrade","BarSurface","EffectiveDepth","NominalBarDiameter","BarCount","DefinitionType","ReinforcementSectionDefinitions","CrossSectionArea","BarLength","BendingShapeCode","BendingParameters","MeshLength","MeshWidth","LongitudinalBarNominalDiameter","TransverseBarNominalDiameter","LongitudinalBarCrossSectionArea","TransverseBarCrossSectionArea","LongitudinalBarSpacing","TransverseBarSpacing","RelatingObject","RelatedObjects","RelatedObjectsType","RelatingActor","ActingRole","RelatingControl","RelatingGroup","Factor","RelatingProcess","QuantityInProcess","RelatingProduct","RelatingResource","RelatingClassification","Intent","RelatingConstraint","RelatingLibrary","ConnectionGeometry","RelatingElement","RelatedElement","RelatingPriorities","RelatedPriorities","RelatedConnectionType","RelatingConnectionType","RelatingPort","RelatedPort","RealizingElement","RelatedStructuralActivity","RelatingStructuralMember","RelatedStructuralConnection","AppliedCondition","AdditionalConditions","SupportedLength","ConditionCoordinateSystem","ConnectionConstraint","RealizingElements","ConnectionType","RelatedElements","RelatingStructure","RelatingBuildingElement","RelatedCoverings","RelatingSpace","RelatingContext","RelatedDefinitions","RelatingPropertyDefinition","RelatedPropertySets","RelatingTemplate","RelatingType","RelatingOpeningElement","RelatedBuildingElement","RelatedControlElements","RelatingFlowElement","InterferenceGeometry","InterferenceType","ImpliedOrder","RelatingPositioningElement","RelatedProducts","RelatedFeatureElement","RelatedProcess","TimeLag","SequenceType","UserDefinedSequenceType","RelatingSystem","RelatedBuildings","PhysicalOrVirtualBoundary","InternalOrExternalBoundary","ParentBoundary","CorrespondingBoundary","RelatedOpeningElement","ParamLength","ContextOfItems","RepresentationIdentifier","RepresentationType","Items","MappingOrigin","MappedRepresentation","ScheduleWork","ScheduleUsage","ScheduleStart","ScheduleFinish","ScheduleContour","LevelingDelay","IsOverAllocated","StatusTime","ActualWork","ActualUsage","ActualStart","ActualFinish","RemainingWork","RemainingUsage","Completion","Angle","BottomRadius","RoundingRadius","Prefix","SectionType","StartProfile","EndProfile","LongitudinalStartPosition","LongitudinalEndPosition","TransversePosition","ReinforcementRole","SectionDefinition","CrossSectionReinforcementDefinitions","CrossSections","CrossSectionPositions","FixedAxisVertical","SpineCurve","ShapeRepresentations","ProductDefinitional","PartOfProductDefinitionShape","SbsmBoundary","PrimaryMeasureType","SecondaryMeasureType","Enumerators","PrimaryUnit","SecondaryUnit","AccessState","RefLatitude","RefLongitude","RefElevation","LandTitleNumber","SiteAddress","SlippageX","SlippageY","SlippageZ","ElevationWithFlooring","NumberOfRisers","NumberOfTreads","RiserHeight","TreadLength","AppliedLoad","GlobalOrLocal","DestabilizingLoad","OrientationOf2DPlane","LoadedBy","HasResults","SharedPlacement","ProjectedOrTrue","ActionType","ActionSource","Coefficient","SelfWeightCoefficients","Locations","LinearForceX","LinearForceY","LinearForceZ","LinearMomentX","LinearMomentY","LinearMomentZ","PlanarForceX","PlanarForceY","PlanarForceZ","DisplacementX","DisplacementY","DisplacementZ","RotationalDisplacementRX","RotationalDisplacementRY","RotationalDisplacementRZ","Distortion","ForceX","ForceY","ForceZ","MomentX","MomentY","MomentZ","WarpingMoment","DeltaTConstant","DeltaTY","DeltaTZ","TheoryType","ResultForLoadGroup","IsLinear","Item","ParentEdge","ReferenceSurface","SweptCurve","AxisPosition","SurfaceReinforcement1","SurfaceReinforcement2","ShearReinforcement","Side","DiffuseTransmissionColour","DiffuseReflectionColour","TransmissionColour","ReflectanceColour","RefractionIndex","DispersionFactor","SurfaceColour","Transparency","DiffuseColour","ReflectionColour","SpecularColour","SpecularHighlight","ReflectanceMethod","Textures","InnerRadius","FlangeWidth","WebEdgeRadius","WebSlope","Rows","Columns","RowCells","IsHeading","WorkMethod","IsMilestone","TaskTime","ScheduleDuration","EarlyStart","EarlyFinish","LateStart","LateFinish","FreeFloat","TotalFloat","IsCritical","ActualDuration","RemainingTime","Recurrence","TelephoneNumbers","FacsimileNumbers","PagerNumber","ElectronicMailAddresses","WWWHomePageURL","MessagingIDs","TensionForce","PreStress","FrictionCoefficient","AnchorageSlip","MinCurvatureRadius","SheathDiameter","Literal","Path","Extent","BoxAlignment","TextCharacterAppearance","TextStyle","TextFontStyle","FontFamily","FontStyle","FontVariant","FontWeight","FontSize","Colour","BackgroundColour","TextIndent","TextAlign","TextDecoration","LetterSpacing","WordSpacing","TextTransform","LineHeight","Vertices","TexCoordsList","MajorRadius","MinorRadius","StartRadius","EndRadius","IsStartRadiusCCW","IsEndRadiusCCW","TransitionCurveType","BottomXDim","TopXDim","TopXOffset","Normals","Flags","Trim1","Trim2","SenseAgreement","Units","Magnitude","LoopVertex","VertexGeometry","IntersectingAxes","OffsetDistances","PartitioningType","UserDefinedPartitioningType","MullionThickness","FirstTransomOffset","SecondTransomOffset","FirstMullionOffset","SecondMullionOffset","WorkingTimes","ExceptionTimes","Creators","Duration","FinishTime","RecurrencePattern","Start","Finish","WebIFCWasm","IfcAPI","wasmModule","fs","Init","noInitialRun","OpenModel","settings","COORDINATE_TO_ORIGIN","USE_FAST_BOOLS","CIRCLE_SEGMENTS_LOW","CIRCLE_SEGMENTS_MEDIUM","CIRCLE_SEGMENTS_HIGH","CreateModel","ExportFileAsIFC","modelID","GetGeometry","geometryExpressID","GetLine","flatten","rawLineData","GetRawLineData","lineData","FlattenLine","WriteLine","lineObject","propertyName","property","isArray","WriteRawLineData","GetLineIDsWithType","GetAllLines","SetGeometryTransformation","transformationMatrix","GetVertexArray","getSubArray","GetIndexArray","sizeBytes","CloseModel","StreamAllMeshes","meshCallback","IsModelOpen","LoadAllGeometry","GetFlatMesh","SetWasmPath","mergeBufferGeometries","geometries","useGroups","isIndexed","attributesUsed","Set","attributes","morphAttributesUsed","morphAttributes","morphTargetsRelative","mergedGeometry","geometry","attributesCount","has","undefined","addGroup","indexOffset","mergedIndex","j","getX","setIndex","mergedAttribute","mergeBufferAttributes","setAttribute","numMorphTargets","morphAttributesToMerge","mergedMorphAttribute","TypedArray","itemSize","normalized","arrayLength","attribute","isInterleavedBufferAttribute","IdAttrName","merge","geoms","createGroups","newFloatAttr","newIntAttr","DEFAULT","PropsNames","aggregates","relating","related","spatial","psets","materials","IFCParser","state","BVH","loadedModels","currentWebIfcID","currentModelID","async","api","newIfcModel","loadAllGeometry","webIfcSettings","useJSON","models","mesh","items","jsonData","saveAllPlacedGeometriesByMaterial","generateAllGeometriesByMaterial","getGeometryAndMaterials","applyThreeMeshBVH","mergedByMaterial","materialID","material","values","flatMeshes","flatMesh","placedGeom","savePlacedGeometry","placedGeometry","getBufferGeometry","computeVertexNormals","matrix","getMeshMatrix","flatTransformation","applyMatrix4","saveGeometryByMaterial","placed","vertexData","getVertices","indices","getIndices","vertices","normals","extractVertexData","ifcGeomToBufferGeom","vData","GetVertexData","vDataSize","GetVertexDataSize","iData","GetIndexData","iDataSize","GetIndexDataSize","mat","fromArray","indexData","isNormalData","geom","color","colorID","y","z","w","storeGeometryAttribute","createMaterial","item","currentGeom","merged","idAttribute","fill","col","newMaterial","side","transparent","opacity","SubsetManager","selected","getSubset","currentMat","matIDNoConfig","removeSubset","remove","createSubset","config","isConfigValid","isPreviousSelection","isEasySelection","addToPreviousSelection","updatePreviousSelection","scene","createSelectionInScene","filtered","geomsByMaterial","getGeomAndMat","isDefMaterial","isDefaultMat","getMergedGeometry","mats","matID","add","hasDefaultMaterial","isValid","ids","removePrevious","previous","newSelectionGroup","containsIds","previousIds","JSON","stringify","newIds","every","flat","previousGeom","filterGeometries","selectedIDs","includes","parseInt","reduce","uuid","IfcTypesMap","PropertyManager","getExpressId","faceIndex","geoIndex","getItemProperties","recursive","getAllItemsOfType","verbose","getAllItemsOfTypeJSON","getAllItemsOfTypeWebIfcAPI","getPropertySets","elementID","getPropertyJSON","getPropertyWebIfcAPI","getTypeProperties","getMaterialsProperties","getSpatialStructure","getSpatialStructureJSON","getSpatialStructureWebIfcAPI","getSpatialTreeChunks","projectID","project","newIfcProject","getSpatialNode","typeName","filterJSONItemsByType","numKey","toUpperCase","getItemsByIDJSON","propName","resultIDs","getAllRelatedItemsOfTypeJSON","getJSONReferencesRecursively","jsonObject","getJSONItem","getMultipleJSONItems","propSetIds","getAllRelatedItemsOfTypeWebIfcAPI","lines","children","treeChunks","json","getChunksJSON","getChunksWebIfcAPI","propNames","relation","rel","saveChunk","getChildren","child","newNode","getNodeType","typeID","IDs","isRelated","getRelated","element","ele","relatedItems","TypeManager","getAllTypes","getAllTypesOfModel","modelIdCounter","nullIfcManagerErrorMessage","IFCModel","super","ifcManager","setIFCManager","manager","setWasmPath","getIfcType","modelConfig","hideItems","hideAllItems","showItems","showAllItems","BvhManager","initializeMeshBVH","computeBoundsTree","disposeBoundsTree","acceleratedRaycast","setupThreeMeshBVH","ItemsHider","modelCoordinates","expressIDCoordinatesMap","processCoordinates","getAttributes","initializeCoordinates","editCoordinates","hide","coords","getCoordinates","initial","needsUpdate","resetCoordinates","coordinates","IFCManager","parser","subsets","hider","parse","disposeMemory","model","applyWebIfcConfig","useJSONData","addModelJSONData","IFCLoader","load","onLoad","onProgress","onError","scope","loader","setPath","setResponseType","requestHeader","setWithCredentials","withCredentials","itemError"],"sourceRoot":""}