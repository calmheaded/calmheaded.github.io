"use strict";(self.webpackChunkthree_model_viewer=self.webpackChunkthree_model_viewer||[]).push([[38],{6038:function(e,t,i){i.r(t),i.d(t,{PCDLoader:function(){return s}});var n=i(216);class s extends n.aNw{constructor(e){super(e),this.littleEndian=!0}load(e,t,i,s){const r=this;var l=new n.hH6(r.manager);l.setPath(r.path),l.setResponseType("arraybuffer"),l.setRequestHeader(r.requestHeader),l.setWithCredentials(r.withCredentials),l.load(e,(function(i){try{t(r.parse(i))}catch(i){s&&s(i),r.manager.itemError(e)}}),i,s)}parse(e){var t=n.Zp0.decodeText(new Uint8Array(e)),i=function(e){var t={},i=e.search(/[\r\n]DATA\s(\S*)\s/i),n=/[\r\n]DATA\s(\S*)\s/i.exec(e.slice(i-1));if(t.data=n[1],t.headerLen=n[0].length+i,t.str=e.slice(0,t.headerLen),t.str=t.str.replace(/#.*/gi,""),t.version=/VERSION (.*)/i.exec(t.str),t.fields=/FIELDS (.*)/i.exec(t.str),t.size=/SIZE (.*)/i.exec(t.str),t.type=/TYPE (.*)/i.exec(t.str),t.count=/COUNT (.*)/i.exec(t.str),t.width=/WIDTH (.*)/i.exec(t.str),t.height=/HEIGHT (.*)/i.exec(t.str),t.viewpoint=/VIEWPOINT (.*)/i.exec(t.str),t.points=/POINTS (.*)/i.exec(t.str),null!==t.version&&(t.version=parseFloat(t.version[1])),t.fields=null!==t.fields?t.fields[1].split(" "):[],null!==t.type&&(t.type=t.type[1].split(" ")),null!==t.width&&(t.width=parseInt(t.width[1])),null!==t.height&&(t.height=parseInt(t.height[1])),null!==t.viewpoint&&(t.viewpoint=t.viewpoint[1]),null!==t.points&&(t.points=parseInt(t.points[1],10)),null===t.points&&(t.points=t.width*t.height),null!==t.size&&(t.size=t.size[1].split(" ").map((function(e){return parseInt(e,10)}))),null!==t.count)t.count=t.count[1].split(" ").map((function(e){return parseInt(e,10)}));else{t.count=[];for(let e=0,i=t.fields.length;e<i;e++)t.count.push(1)}t.offset={};let s=0;for(let r=0,l=t.fields.length;r<l;r++)"ascii"===t.data?t.offset[t.fields[r]]=r:(t.offset[t.fields[r]]=s,s+=t.size[r]*t.count[r]);return t.rowSize=s,t}(t),s=[],r=[],l=[],a=[],o=[];if("ascii"===i.data){var d=i.offset,h=t.slice(i.headerLen).split("\n");for(let e=0,t=h.length;e<t;e++)if(""!==h[e]){var p=h[e].split(" ");if(void 0!==d.x&&(s.push(parseFloat(p[d.x])),s.push(parseFloat(p[d.y])),s.push(parseFloat(p[d.z]))),void 0!==d.rgb){var u=i.fields.findIndex((e=>"rgb"===e)),f=(u=i.type[u],parseFloat(p[d.rgb]));let e=f;"F"===u&&((u=new Float32Array(1))[0]=f,e=new Int32Array(u.buffer)[0]);f=e>>16&255,u=e>>8&255;var g=e>>0&255;l.push(f/255,u/255,g/255)}void 0!==d.normal_x&&(r.push(parseFloat(p[d.normal_x])),r.push(parseFloat(p[d.normal_y])),r.push(parseFloat(p[d.normal_z]))),void 0!==d.intensity&&a.push(parseFloat(p[d.intensity])),void 0!==d.label&&o.push(parseInt(p[d.label]))}}if("binary_compressed"===i.data){t=new Uint32Array(e.slice(i.headerLen,i.headerLen+8));var w,c,v,x,b,y=t[0],E=(t=t[1],y=function(e,t){var i=e.length,n=new Uint8Array(t);let s,r,l,a=0,o=0;do{if((s=e[a++])<32){if(s++,o+s>t)throw new Error("Output buffer is not large enough");if(a+s>i)throw new Error("Invalid compressed data");for(;n[o++]=e[a++],--s;);}else{if(r=s>>5,l=o-((31&s)<<8)-1,a>=i)throw new Error("Invalid compressed data");if(7===r&&(r+=e[a++],a>=i))throw new Error("Invalid compressed data");if(l-=e[a++],o+r+2>t)throw new Error("Output buffer is not large enough");if(l<0)throw new Error("Invalid compressed data");if(l>=o)throw new Error("Invalid compressed data");for(;n[o++]=n[l++],2+--r;);}}while(a<i);return n}(new Uint8Array(e,i.headerLen+8,y),t),new DataView(y.buffer)),m=i.offset;for(let e=0;e<i.points;e++)void 0!==m.x&&(w=i.fields.indexOf("x"),c=i.fields.indexOf("y"),v=i.fields.indexOf("z"),s.push(E.getFloat32(i.points*m.x+i.size[w]*e,this.littleEndian)),s.push(E.getFloat32(i.points*m.y+i.size[c]*e,this.littleEndian)),s.push(E.getFloat32(i.points*m.z+i.size[v]*e,this.littleEndian))),void 0!==m.rgb&&(w=i.fields.indexOf("rgb"),l.push(E.getUint8(i.points*m.rgb+i.size[w]*e+2)/255),l.push(E.getUint8(i.points*m.rgb+i.size[w]*e+1)/255),l.push(E.getUint8(i.points*m.rgb+i.size[w]*e)/255)),void 0!==m.normal_x&&(c=i.fields.indexOf("normal_x"),v=i.fields.indexOf("normal_y"),x=i.fields.indexOf("normal_z"),r.push(E.getFloat32(i.points*m.normal_x+i.size[c]*e,this.littleEndian)),r.push(E.getFloat32(i.points*m.normal_y+i.size[v]*e,this.littleEndian)),r.push(E.getFloat32(i.points*m.normal_z+i.size[x]*e,this.littleEndian))),void 0!==m.intensity&&(x=i.fields.indexOf("intensity"),a.push(E.getFloat32(i.points*m.intensity+i.size[x]*e,this.littleEndian))),void 0!==m.label&&(b=i.fields.indexOf("label"),o.push(E.getInt32(i.points*m.label+i.size[b]*e,this.littleEndian)))}if("binary"===i.data){var z=new DataView(e,i.headerLen),F=i.offset;for(let e=0,t=0;e<i.points;e++,t+=i.rowSize)void 0!==F.x&&(s.push(z.getFloat32(t+F.x,this.littleEndian)),s.push(z.getFloat32(t+F.y,this.littleEndian)),s.push(z.getFloat32(t+F.z,this.littleEndian))),void 0!==F.rgb&&(l.push(z.getUint8(t+F.rgb+2)/255),l.push(z.getUint8(t+F.rgb+1)/255),l.push(z.getUint8(t+F.rgb+0)/255)),void 0!==F.normal_x&&(r.push(z.getFloat32(t+F.normal_x,this.littleEndian)),r.push(z.getFloat32(t+F.normal_y,this.littleEndian)),r.push(z.getFloat32(t+F.normal_z,this.littleEndian))),void 0!==F.intensity&&a.push(z.getFloat32(t+F.intensity,this.littleEndian)),void 0!==F.label&&o.push(z.getInt32(t+F.label,this.littleEndian))}return t=new n.u9r,0<s.length&&t.setAttribute("position",new n.a$l(s,3)),0<r.length&&t.setAttribute("normal",new n.a$l(r,3)),0<l.length&&t.setAttribute("color",new n.a$l(l,3)),0<a.length&&t.setAttribute("intensity",new n.a$l(a,1)),0<o.length&&t.setAttribute("label",new n.j87(o,1)),t.computeBoundingSphere(),y=new n.UY4({size:.005}),0<l.length&&(y.vertexColors=!0),new n.woe(t,y)}}}}]);