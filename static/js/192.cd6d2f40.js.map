{"version":3,"file":"static/js/192.cd6d2f40.js","mappings":"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","sources":["webpack://three-model-viewer/./node_modules/_three@0.148.0@three/examples/jsm/loaders/ColladaLoader.js"],"sourcesContent":["import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tFrontSide,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tScene,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTextureLoader,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from 'three';\nimport { TGALoader } from '../loaders/TGALoader.js';\n\nclass ColladaLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( text, path ) {\n\n\t\tfunction getElementsByTagName( xml, name ) {\n\n\t\t\t// Non recursive xml.getElementsByTagName() ...\n\n\t\t\tconst array = [];\n\t\t\tconst childNodes = xml.childNodes;\n\n\t\t\tfor ( let i = 0, l = childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = childNodes[ i ];\n\n\t\t\t\tif ( child.nodeName === name ) {\n\n\t\t\t\t\tarray.push( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseStrings( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tconst parts = text.trim().split( /\\s+/ );\n\t\t\tconst array = new Array( parts.length );\n\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parts[ i ];\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseFloats( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tconst parts = text.trim().split( /\\s+/ );\n\t\t\tconst array = new Array( parts.length );\n\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parseFloat( parts[ i ] );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseInts( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tconst parts = text.trim().split( /\\s+/ );\n\t\t\tconst array = new Array( parts.length );\n\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parseInt( parts[ i ] );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseId( text ) {\n\n\t\t\treturn text.substring( 1 );\n\n\t\t}\n\n\t\tfunction generateId() {\n\n\t\t\treturn 'three_default_' + ( count ++ );\n\n\t\t}\n\n\t\tfunction isEmpty( object ) {\n\n\t\t\treturn Object.keys( object ).length === 0;\n\n\t\t}\n\n\t\t// asset\n\n\t\tfunction parseAsset( xml ) {\n\n\t\t\treturn {\n\t\t\t\tunit: parseAssetUnit( getElementsByTagName( xml, 'unit' )[ 0 ] ),\n\t\t\t\tupAxis: parseAssetUpAxis( getElementsByTagName( xml, 'up_axis' )[ 0 ] )\n\t\t\t};\n\n\t\t}\n\n\t\tfunction parseAssetUnit( xml ) {\n\n\t\t\tif ( ( xml !== undefined ) && ( xml.hasAttribute( 'meter' ) === true ) ) {\n\n\t\t\t\treturn parseFloat( xml.getAttribute( 'meter' ) );\n\n\t\t\t} else {\n\n\t\t\t\treturn 1; // default 1 meter\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAssetUpAxis( xml ) {\n\n\t\t\treturn xml !== undefined ? xml.textContent : 'Y_UP';\n\n\t\t}\n\n\t\t// library\n\n\t\tfunction parseLibrary( xml, libraryName, nodeName, parser ) {\n\n\t\t\tconst library = getElementsByTagName( xml, libraryName )[ 0 ];\n\n\t\t\tif ( library !== undefined ) {\n\n\t\t\t\tconst elements = getElementsByTagName( library, nodeName );\n\n\t\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\t\tparser( elements[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildLibrary( data, builder ) {\n\n\t\t\tfor ( const name in data ) {\n\n\t\t\t\tconst object = data[ name ];\n\t\t\t\tobject.build = builder( data[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// get\n\n\t\tfunction getBuild( data, builder ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\tdata.build = builder( data );\n\n\t\t\treturn data.build;\n\n\t\t}\n\n\t\t// animation\n\n\t\tfunction parseAnimation( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsources: {},\n\t\t\t\tsamplers: {},\n\t\t\t\tchannels: {}\n\t\t\t};\n\n\t\t\tlet hasChildren = false;\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tlet id;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'sampler':\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.samplers[ id ] = parseAnimationSampler( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'channel':\n\t\t\t\t\t\tid = child.getAttribute( 'target' );\n\t\t\t\t\t\tdata.channels[ id ] = parseAnimationChannel( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'animation':\n\t\t\t\t\t\t// hierarchy of related animations\n\t\t\t\t\t\tparseAnimation( child );\n\t\t\t\t\t\thasChildren = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasChildren === false ) {\n\n\t\t\t\t// since 'id' attributes can be optional, it's necessary to generate a UUID for unqiue assignment\n\n\t\t\t\tlibrary.animations[ xml.getAttribute( 'id' ) || MathUtils.generateUUID() ] = data;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimationSampler( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinputs: {},\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseAnimationChannel( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tconst target = xml.getAttribute( 'target' );\n\n\t\t\t// parsing SID Addressing Syntax\n\n\t\t\tlet parts = target.split( '/' );\n\n\t\t\tconst id = parts.shift();\n\t\t\tlet sid = parts.shift();\n\n\t\t\t// check selection syntax\n\n\t\t\tconst arraySyntax = ( sid.indexOf( '(' ) !== - 1 );\n\t\t\tconst memberSyntax = ( sid.indexOf( '.' ) !== - 1 );\n\n\t\t\tif ( memberSyntax ) {\n\n\t\t\t\t//  member selection access\n\n\t\t\t\tparts = sid.split( '.' );\n\t\t\t\tsid = parts.shift();\n\t\t\t\tdata.member = parts.shift();\n\n\t\t\t} else if ( arraySyntax ) {\n\n\t\t\t\t// array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\n\n\t\t\t\tconst indices = sid.split( '(' );\n\t\t\t\tsid = indices.shift();\n\n\t\t\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\t\tindices[ i ] = parseInt( indices[ i ].replace( /\\)/, '' ) );\n\n\t\t\t\t}\n\n\t\t\t\tdata.indices = indices;\n\n\t\t\t}\n\n\t\t\tdata.id = id;\n\t\t\tdata.sid = sid;\n\n\t\t\tdata.arraySyntax = arraySyntax;\n\t\t\tdata.memberSyntax = memberSyntax;\n\n\t\t\tdata.sampler = parseId( xml.getAttribute( 'source' ) );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildAnimation( data ) {\n\n\t\t\tconst tracks = [];\n\n\t\t\tconst channels = data.channels;\n\t\t\tconst samplers = data.samplers;\n\t\t\tconst sources = data.sources;\n\n\t\t\tfor ( const target in channels ) {\n\n\t\t\t\tif ( channels.hasOwnProperty( target ) ) {\n\n\t\t\t\t\tconst channel = channels[ target ];\n\t\t\t\t\tconst sampler = samplers[ channel.sampler ];\n\n\t\t\t\t\tconst inputId = sampler.inputs.INPUT;\n\t\t\t\t\tconst outputId = sampler.inputs.OUTPUT;\n\n\t\t\t\t\tconst inputSource = sources[ inputId ];\n\t\t\t\t\tconst outputSource = sources[ outputId ];\n\n\t\t\t\t\tconst animation = buildAnimationChannel( channel, inputSource, outputSource );\n\n\t\t\t\t\tcreateKeyframeTracks( animation, tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t}\n\n\t\tfunction getAnimation( id ) {\n\n\t\t\treturn getBuild( library.animations[ id ], buildAnimation );\n\n\t\t}\n\n\t\tfunction buildAnimationChannel( channel, inputSource, outputSource ) {\n\n\t\t\tconst node = library.nodes[ channel.id ];\n\t\t\tconst object3D = getNode( node.id );\n\n\t\t\tconst transform = node.transforms[ channel.sid ];\n\t\t\tconst defaultMatrix = node.matrix.clone().transpose();\n\n\t\t\tlet time, stride;\n\t\t\tlet i, il, j, jl;\n\n\t\t\tconst data = {};\n\n\t\t\t// the collada spec allows the animation of data in various ways.\n\t\t\t// depending on the transform type (matrix, translate, rotate, scale), we execute different logic\n\n\t\t\tswitch ( transform ) {\n\n\t\t\t\tcase 'matrix':\n\n\t\t\t\t\tfor ( i = 0, il = inputSource.array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\ttime = inputSource.array[ i ];\n\t\t\t\t\t\tstride = i * outputSource.stride;\n\n\t\t\t\t\t\tif ( data[ time ] === undefined ) data[ time ] = {};\n\n\t\t\t\t\t\tif ( channel.arraySyntax === true ) {\n\n\t\t\t\t\t\t\tconst value = outputSource.array[ stride ];\n\t\t\t\t\t\t\tconst index = channel.indices[ 0 ] + 4 * channel.indices[ 1 ];\n\n\t\t\t\t\t\t\tdata[ time ][ index ] = value;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( j = 0, jl = outputSource.stride; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tdata[ time ][ j ] = outputSource.array[ stride + j ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'translate':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'scale':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tconst keyframes = prepareAnimationData( data, defaultMatrix );\n\n\t\t\tconst animation = {\n\t\t\t\tname: object3D.uuid,\n\t\t\t\tkeyframes: keyframes\n\t\t\t};\n\n\t\t\treturn animation;\n\n\t\t}\n\n\t\tfunction prepareAnimationData( data, defaultMatrix ) {\n\n\t\t\tconst keyframes = [];\n\n\t\t\t// transfer data into a sortable array\n\n\t\t\tfor ( const time in data ) {\n\n\t\t\t\tkeyframes.push( { time: parseFloat( time ), value: data[ time ] } );\n\n\t\t\t}\n\n\t\t\t// ensure keyframes are sorted by time\n\n\t\t\tkeyframes.sort( ascending );\n\n\t\t\t// now we clean up all animation data, so we can use them for keyframe tracks\n\n\t\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\t\ttransformAnimationData( keyframes, i, defaultMatrix.elements[ i ] );\n\n\t\t\t}\n\n\t\t\treturn keyframes;\n\n\t\t\t// array sort function\n\n\t\t\tfunction ascending( a, b ) {\n\n\t\t\t\treturn a.time - b.time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst position = new Vector3();\n\t\tconst scale = new Vector3();\n\t\tconst quaternion = new Quaternion();\n\n\t\tfunction createKeyframeTracks( animation, tracks ) {\n\n\t\t\tconst keyframes = animation.keyframes;\n\t\t\tconst name = animation.name;\n\n\t\t\tconst times = [];\n\t\t\tconst positionData = [];\n\t\t\tconst quaternionData = [];\n\t\t\tconst scaleData = [];\n\n\t\t\tfor ( let i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tconst time = keyframe.time;\n\t\t\t\tconst value = keyframe.value;\n\n\t\t\t\tmatrix.fromArray( value ).transpose();\n\t\t\t\tmatrix.decompose( position, quaternion, scale );\n\n\t\t\t\ttimes.push( time );\n\t\t\t\tpositionData.push( position.x, position.y, position.z );\n\t\t\t\tquaternionData.push( quaternion.x, quaternion.y, quaternion.z, quaternion.w );\n\t\t\t\tscaleData.push( scale.x, scale.y, scale.z );\n\n\t\t\t}\n\n\t\t\tif ( positionData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.position', times, positionData ) );\n\t\t\tif ( quaternionData.length > 0 ) tracks.push( new QuaternionKeyframeTrack( name + '.quaternion', times, quaternionData ) );\n\t\t\tif ( scaleData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.scale', times, scaleData ) );\n\n\t\t\treturn tracks;\n\n\t\t}\n\n\t\tfunction transformAnimationData( keyframes, property, defaultValue ) {\n\n\t\t\tlet keyframe;\n\n\t\t\tlet empty = true;\n\t\t\tlet i, l;\n\n\t\t\t// check, if values of a property are missing in our keyframes\n\n\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] === undefined ) {\n\n\t\t\t\t\tkeyframe.value[ property ] = null; // mark as missing\n\n\t\t\t\t} else {\n\n\t\t\t\t\tempty = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( empty === true ) {\n\n\t\t\t\t// no values at all, so we set a default value\n\n\t\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\t\tkeyframe.value[ property ] = defaultValue;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// filling gaps\n\n\t\t\t\tcreateMissingKeyframes( keyframes, property );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createMissingKeyframes( keyframes, property ) {\n\n\t\t\tlet prev, next;\n\n\t\t\tfor ( let i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] === null ) {\n\n\t\t\t\t\tprev = getPrev( keyframes, i, property );\n\t\t\t\t\tnext = getNext( keyframes, i, property );\n\n\t\t\t\t\tif ( prev === null ) {\n\n\t\t\t\t\t\tkeyframe.value[ property ] = next.value[ property ];\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( next === null ) {\n\n\t\t\t\t\t\tkeyframe.value[ property ] = prev.value[ property ];\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tinterpolate( keyframe, prev, next, property );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getPrev( keyframes, i, property ) {\n\n\t\t\twhile ( i >= 0 ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\ti --;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction getNext( keyframes, i, property ) {\n\n\t\t\twhile ( i < keyframes.length ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction interpolate( key, prev, next, property ) {\n\n\t\t\tif ( ( next.time - prev.time ) === 0 ) {\n\n\t\t\t\tkey.value[ property ] = prev.value[ property ];\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tkey.value[ property ] = ( ( key.time - prev.time ) * ( next.value[ property ] - prev.value[ property ] ) / ( next.time - prev.time ) ) + prev.value[ property ];\n\n\t\t}\n\n\t\t// animation clips\n\n\t\tfunction parseAnimationClip( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'id' ) || 'default',\n\t\t\t\tstart: parseFloat( xml.getAttribute( 'start' ) || 0 ),\n\t\t\t\tend: parseFloat( xml.getAttribute( 'end' ) || 0 ),\n\t\t\t\tanimations: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'instance_animation':\n\t\t\t\t\t\tdata.animations.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.clips[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildAnimationClip( data ) {\n\n\t\t\tconst tracks = [];\n\n\t\t\tconst name = data.name;\n\t\t\tconst duration = ( data.end - data.start ) || - 1;\n\t\t\tconst animations = data.animations;\n\n\t\t\tfor ( let i = 0, il = animations.length; i < il; i ++ ) {\n\n\t\t\t\tconst animationTracks = getAnimation( animations[ i ] );\n\n\t\t\t\tfor ( let j = 0, jl = animationTracks.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttracks.push( animationTracks[ j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, duration, tracks );\n\n\t\t}\n\n\t\tfunction getAnimationClip( id ) {\n\n\t\t\treturn getBuild( library.clips[ id ], buildAnimationClip );\n\n\t\t}\n\n\t\t// controller\n\n\t\tfunction parseController( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'skin':\n\t\t\t\t\t\t// there is exactly one skin per controller\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tdata.skin = parseSkin( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'morph':\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Morph target animation not supported yet.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.controllers[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseSkin( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsources: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_shape_matrix':\n\t\t\t\t\t\tdata.bindShapeMatrix = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tconst id = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'joints':\n\t\t\t\t\t\tdata.joints = parseJoints( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vertex_weights':\n\t\t\t\t\t\tdata.vertexWeights = parseVertexWeights( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseJoints( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinputs: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseVertexWeights( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinputs: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconst offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\tdata.inputs[ semantic ] = { id: id, offset: offset };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\tdata.vcount = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tdata.v = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildController( data ) {\n\n\t\t\tconst build = {\n\t\t\t\tid: data.id\n\t\t\t};\n\n\t\t\tconst geometry = library.geometries[ build.id ];\n\n\t\t\tif ( data.skin !== undefined ) {\n\n\t\t\t\tbuild.skin = buildSkin( data.skin );\n\n\t\t\t\t// we enhance the 'sources' property of the corresponding geometry with our skin data\n\n\t\t\t\tgeometry.sources.skinIndices = build.skin.indices;\n\t\t\t\tgeometry.sources.skinWeights = build.skin.weights;\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildSkin( data ) {\n\n\t\t\tconst BONE_LIMIT = 4;\n\n\t\t\tconst build = {\n\t\t\t\tjoints: [], // this must be an array to preserve the joint order\n\t\t\t\tindices: {\n\t\t\t\t\tarray: [],\n\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t},\n\t\t\t\tweights: {\n\t\t\t\t\tarray: [],\n\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst sources = data.sources;\n\t\t\tconst vertexWeights = data.vertexWeights;\n\n\t\t\tconst vcount = vertexWeights.vcount;\n\t\t\tconst v = vertexWeights.v;\n\t\t\tconst jointOffset = vertexWeights.inputs.JOINT.offset;\n\t\t\tconst weightOffset = vertexWeights.inputs.WEIGHT.offset;\n\n\t\t\tconst jointSource = data.sources[ data.joints.inputs.JOINT ];\n\t\t\tconst inverseSource = data.sources[ data.joints.inputs.INV_BIND_MATRIX ];\n\n\t\t\tconst weights = sources[ vertexWeights.inputs.WEIGHT.id ].array;\n\t\t\tlet stride = 0;\n\n\t\t\tlet i, j, l;\n\n\t\t\t// procces skin data for each vertex\n\n\t\t\tfor ( i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\tconst jointCount = vcount[ i ]; // this is the amount of joints that affect a single vertex\n\t\t\t\tconst vertexSkinData = [];\n\n\t\t\t\tfor ( j = 0; j < jointCount; j ++ ) {\n\n\t\t\t\t\tconst skinIndex = v[ stride + jointOffset ];\n\t\t\t\t\tconst weightId = v[ stride + weightOffset ];\n\t\t\t\t\tconst skinWeight = weights[ weightId ];\n\n\t\t\t\t\tvertexSkinData.push( { index: skinIndex, weight: skinWeight } );\n\n\t\t\t\t\tstride += 2;\n\n\t\t\t\t}\n\n\t\t\t\t// we sort the joints in descending order based on the weights.\n\t\t\t\t// this ensures, we only procced the most important joints of the vertex\n\n\t\t\t\tvertexSkinData.sort( descending );\n\n\t\t\t\t// now we provide for each vertex a set of four index and weight values.\n\t\t\t\t// the order of the skin data matches the order of vertices\n\n\t\t\t\tfor ( j = 0; j < BONE_LIMIT; j ++ ) {\n\n\t\t\t\t\tconst d = vertexSkinData[ j ];\n\n\t\t\t\t\tif ( d !== undefined ) {\n\n\t\t\t\t\t\tbuild.indices.array.push( d.index );\n\t\t\t\t\t\tbuild.weights.array.push( d.weight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbuild.indices.array.push( 0 );\n\t\t\t\t\t\tbuild.weights.array.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// setup bind matrix\n\n\t\t\tif ( data.bindShapeMatrix ) {\n\n\t\t\t\tbuild.bindMatrix = new Matrix4().fromArray( data.bindShapeMatrix ).transpose();\n\n\t\t\t} else {\n\n\t\t\t\tbuild.bindMatrix = new Matrix4().identity();\n\n\t\t\t}\n\n\t\t\t// process bones and inverse bind matrix data\n\n\t\t\tfor ( i = 0, l = jointSource.array.length; i < l; i ++ ) {\n\n\t\t\t\tconst name = jointSource.array[ i ];\n\t\t\t\tconst boneInverse = new Matrix4().fromArray( inverseSource.array, i * inverseSource.stride ).transpose();\n\n\t\t\t\tbuild.joints.push( { name: name, boneInverse: boneInverse } );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t\t// array sort function\n\n\t\t\tfunction descending( a, b ) {\n\n\t\t\t\treturn b.weight - a.weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getController( id ) {\n\n\t\t\treturn getBuild( library.controllers[ id ], buildController );\n\n\t\t}\n\n\t\t// image\n\n\t\tfunction parseImage( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinit_from: getElementsByTagName( xml, 'init_from' )[ 0 ].textContent\n\t\t\t};\n\n\t\t\tlibrary.images[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildImage( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data.init_from;\n\n\t\t}\n\n\t\tfunction getImage( id ) {\n\n\t\t\tconst data = library.images[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildImage );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find image with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// effect\n\n\t\tfunction parseEffect( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'profile_COMMON':\n\t\t\t\t\t\tdata.profile = parseEffectProfileCOMMON( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.effects[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseEffectProfileCOMMON( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsurfaces: {},\n\t\t\t\tsamplers: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'newparam':\n\t\t\t\t\t\tparseEffectNewparam( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tdata.technique = parseEffectTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectNewparam( xml, data ) {\n\n\t\t\tconst sid = xml.getAttribute( 'sid' );\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'surface':\n\t\t\t\t\t\tdata.surfaces[ sid ] = parseEffectSurface( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'sampler2D':\n\t\t\t\t\t\tdata.samplers[ sid ] = parseEffectSampler( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectSurface( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'init_from':\n\t\t\t\t\t\tdata.init_from = child.textContent;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectSampler( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tdata.source = child.textContent;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'constant':\n\t\t\t\t\tcase 'lambert':\n\t\t\t\t\tcase 'blinn':\n\t\t\t\t\tcase 'phong':\n\t\t\t\t\t\tdata.type = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseEffectParameters( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameters( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'emission':\n\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\tcase 'specular':\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\tcase 'ambient':\n\t\t\t\t\tcase 'shininess':\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectParameter( child );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tdata[ child.nodeName ] = {\n\t\t\t\t\t\t\topaque: child.hasAttribute( 'opaque' ) ? child.getAttribute( 'opaque' ) : 'A_ONE',\n\t\t\t\t\t\t\tdata: parseEffectParameter( child )\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameter( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), extra: parseEffectParameterTexture( child ) };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameterTexture( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\ttechnique: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tparseEffectParameterTextureExtra( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameterTextureExtra( xml, data ) {\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tparseEffectParameterTextureExtraTechnique( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectParameterTextureExtraTechnique( xml, data ) {\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'repeatU':\n\t\t\t\t\tcase 'repeatV':\n\t\t\t\t\tcase 'offsetU':\n\t\t\t\t\tcase 'offsetV':\n\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'wrapU':\n\t\t\t\t\tcase 'wrapV':\n\n\t\t\t\t\t\t// some files have values for wrapU/wrapV which become NaN via parseInt\n\n\t\t\t\t\t\tif ( child.textContent.toUpperCase() === 'TRUE' ) {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 1;\n\n\t\t\t\t\t\t} else if ( child.textContent.toUpperCase() === 'FALSE' ) {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseInt( child.textContent );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectExtraTechniqueBump( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectExtra( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tdata.technique = parseEffectExtraTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectExtraTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'double_sided':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseInt( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectExtraTechniqueBump( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectExtraTechniqueBump( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), texcoord: child.getAttribute( 'texcoord' ), extra: parseEffectParameterTexture( child ) };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildEffect( data ) {\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getEffect( id ) {\n\n\t\t\treturn getBuild( library.effects[ id ], buildEffect );\n\n\t\t}\n\n\t\t// material\n\n\t\tfunction parseMaterial( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'instance_effect':\n\t\t\t\t\t\tdata.url = parseId( child.getAttribute( 'url' ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.materials[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction getTextureLoader( image ) {\n\n\t\t\tlet loader;\n\n\t\t\tlet extension = image.slice( ( image.lastIndexOf( '.' ) - 1 >>> 0 ) + 2 ); // http://www.jstips.co/en/javascript/get-file-extension/\n\t\t\textension = extension.toLowerCase();\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'tga':\n\t\t\t\t\tloader = tgaLoader;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tloader = textureLoader;\n\n\t\t\t}\n\n\t\t\treturn loader;\n\n\t\t}\n\n\t\tfunction buildMaterial( data ) {\n\n\t\t\tconst effect = getEffect( data.url );\n\t\t\tconst technique = effect.profile.technique;\n\n\t\t\tlet material;\n\n\t\t\tswitch ( technique.type ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\tcase 'blinn':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmaterial = new MeshBasicMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.name = data.name || '';\n\n\t\t\tfunction getTexture( textureObject, encoding = null ) {\n\n\t\t\t\tconst sampler = effect.profile.samplers[ textureObject.id ];\n\t\t\t\tlet image = null;\n\n\t\t\t\t// get image\n\n\t\t\t\tif ( sampler !== undefined ) {\n\n\t\t\t\t\tconst surface = effect.profile.surfaces[ sampler.source ];\n\t\t\t\t\timage = getImage( surface.init_from );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).' );\n\t\t\t\t\timage = getImage( textureObject.id );\n\n\t\t\t\t}\n\n\t\t\t\t// create texture if image is avaiable\n\n\t\t\t\tif ( image !== null ) {\n\n\t\t\t\t\tconst loader = getTextureLoader( image );\n\n\t\t\t\t\tif ( loader !== undefined ) {\n\n\t\t\t\t\t\tconst texture = loader.load( image );\n\n\t\t\t\t\t\tconst extra = textureObject.extra;\n\n\t\t\t\t\t\tif ( extra !== undefined && extra.technique !== undefined && isEmpty( extra.technique ) === false ) {\n\n\t\t\t\t\t\t\tconst technique = extra.technique;\n\n\t\t\t\t\t\t\ttexture.wrapS = technique.wrapU ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\t\t\t\t\ttexture.wrapT = technique.wrapV ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\t\t\t\t\ttexture.offset.set( technique.offsetU || 0, technique.offsetV || 0 );\n\t\t\t\t\t\t\ttexture.repeat.set( technique.repeatU || 1, technique.repeatV || 1 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttexture.wrapS = RepeatWrapping;\n\t\t\t\t\t\t\ttexture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( encoding !== null ) {\n\n\t\t\t\t\t\t\ttexture.encoding = encoding;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Loader for texture %s not found.', image );\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t create texture with ID:', textureObject.id );\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst parameters = technique.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tconst parameter = parameters[ key ];\n\n\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\t\tif ( parameter.color ) material.color.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.map = getTexture( parameter.texture, sRGBEncoding );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specular':\n\t\t\t\t\t\tif ( parameter.color && material.specular ) material.specular.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.specularMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tif ( parameter.texture ) material.normalMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'ambient':\n\t\t\t\t\t\tif ( parameter.texture ) material.lightMap = getTexture( parameter.texture, sRGBEncoding );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shininess':\n\t\t\t\t\t\tif ( parameter.float && material.shininess ) material.shininess = parameter.float;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'emission':\n\t\t\t\t\t\tif ( parameter.color && material.emissive ) material.emissive.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.emissiveMap = getTexture( parameter.texture, sRGBEncoding );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterial.color.convertSRGBToLinear();\n\t\t\tif ( material.specular ) material.specular.convertSRGBToLinear();\n\t\t\tif ( material.emissive ) material.emissive.convertSRGBToLinear();\n\n\t\t\t//\n\n\t\t\tlet transparent = parameters[ 'transparent' ];\n\t\t\tlet transparency = parameters[ 'transparency' ];\n\n\t\t\t// <transparency> does not exist but <transparent>\n\n\t\t\tif ( transparency === undefined && transparent ) {\n\n\t\t\t\ttransparency = {\n\t\t\t\t\tfloat: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// <transparent> does not exist but <transparency>\n\n\t\t\tif ( transparent === undefined && transparency ) {\n\n\t\t\t\ttransparent = {\n\t\t\t\t\topaque: 'A_ONE',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tcolor: [ 1, 1, 1, 1 ]\n\t\t\t\t\t} };\n\n\t\t\t}\n\n\t\t\tif ( transparent && transparency ) {\n\n\t\t\t\t// handle case if a texture exists but no color\n\n\t\t\t\tif ( transparent.data.texture ) {\n\n\t\t\t\t\t// we do not set an alpha map (see #13792)\n\n\t\t\t\t\tmaterial.transparent = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst color = transparent.data.color;\n\n\t\t\t\t\tswitch ( transparent.opaque ) {\n\n\t\t\t\t\t\tcase 'A_ONE':\n\t\t\t\t\t\t\tmaterial.opacity = color[ 3 ] * transparency.float;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'RGB_ZERO':\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 0 ] * transparency.float );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'A_ZERO':\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 3 ] * transparency.float );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'RGB_ONE':\n\t\t\t\t\t\t\tmaterial.opacity = color[ 0 ] * transparency.float;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.', transparent.opaque );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.opacity < 1 ) material.transparent = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\n\t\t\tif ( technique.extra !== undefined && technique.extra.technique !== undefined ) {\n\n\t\t\t\tconst techniques = technique.extra.technique;\n\n\t\t\t\tfor ( const k in techniques ) {\n\n\t\t\t\t\tconst v = techniques[ k ];\n\n\t\t\t\t\tswitch ( k ) {\n\n\t\t\t\t\t\tcase 'double_sided':\n\t\t\t\t\t\t\tmaterial.side = ( v === 1 ? DoubleSide : FrontSide );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\t\tmaterial.normalMap = getTexture( v.texture );\n\t\t\t\t\t\t\tmaterial.normalScale = new Vector2( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getMaterial( id ) {\n\n\t\t\treturn getBuild( library.materials[ id ], buildMaterial );\n\n\t\t}\n\n\t\t// camera\n\n\t\tfunction parseCamera( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'optics':\n\t\t\t\t\t\tdata.optics = parseCameraOptics( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.cameras[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseCameraOptics( xml ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\treturn parseCameraTechnique( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {};\n\n\t\t}\n\n\t\tfunction parseCameraTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'perspective':\n\t\t\t\t\tcase 'orthographic':\n\n\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseCameraParameters( child );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseCameraParameters( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'xfov':\n\t\t\t\t\tcase 'yfov':\n\t\t\t\t\tcase 'xmag':\n\t\t\t\t\tcase 'ymag':\n\t\t\t\t\tcase 'znear':\n\t\t\t\t\tcase 'zfar':\n\t\t\t\t\tcase 'aspect_ratio':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildCamera( data ) {\n\n\t\t\tlet camera;\n\n\t\t\tswitch ( data.optics.technique ) {\n\n\t\t\t\tcase 'perspective':\n\t\t\t\t\tcamera = new PerspectiveCamera(\n\t\t\t\t\t\tdata.optics.parameters.yfov,\n\t\t\t\t\t\tdata.optics.parameters.aspect_ratio,\n\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'orthographic':\n\t\t\t\t\tlet ymag = data.optics.parameters.ymag;\n\t\t\t\t\tlet xmag = data.optics.parameters.xmag;\n\t\t\t\t\tconst aspectRatio = data.optics.parameters.aspect_ratio;\n\n\t\t\t\t\txmag = ( xmag === undefined ) ? ( ymag * aspectRatio ) : xmag;\n\t\t\t\t\tymag = ( ymag === undefined ) ? ( xmag / aspectRatio ) : ymag;\n\n\t\t\t\t\txmag *= 0.5;\n\t\t\t\t\tymag *= 0.5;\n\n\t\t\t\t\tcamera = new OrthographicCamera(\n\t\t\t\t\t\t- xmag, xmag, ymag, - ymag, // left, right, top, bottom\n\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tcamera.name = data.name || '';\n\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tfunction getCamera( id ) {\n\n\t\t\tconst data = library.cameras[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildCamera );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find camera with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// light\n\n\t\tfunction parseLight( xml ) {\n\n\t\t\tlet data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tdata = parseLightTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.lights[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseLightTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'directional':\n\t\t\t\t\tcase 'point':\n\t\t\t\t\tcase 'spot':\n\t\t\t\t\tcase 'ambient':\n\n\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseLightParameters( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseLightParameters( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tconst array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.color = new Color().fromArray( array ).convertSRGBToLinear();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'falloff_angle':\n\t\t\t\t\t\tdata.falloffAngle = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'quadratic_attenuation':\n\t\t\t\t\t\tconst f = parseFloat( child.textContent );\n\t\t\t\t\t\tdata.distance = f ? Math.sqrt( 1 / f ) : 0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildLight( data ) {\n\n\t\t\tlet light;\n\n\t\t\tswitch ( data.technique ) {\n\n\t\t\t\tcase 'directional':\n\t\t\t\t\tlight = new DirectionalLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'point':\n\t\t\t\t\tlight = new PointLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'spot':\n\t\t\t\t\tlight = new SpotLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ambient':\n\t\t\t\t\tlight = new AmbientLight();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( data.parameters.color ) light.color.copy( data.parameters.color );\n\t\t\tif ( data.parameters.distance ) light.distance = data.parameters.distance;\n\n\t\t\treturn light;\n\n\t\t}\n\n\t\tfunction getLight( id ) {\n\n\t\t\tconst data = library.lights[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildLight );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find light with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// geometry\n\n\t\tfunction parseGeometry( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\tsources: {},\n\t\t\t\tvertices: {},\n\t\t\t\tprimitives: []\n\t\t\t};\n\n\t\t\tconst mesh = getElementsByTagName( xml, 'mesh' )[ 0 ];\n\n\t\t\t// the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep\n\t\t\tif ( mesh === undefined ) return;\n\n\t\t\tfor ( let i = 0; i < mesh.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = mesh.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tconst id = child.getAttribute( 'id' );\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vertices':\n\t\t\t\t\t\t// data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\n\t\t\t\t\t\tdata.vertices = parseGeometryVertices( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'polygons':\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unsupported primitive type: ', child.nodeName );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\tcase 'polylist':\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\tdata.primitives.push( parseGeometryPrimitive( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.geometries[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseSource( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tarray: [],\n\t\t\t\tstride: 3\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'float_array':\n\t\t\t\t\t\tdata.array = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Name_array':\n\t\t\t\t\t\tdata.array = parseStrings( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tconst accessor = getElementsByTagName( child, 'accessor' )[ 0 ];\n\n\t\t\t\t\t\tif ( accessor !== undefined ) {\n\n\t\t\t\t\t\t\tdata.stride = parseInt( accessor.getAttribute( 'stride' ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseGeometryVertices( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tdata[ child.getAttribute( 'semantic' ) ] = parseId( child.getAttribute( 'source' ) );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseGeometryPrimitive( xml ) {\n\n\t\t\tconst primitive = {\n\t\t\t\ttype: xml.nodeName,\n\t\t\t\tmaterial: xml.getAttribute( 'material' ),\n\t\t\t\tcount: parseInt( xml.getAttribute( 'count' ) ),\n\t\t\t\tinputs: {},\n\t\t\t\tstride: 0,\n\t\t\t\thasUV: false\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tconst offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\tconst set = parseInt( child.getAttribute( 'set' ) );\n\t\t\t\t\t\tconst inputname = ( set > 0 ? semantic + set : semantic );\n\t\t\t\t\t\tprimitive.inputs[ inputname ] = { id: id, offset: offset };\n\t\t\t\t\t\tprimitive.stride = Math.max( primitive.stride, offset + 1 );\n\t\t\t\t\t\tif ( semantic === 'TEXCOORD' ) primitive.hasUV = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\tprimitive.vcount = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'p':\n\t\t\t\t\t\tprimitive.p = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn primitive;\n\n\t\t}\n\n\t\tfunction groupPrimitives( primitives ) {\n\n\t\t\tconst build = {};\n\n\t\t\tfor ( let i = 0; i < primitives.length; i ++ ) {\n\n\t\t\t\tconst primitive = primitives[ i ];\n\n\t\t\t\tif ( build[ primitive.type ] === undefined ) build[ primitive.type ] = [];\n\n\t\t\t\tbuild[ primitive.type ].push( primitive );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction checkUVCoordinates( primitives ) {\n\n\t\t\tlet count = 0;\n\n\t\t\tfor ( let i = 0, l = primitives.length; i < l; i ++ ) {\n\n\t\t\t\tconst primitive = primitives[ i ];\n\n\t\t\t\tif ( primitive.hasUV === true ) {\n\n\t\t\t\t\tcount ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( count > 0 && count < primitives.length ) {\n\n\t\t\t\tprimitives.uvsNeedsFix = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildGeometry( data ) {\n\n\t\t\tconst build = {};\n\n\t\t\tconst sources = data.sources;\n\t\t\tconst vertices = data.vertices;\n\t\t\tconst primitives = data.primitives;\n\n\t\t\tif ( primitives.length === 0 ) return {};\n\n\t\t\t// our goal is to create one buffer geometry for a single type of primitives\n\t\t\t// first, we group all primitives by their type\n\n\t\t\tconst groupedPrimitives = groupPrimitives( primitives );\n\n\t\t\tfor ( const type in groupedPrimitives ) {\n\n\t\t\t\tconst primitiveType = groupedPrimitives[ type ];\n\n\t\t\t\t// second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)\n\n\t\t\t\tcheckUVCoordinates( primitiveType );\n\n\t\t\t\t// third, create a buffer geometry for each type of primitives\n\n\t\t\t\tbuild[ type ] = buildGeometryType( primitiveType, sources, vertices );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildGeometryType( primitives, sources, vertices ) {\n\n\t\t\tconst build = {};\n\n\t\t\tconst position = { array: [], stride: 0 };\n\t\t\tconst normal = { array: [], stride: 0 };\n\t\t\tconst uv = { array: [], stride: 0 };\n\t\t\tconst uv2 = { array: [], stride: 0 };\n\t\t\tconst color = { array: [], stride: 0 };\n\n\t\t\tconst skinIndex = { array: [], stride: 4 };\n\t\t\tconst skinWeight = { array: [], stride: 4 };\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tconst materialKeys = [];\n\n\t\t\tlet start = 0;\n\n\t\t\tfor ( let p = 0; p < primitives.length; p ++ ) {\n\n\t\t\t\tconst primitive = primitives[ p ];\n\t\t\t\tconst inputs = primitive.inputs;\n\n\t\t\t\t// groups\n\n\t\t\t\tlet count = 0;\n\n\t\t\t\tswitch ( primitive.type ) {\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\tcount = primitive.count * 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\tcount = primitive.count * 3;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'polylist':\n\n\t\t\t\t\t\tfor ( let g = 0; g < primitive.count; g ++ ) {\n\n\t\t\t\t\t\t\tconst vc = primitive.vcount[ g ];\n\n\t\t\t\t\t\t\tswitch ( vc ) {\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tcount += 3; // single triangle\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tcount += 6; // quad, subdivided into two triangles\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tcount += ( vc - 2 ) * 3; // polylist with more than four vertices\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknow primitive type:', primitive.type );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addGroup( start, count, p );\n\t\t\t\tstart += count;\n\n\t\t\t\t// material\n\n\t\t\t\tif ( primitive.material ) {\n\n\t\t\t\t\tmaterialKeys.push( primitive.material );\n\n\t\t\t\t}\n\n\t\t\t\t// geometry data\n\n\t\t\t\tfor ( const name in inputs ) {\n\n\t\t\t\t\tconst input = inputs[ name ];\n\n\t\t\t\t\tswitch ( name )\t{\n\n\t\t\t\t\t\tcase 'VERTEX':\n\t\t\t\t\t\t\tfor ( const key in vertices ) {\n\n\t\t\t\t\t\t\t\tconst id = vertices[ key ];\n\n\t\t\t\t\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\t\t\t\t\tcase 'POSITION':\n\t\t\t\t\t\t\t\t\t\tconst prevLength = position.array.length;\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, position.array );\n\t\t\t\t\t\t\t\t\t\tposition.stride = sources[ id ].stride;\n\n\t\t\t\t\t\t\t\t\t\tif ( sources.skinWeights && sources.skinIndices ) {\n\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinIndices, input.offset, skinIndex.array );\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinWeights, input.offset, skinWeight.array );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// see #3803\n\n\t\t\t\t\t\t\t\t\t\tif ( primitive.hasUV === false && primitives.uvsNeedsFix === true ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst count = ( position.array.length - prevLength ) / position.stride;\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// fill missing uv coordinates\n\n\t\t\t\t\t\t\t\t\t\t\t\tuv.array.push( 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, normal.array );\n\t\t\t\t\t\t\t\t\t\tnormal.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, color.array );\n\t\t\t\t\t\t\t\t\t\tcolor.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv.array );\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv2.array );\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, normal.array );\n\t\t\t\t\t\t\tnormal.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, color.array, true );\n\t\t\t\t\t\t\tcolor.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv.array );\n\t\t\t\t\t\t\tuv.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv2.array );\n\t\t\t\t\t\t\tuv2.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tif ( position.array.length > 0 ) geometry.setAttribute( 'position', new Float32BufferAttribute( position.array, position.stride ) );\n\t\t\tif ( normal.array.length > 0 ) geometry.setAttribute( 'normal', new Float32BufferAttribute( normal.array, normal.stride ) );\n\t\t\tif ( color.array.length > 0 ) geometry.setAttribute( 'color', new Float32BufferAttribute( color.array, color.stride ) );\n\t\t\tif ( uv.array.length > 0 ) geometry.setAttribute( 'uv', new Float32BufferAttribute( uv.array, uv.stride ) );\n\t\t\tif ( uv2.array.length > 0 ) geometry.setAttribute( 'uv2', new Float32BufferAttribute( uv2.array, uv2.stride ) );\n\n\t\t\tif ( skinIndex.array.length > 0 ) geometry.setAttribute( 'skinIndex', new Float32BufferAttribute( skinIndex.array, skinIndex.stride ) );\n\t\t\tif ( skinWeight.array.length > 0 ) geometry.setAttribute( 'skinWeight', new Float32BufferAttribute( skinWeight.array, skinWeight.stride ) );\n\n\t\t\tbuild.data = geometry;\n\t\t\tbuild.type = primitives[ 0 ].type;\n\t\t\tbuild.materialKeys = materialKeys;\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildGeometryData( primitive, source, offset, array, isColor = false ) {\n\n\t\t\tconst indices = primitive.p;\n\t\t\tconst stride = primitive.stride;\n\t\t\tconst vcount = primitive.vcount;\n\n\t\t\tfunction pushVector( i ) {\n\n\t\t\t\tlet index = indices[ i + offset ] * sourceStride;\n\t\t\t\tconst length = index + sourceStride;\n\n\t\t\t\tfor ( ; index < length; index ++ ) {\n\n\t\t\t\t\tarray.push( sourceArray[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isColor ) {\n\n\t\t\t\t\t// convert the vertex colors from srgb to linear if present\n\t\t\t\t\tconst startIndex = array.length - sourceStride - 1;\n\t\t\t\t\ttempColor.setRGB(\n\t\t\t\t\t\tarray[ startIndex + 0 ],\n\t\t\t\t\t\tarray[ startIndex + 1 ],\n\t\t\t\t\t\tarray[ startIndex + 2 ]\n\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\tarray[ startIndex + 0 ] = tempColor.r;\n\t\t\t\t\tarray[ startIndex + 1 ] = tempColor.g;\n\t\t\t\t\tarray[ startIndex + 2 ] = tempColor.b;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst sourceArray = source.array;\n\t\t\tconst sourceStride = source.stride;\n\n\t\t\tif ( primitive.vcount !== undefined ) {\n\n\t\t\t\tlet index = 0;\n\n\t\t\t\tfor ( let i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst count = vcount[ i ];\n\n\t\t\t\t\tif ( count === 4 ) {\n\n\t\t\t\t\t\tconst a = index + stride * 0;\n\t\t\t\t\t\tconst b = index + stride * 1;\n\t\t\t\t\t\tconst c = index + stride * 2;\n\t\t\t\t\t\tconst d = index + stride * 3;\n\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( d );\n\t\t\t\t\t\tpushVector( b ); pushVector( c ); pushVector( d );\n\n\t\t\t\t\t} else if ( count === 3 ) {\n\n\t\t\t\t\t\tconst a = index + stride * 0;\n\t\t\t\t\t\tconst b = index + stride * 1;\n\t\t\t\t\t\tconst c = index + stride * 2;\n\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t} else if ( count > 4 ) {\n\n\t\t\t\t\t\tfor ( let k = 1, kl = ( count - 2 ); k <= kl; k ++ ) {\n\n\t\t\t\t\t\t\tconst a = index + stride * 0;\n\t\t\t\t\t\t\tconst b = index + stride * k;\n\t\t\t\t\t\t\tconst c = index + stride * ( k + 1 );\n\n\t\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += stride * count;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = indices.length; i < l; i += stride ) {\n\n\t\t\t\t\tpushVector( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getGeometry( id ) {\n\n\t\t\treturn getBuild( library.geometries[ id ], buildGeometry );\n\n\t\t}\n\n\t\t// kinematics\n\n\t\tfunction parseKinematicsModel( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\tjoints: {},\n\t\t\t\tlinks: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tparseKinematicsTechniqueCommon( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.kinematicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildKinematicsModel( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getKinematicsModel( id ) {\n\n\t\t\treturn getBuild( library.kinematicsModels[ id ], buildKinematicsModel );\n\n\t\t}\n\n\t\tfunction parseKinematicsTechniqueCommon( xml, data ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'joint':\n\t\t\t\t\t\tdata.joints[ child.getAttribute( 'sid' ) ] = parseKinematicsJoint( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseKinematicsJoint( xml ) {\n\n\t\t\tlet data;\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\tdata = parseKinematicsJointParameter( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsJointParameter( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\taxis: new Vector3(),\n\t\t\t\tlimits: {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 0\n\t\t\t\t},\n\t\t\t\ttype: xml.nodeName,\n\t\t\t\tstatic: false,\n\t\t\t\tzeroPosition: 0,\n\t\t\t\tmiddlePosition: 0\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\tconst array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.axis.fromArray( array );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'limits':\n\t\t\t\t\t\tconst max = child.getElementsByTagName( 'max' )[ 0 ];\n\t\t\t\t\t\tconst min = child.getElementsByTagName( 'min' )[ 0 ];\n\n\t\t\t\t\t\tdata.limits.max = parseFloat( max.textContent );\n\t\t\t\t\t\tdata.limits.min = parseFloat( min.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// if min is equal to or greater than max, consider the joint static\n\n\t\t\tif ( data.limits.min >= data.limits.max ) {\n\n\t\t\t\tdata.static = true;\n\n\t\t\t}\n\n\t\t\t// calculate middle position\n\n\t\t\tdata.middlePosition = ( data.limits.min + data.limits.max ) / 2.0;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsLink( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\tattachments: [],\n\t\t\t\ttransforms: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'attachment_full':\n\t\t\t\t\t\tdata.attachments.push( parseKinematicsAttachment( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsAttachment( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tjoint: xml.getAttribute( 'joint' ).split( '/' ).pop(),\n\t\t\t\ttransforms: [],\n\t\t\t\tlinks: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsTransform( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\ttype: xml.nodeName\n\t\t\t};\n\n\t\t\tconst array = parseFloats( xml.textContent );\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tdata.obj = new Matrix4();\n\t\t\t\t\tdata.obj.fromArray( array ).transpose();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'translate':\n\t\t\t\t\tdata.obj = new Vector3();\n\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tdata.obj = new Vector3();\n\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\tdata.angle = MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// physics\n\n\t\tfunction parsePhysicsModel( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\trigidBodies: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'rigid_body':\n\t\t\t\t\t\tdata.rigidBodies[ child.getAttribute( 'name' ) ] = {};\n\t\t\t\t\t\tparsePhysicsRigidBody( child, data.rigidBodies[ child.getAttribute( 'name' ) ] );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.physicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parsePhysicsRigidBody( xml, data ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tparsePhysicsTechniqueCommon( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parsePhysicsTechniqueCommon( xml, data ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'inertia':\n\t\t\t\t\t\tdata.inertia = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'mass':\n\t\t\t\t\t\tdata.mass = parseFloats( child.textContent )[ 0 ];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// scene\n\n\t\tfunction parseKinematicsScene( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tbindJointAxis: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_joint_axis':\n\t\t\t\t\t\tdata.bindJointAxis.push( parseKinematicsBindJointAxis( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.kinematicsScenes[ parseId( xml.getAttribute( 'url' ) ) ] = data;\n\n\t\t}\n\n\t\tfunction parseKinematicsBindJointAxis( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\ttarget: xml.getAttribute( 'target' ).split( '/' ).pop()\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\tconst param = child.getElementsByTagName( 'param' )[ 0 ];\n\t\t\t\t\t\tdata.axis = param.textContent;\n\t\t\t\t\t\tconst tmpJointIndex = data.axis.split( 'inst_' ).pop().split( 'axis' )[ 0 ];\n\t\t\t\t\t\tdata.jointIndex = tmpJointIndex.substring( 0, tmpJointIndex.length - 1 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildKinematicsScene( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getKinematicsScene( id ) {\n\n\t\t\treturn getBuild( library.kinematicsScenes[ id ], buildKinematicsScene );\n\n\t\t}\n\n\t\tfunction setupKinematics() {\n\n\t\t\tconst kinematicsModelId = Object.keys( library.kinematicsModels )[ 0 ];\n\t\t\tconst kinematicsSceneId = Object.keys( library.kinematicsScenes )[ 0 ];\n\t\t\tconst visualSceneId = Object.keys( library.visualScenes )[ 0 ];\n\n\t\t\tif ( kinematicsModelId === undefined || kinematicsSceneId === undefined ) return;\n\n\t\t\tconst kinematicsModel = getKinematicsModel( kinematicsModelId );\n\t\t\tconst kinematicsScene = getKinematicsScene( kinematicsSceneId );\n\t\t\tconst visualScene = getVisualScene( visualSceneId );\n\n\t\t\tconst bindJointAxis = kinematicsScene.bindJointAxis;\n\t\t\tconst jointMap = {};\n\n\t\t\tfor ( let i = 0, l = bindJointAxis.length; i < l; i ++ ) {\n\n\t\t\t\tconst axis = bindJointAxis[ i ];\n\n\t\t\t\t// the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\n\n\t\t\t\tconst targetElement = collada.querySelector( '[sid=\"' + axis.target + '\"]' );\n\n\t\t\t\tif ( targetElement ) {\n\n\t\t\t\t\t// get the parent of the transform element\n\n\t\t\t\t\tconst parentVisualElement = targetElement.parentElement;\n\n\t\t\t\t\t// connect the joint of the kinematics model with the element in the visual scene\n\n\t\t\t\t\tconnect( axis.jointIndex, parentVisualElement );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction connect( jointIndex, visualElement ) {\n\n\t\t\t\tconst visualElementName = visualElement.getAttribute( 'name' );\n\t\t\t\tconst joint = kinematicsModel.joints[ jointIndex ];\n\n\t\t\t\tvisualScene.traverse( function ( object ) {\n\n\t\t\t\t\tif ( object.name === visualElementName ) {\n\n\t\t\t\t\t\tjointMap[ jointIndex ] = {\n\t\t\t\t\t\t\tobject: object,\n\t\t\t\t\t\t\ttransforms: buildTransformList( visualElement ),\n\t\t\t\t\t\t\tjoint: joint,\n\t\t\t\t\t\t\tposition: joint.zeroPosition\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tconst m0 = new Matrix4();\n\n\t\t\tkinematics = {\n\n\t\t\t\tjoints: kinematicsModel && kinematicsModel.joints,\n\n\t\t\t\tgetJointValue: function ( jointIndex ) {\n\n\t\t\t\t\tconst jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\treturn jointData.position;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetJointValue: function ( jointIndex, value ) {\n\n\t\t\t\t\tconst jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\tconst joint = jointData.joint;\n\n\t\t\t\t\t\tif ( value > joint.limits.max || value < joint.limits.min ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').' );\n\n\t\t\t\t\t\t} else if ( joint.static ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' is static.' );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst object = jointData.object;\n\t\t\t\t\t\t\tconst axis = joint.axis;\n\t\t\t\t\t\t\tconst transforms = jointData.transforms;\n\n\t\t\t\t\t\t\tmatrix.identity();\n\n\t\t\t\t\t\t\t// each update, we have to apply all transforms in the correct order\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < transforms.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst transform = transforms[ i ];\n\n\t\t\t\t\t\t\t\t// if there is a connection of the transform node with a joint, apply the joint value\n\n\t\t\t\t\t\t\t\tif ( transform.sid && transform.sid.indexOf( jointIndex ) !== - 1 ) {\n\n\t\t\t\t\t\t\t\t\tswitch ( joint.type ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( axis, MathUtils.degToRad( value ) ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( axis.x * value, axis.y * value, axis.z * value ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknown joint type: ' + joint.type );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tswitch ( transform.type ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( transform.obj.x, transform.obj.y, transform.obj.z ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.scale( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( transform.obj, transform.angle ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tobject.matrix.copy( matrix );\n\t\t\t\t\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t\t\t\tjointMap[ jointIndex ].position = value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.log( 'THREE.ColladaLoader: ' + jointIndex + ' does not exist.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction buildTransformList( node ) {\n\n\t\t\tconst transforms = [];\n\n\t\t\tconst xml = collada.querySelector( '[id=\"' + node.id + '\"]' );\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tlet array, vector;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tconst matrix = new Matrix4().fromArray( array ).transpose();\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: matrix\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tvector = new Vector3().fromArray( array );\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: vector\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tvector = new Vector3().fromArray( array );\n\t\t\t\t\t\tconst angle = MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: vector,\n\t\t\t\t\t\t\tangle: angle\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn transforms;\n\n\t\t}\n\n\t\t// nodes\n\n\t\tfunction prepareNodes( xml ) {\n\n\t\t\tconst elements = xml.getElementsByTagName( 'node' );\n\n\t\t\t// ensure all node elements have id attributes\n\n\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\tconst element = elements[ i ];\n\n\t\t\t\tif ( element.hasAttribute( 'id' ) === false ) {\n\n\t\t\t\t\telement.setAttribute( 'id', generateId() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst matrix = new Matrix4();\n\t\tconst vector = new Vector3();\n\n\t\tfunction parseNode( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\ttype: xml.getAttribute( 'type' ),\n\t\t\t\tid: xml.getAttribute( 'id' ),\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tmatrix: new Matrix4(),\n\t\t\t\tnodes: [],\n\t\t\t\tinstanceCameras: [],\n\t\t\t\tinstanceControllers: [],\n\t\t\t\tinstanceLights: [],\n\t\t\t\tinstanceGeometries: [],\n\t\t\t\tinstanceNodes: [],\n\t\t\t\ttransforms: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tlet array;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'node':\n\t\t\t\t\t\tdata.nodes.push( child.getAttribute( 'id' ) );\n\t\t\t\t\t\tparseNode( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_camera':\n\t\t\t\t\t\tdata.instanceCameras.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_controller':\n\t\t\t\t\t\tdata.instanceControllers.push( parseNodeInstance( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_light':\n\t\t\t\t\t\tdata.instanceLights.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_geometry':\n\t\t\t\t\t\tdata.instanceGeometries.push( parseNodeInstance( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_node':\n\t\t\t\t\t\tdata.instanceNodes.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.fromArray( array ).transpose() );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tvector.fromArray( array );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeTranslation( vector.x, vector.y, vector.z ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tconst angle = MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeRotationAxis( vector.fromArray( array ), angle ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.matrix.scale( vector.fromArray( array ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasNode( data.id ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.', data.id );\n\n\t\t\t} else {\n\n\t\t\t\tlibrary.nodes[ data.id ] = data;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseNodeInstance( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tid: parseId( xml.getAttribute( 'url' ) ),\n\t\t\t\tmaterials: {},\n\t\t\t\tskeletons: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_material':\n\t\t\t\t\t\tconst instances = child.getElementsByTagName( 'instance_material' );\n\n\t\t\t\t\t\tfor ( let j = 0; j < instances.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst instance = instances[ j ];\n\t\t\t\t\t\t\tconst symbol = instance.getAttribute( 'symbol' );\n\t\t\t\t\t\t\tconst target = instance.getAttribute( 'target' );\n\n\t\t\t\t\t\t\tdata.materials[ symbol ] = parseId( target );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'skeleton':\n\t\t\t\t\t\tdata.skeletons.push( parseId( child.textContent ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildSkeleton( skeletons, joints ) {\n\n\t\t\tconst boneData = [];\n\t\t\tconst sortedBoneData = [];\n\n\t\t\tlet i, j, data;\n\n\t\t\t// a skeleton can have multiple root bones. collada expresses this\n\t\t\t// situtation with multiple \"skeleton\" tags per controller instance\n\n\t\t\tfor ( i = 0; i < skeletons.length; i ++ ) {\n\n\t\t\t\tconst skeleton = skeletons[ i ];\n\n\t\t\t\tlet root;\n\n\t\t\t\tif ( hasNode( skeleton ) ) {\n\n\t\t\t\t\troot = getNode( skeleton );\n\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t} else if ( hasVisualScene( skeleton ) ) {\n\n\t\t\t\t\t// handle case where the skeleton refers to the visual scene (#13335)\n\n\t\t\t\t\tconst visualScene = library.visualScenes[ skeleton ];\n\t\t\t\t\tconst children = visualScene.children;\n\n\t\t\t\t\tfor ( let j = 0; j < children.length; j ++ ) {\n\n\t\t\t\t\t\tconst child = children[ j ];\n\n\t\t\t\t\t\tif ( child.type === 'JOINT' ) {\n\n\t\t\t\t\t\t\tconst root = getNode( child.id );\n\t\t\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.ColladaLoader: Unable to find root bone of skeleton with ID:', skeleton );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// sort bone data (the order is defined in the corresponding controller)\n\n\t\t\tfor ( i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < boneData.length; j ++ ) {\n\n\t\t\t\t\tdata = boneData[ j ];\n\n\t\t\t\t\tif ( data.bone.name === joints[ i ].name ) {\n\n\t\t\t\t\t\tsortedBoneData[ i ] = data;\n\t\t\t\t\t\tdata.processed = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add unprocessed bone data at the end of the list\n\n\t\t\tfor ( i = 0; i < boneData.length; i ++ ) {\n\n\t\t\t\tdata = boneData[ i ];\n\n\t\t\t\tif ( data.processed === false ) {\n\n\t\t\t\t\tsortedBoneData.push( data );\n\t\t\t\t\tdata.processed = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// setup arrays for skeleton creation\n\n\t\t\tconst bones = [];\n\t\t\tconst boneInverses = [];\n\n\t\t\tfor ( i = 0; i < sortedBoneData.length; i ++ ) {\n\n\t\t\t\tdata = sortedBoneData[ i ];\n\n\t\t\t\tbones.push( data.bone );\n\t\t\t\tboneInverses.push( data.boneInverse );\n\n\t\t\t}\n\n\t\t\treturn new Skeleton( bones, boneInverses );\n\n\t\t}\n\n\t\tfunction buildBoneHierarchy( root, joints, boneData ) {\n\n\t\t\t// setup bone data from visual scene\n\n\t\t\troot.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isBone === true ) {\n\n\t\t\t\t\tlet boneInverse;\n\n\t\t\t\t\t// retrieve the boneInverse from the controller data\n\n\t\t\t\t\tfor ( let i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\t\t\tconst joint = joints[ i ];\n\n\t\t\t\t\t\tif ( joint.name === object.name ) {\n\n\t\t\t\t\t\t\tboneInverse = joint.boneInverse;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boneInverse === undefined ) {\n\n\t\t\t\t\t\t// Unfortunately, there can be joints in the visual scene that are not part of the\n\t\t\t\t\t\t// corresponding controller. In this case, we have to create a dummy boneInverse matrix\n\t\t\t\t\t\t// for the respective bone. This bone won't affect any vertices, because there are no skin indices\n\t\t\t\t\t\t// and weights defined for it. But we still have to add the bone to the sorted bone list in order to\n\t\t\t\t\t\t// ensure a correct animation of the model.\n\n\t\t\t\t\t\tboneInverse = new Matrix4();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tboneData.push( { bone: object, boneInverse: boneInverse, processed: false } );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction buildNode( data ) {\n\n\t\t\tconst objects = [];\n\n\t\t\tconst matrix = data.matrix;\n\t\t\tconst nodes = data.nodes;\n\t\t\tconst type = data.type;\n\t\t\tconst instanceCameras = data.instanceCameras;\n\t\t\tconst instanceControllers = data.instanceControllers;\n\t\t\tconst instanceLights = data.instanceLights;\n\t\t\tconst instanceGeometries = data.instanceGeometries;\n\t\t\tconst instanceNodes = data.instanceNodes;\n\n\t\t\t// nodes\n\n\t\t\tfor ( let i = 0, l = nodes.length; i < l; i ++ ) {\n\n\t\t\t\tobjects.push( getNode( nodes[ i ] ) );\n\n\t\t\t}\n\n\t\t\t// instance cameras\n\n\t\t\tfor ( let i = 0, l = instanceCameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst instanceCamera = getCamera( instanceCameras[ i ] );\n\n\t\t\t\tif ( instanceCamera !== null ) {\n\n\t\t\t\t\tobjects.push( instanceCamera.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance controllers\n\n\t\t\tfor ( let i = 0, l = instanceControllers.length; i < l; i ++ ) {\n\n\t\t\t\tconst instance = instanceControllers[ i ];\n\t\t\t\tconst controller = getController( instance.id );\n\t\t\t\tconst geometries = getGeometry( controller.id );\n\t\t\t\tconst newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\tconst skeletons = instance.skeletons;\n\t\t\t\tconst joints = controller.skin.joints;\n\n\t\t\t\tconst skeleton = buildSkeleton( skeletons, joints );\n\n\t\t\t\tfor ( let j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst object = newObjects[ j ];\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.bind( skeleton, controller.skin.bindMatrix );\n\t\t\t\t\t\tobject.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance lights\n\n\t\t\tfor ( let i = 0, l = instanceLights.length; i < l; i ++ ) {\n\n\t\t\t\tconst instanceLight = getLight( instanceLights[ i ] );\n\n\t\t\t\tif ( instanceLight !== null ) {\n\n\t\t\t\t\tobjects.push( instanceLight.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance geometries\n\n\t\t\tfor ( let i = 0, l = instanceGeometries.length; i < l; i ++ ) {\n\n\t\t\t\tconst instance = instanceGeometries[ i ];\n\n\t\t\t\t// a single geometry instance in collada can lead to multiple object3Ds.\n\t\t\t\t// this is the case when primitives are combined like triangles and lines\n\n\t\t\t\tconst geometries = getGeometry( instance.id );\n\t\t\t\tconst newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\tfor ( let j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tobjects.push( newObjects[ j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance nodes\n\n\t\t\tfor ( let i = 0, l = instanceNodes.length; i < l; i ++ ) {\n\n\t\t\t\tobjects.push( getNode( instanceNodes[ i ] ).clone() );\n\n\t\t\t}\n\n\t\t\tlet object;\n\n\t\t\tif ( nodes.length === 0 && objects.length === 1 ) {\n\n\t\t\t\tobject = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tobject = ( type === 'JOINT' ) ? new Bone() : new Group();\n\n\t\t\t\tfor ( let i = 0; i < objects.length; i ++ ) {\n\n\t\t\t\t\tobject.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobject.name = ( type === 'JOINT' ) ? data.sid : data.name;\n\t\t\tobject.matrix.copy( matrix );\n\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\treturn object;\n\n\t\t}\n\n\t\tconst fallbackMaterial = new MeshBasicMaterial( { color: 0xff00ff } );\n\n\t\tfunction resolveMaterialBinding( keys, instanceMaterials ) {\n\n\t\t\tconst materials = [];\n\n\t\t\tfor ( let i = 0, l = keys.length; i < l; i ++ ) {\n\n\t\t\t\tconst id = instanceMaterials[ keys[ i ] ];\n\n\t\t\t\tif ( id === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Material with key %s not found. Apply fallback material.', keys[ i ] );\n\t\t\t\t\tmaterials.push( fallbackMaterial );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials.push( getMaterial( id ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t}\n\n\t\tfunction buildObjects( geometries, instanceMaterials ) {\n\n\t\t\tconst objects = [];\n\n\t\t\tfor ( const type in geometries ) {\n\n\t\t\t\tconst geometry = geometries[ type ];\n\n\t\t\t\tconst materials = resolveMaterialBinding( geometry.materialKeys, instanceMaterials );\n\n\t\t\t\t// handle case if no materials are defined\n\n\t\t\t\tif ( materials.length === 0 ) {\n\n\t\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\n\n\t\t\t\t\t\tmaterials.push( new LineBasicMaterial() );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials.push( new MeshPhongMaterial() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Collada allows to use phong and lambert materials with lines. Replacing these cases with LineBasicMaterial.\n\n\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\n\n\t\t\t\t\tfor ( let i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst material = materials[ i ];\n\n\t\t\t\t\t\tif ( material.isMeshPhongMaterial === true || material.isMeshLambertMaterial === true ) {\n\n\t\t\t\t\t\t\tconst lineMaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t\t// copy compatible properties\n\n\t\t\t\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\t\t\t\tlineMaterial.opacity = material.opacity;\n\t\t\t\t\t\t\tlineMaterial.transparent = material.transparent;\n\n\t\t\t\t\t\t\t// replace material\n\n\t\t\t\t\t\t\tmaterials[ i ] = lineMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// regard skinning\n\n\t\t\t\tconst skinning = ( geometry.data.attributes.skinIndex !== undefined );\n\n\t\t\t\t// choose between a single or multi materials (material array)\n\n\t\t\t\tconst material = ( materials.length === 1 ) ? materials[ 0 ] : materials;\n\n\t\t\t\t// now create a specific 3D object\n\n\t\t\t\tlet object;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\t\tobject = new LineSegments( geometry.data, material );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\tobject = new Line( geometry.data, material );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\tcase 'polylist':\n\t\t\t\t\t\tif ( skinning ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry.data, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry.data, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tobjects.push( object );\n\n\t\t\t}\n\n\t\t\treturn objects;\n\n\t\t}\n\n\t\tfunction hasNode( id ) {\n\n\t\t\treturn library.nodes[ id ] !== undefined;\n\n\t\t}\n\n\t\tfunction getNode( id ) {\n\n\t\t\treturn getBuild( library.nodes[ id ], buildNode );\n\n\t\t}\n\n\t\t// visual scenes\n\n\t\tfunction parseVisualScene( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\tchildren: []\n\t\t\t};\n\n\t\t\tprepareNodes( xml );\n\n\t\t\tconst elements = getElementsByTagName( xml, 'node' );\n\n\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\tdata.children.push( parseNode( elements[ i ] ) );\n\n\t\t\t}\n\n\t\t\tlibrary.visualScenes[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildVisualScene( data ) {\n\n\t\t\tconst group = new Group();\n\t\t\tgroup.name = data.name;\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tgroup.add( getNode( child.id ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t}\n\n\t\tfunction hasVisualScene( id ) {\n\n\t\t\treturn library.visualScenes[ id ] !== undefined;\n\n\t\t}\n\n\t\tfunction getVisualScene( id ) {\n\n\t\t\treturn getBuild( library.visualScenes[ id ], buildVisualScene );\n\n\t\t}\n\n\t\t// scenes\n\n\t\tfunction parseScene( xml ) {\n\n\t\t\tconst instance = getElementsByTagName( xml, 'instance_visual_scene' )[ 0 ];\n\t\t\treturn getVisualScene( parseId( instance.getAttribute( 'url' ) ) );\n\n\t\t}\n\n\t\tfunction setupAnimations() {\n\n\t\t\tconst clips = library.clips;\n\n\t\t\tif ( isEmpty( clips ) === true ) {\n\n\t\t\t\tif ( isEmpty( library.animations ) === false ) {\n\n\t\t\t\t\t// if there are animations but no clips, we create a default clip for playback\n\n\t\t\t\t\tconst tracks = [];\n\n\t\t\t\t\tfor ( const id in library.animations ) {\n\n\t\t\t\t\t\tconst animationTracks = getAnimation( id );\n\n\t\t\t\t\t\tfor ( let i = 0, l = animationTracks.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\ttracks.push( animationTracks[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimations.push( new AnimationClip( 'default', - 1, tracks ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( const id in clips ) {\n\n\t\t\t\t\tanimations.push( getAnimationClip( id ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// convert the parser error element into text with each child elements text\n\t\t// separated by new lines.\n\n\t\tfunction parserErrorToText( parserError ) {\n\n\t\t\tlet result = '';\n\t\t\tconst stack = [ parserError ];\n\n\t\t\twhile ( stack.length ) {\n\n\t\t\t\tconst node = stack.shift();\n\n\t\t\t\tif ( node.nodeType === Node.TEXT_NODE ) {\n\n\t\t\t\t\tresult += node.textContent;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult += '\\n';\n\t\t\t\t\tstack.push.apply( stack, node.childNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result.trim();\n\n\t\t}\n\n\t\tif ( text.length === 0 ) {\n\n\t\t\treturn { scene: new Scene() };\n\n\t\t}\n\n\t\tconst xml = new DOMParser().parseFromString( text, 'application/xml' );\n\n\t\tconst collada = getElementsByTagName( xml, 'COLLADA' )[ 0 ];\n\n\t\tconst parserError = xml.getElementsByTagName( 'parsererror' )[ 0 ];\n\t\tif ( parserError !== undefined ) {\n\n\t\t\t// Chrome will return parser error with a div in it\n\n\t\t\tconst errorElement = getElementsByTagName( parserError, 'div' )[ 0 ];\n\t\t\tlet errorText;\n\n\t\t\tif ( errorElement ) {\n\n\t\t\t\terrorText = errorElement.textContent;\n\n\t\t\t} else {\n\n\t\t\t\terrorText = parserErrorToText( parserError );\n\n\t\t\t}\n\n\t\t\tconsole.error( 'THREE.ColladaLoader: Failed to parse collada file.\\n', errorText );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// metadata\n\n\t\tconst version = collada.getAttribute( 'version' );\n\t\tconsole.debug( 'THREE.ColladaLoader: File version', version );\n\n\t\tconst asset = parseAsset( getElementsByTagName( collada, 'asset' )[ 0 ] );\n\t\tconst textureLoader = new TextureLoader( this.manager );\n\t\ttextureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\tlet tgaLoader;\n\n\t\tif ( TGALoader ) {\n\n\t\t\ttgaLoader = new TGALoader( this.manager );\n\t\t\ttgaLoader.setPath( this.resourcePath || path );\n\n\t\t}\n\n\t\t//\n\n\t\tconst tempColor = new Color();\n\t\tconst animations = [];\n\t\tlet kinematics = {};\n\t\tlet count = 0;\n\n\t\t//\n\n\t\tconst library = {\n\t\t\tanimations: {},\n\t\t\tclips: {},\n\t\t\tcontrollers: {},\n\t\t\timages: {},\n\t\t\teffects: {},\n\t\t\tmaterials: {},\n\t\t\tcameras: {},\n\t\t\tlights: {},\n\t\t\tgeometries: {},\n\t\t\tnodes: {},\n\t\t\tvisualScenes: {},\n\t\t\tkinematicsModels: {},\n\t\t\tphysicsModels: {},\n\t\t\tkinematicsScenes: {}\n\t\t};\n\n\t\tparseLibrary( collada, 'library_animations', 'animation', parseAnimation );\n\t\tparseLibrary( collada, 'library_animation_clips', 'animation_clip', parseAnimationClip );\n\t\tparseLibrary( collada, 'library_controllers', 'controller', parseController );\n\t\tparseLibrary( collada, 'library_images', 'image', parseImage );\n\t\tparseLibrary( collada, 'library_effects', 'effect', parseEffect );\n\t\tparseLibrary( collada, 'library_materials', 'material', parseMaterial );\n\t\tparseLibrary( collada, 'library_cameras', 'camera', parseCamera );\n\t\tparseLibrary( collada, 'library_lights', 'light', parseLight );\n\t\tparseLibrary( collada, 'library_geometries', 'geometry', parseGeometry );\n\t\tparseLibrary( collada, 'library_nodes', 'node', parseNode );\n\t\tparseLibrary( collada, 'library_visual_scenes', 'visual_scene', parseVisualScene );\n\t\tparseLibrary( collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel );\n\t\tparseLibrary( collada, 'library_physics_models', 'physics_model', parsePhysicsModel );\n\t\tparseLibrary( collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene );\n\n\t\tbuildLibrary( library.animations, buildAnimation );\n\t\tbuildLibrary( library.clips, buildAnimationClip );\n\t\tbuildLibrary( library.controllers, buildController );\n\t\tbuildLibrary( library.images, buildImage );\n\t\tbuildLibrary( library.effects, buildEffect );\n\t\tbuildLibrary( library.materials, buildMaterial );\n\t\tbuildLibrary( library.cameras, buildCamera );\n\t\tbuildLibrary( library.lights, buildLight );\n\t\tbuildLibrary( library.geometries, buildGeometry );\n\t\tbuildLibrary( library.visualScenes, buildVisualScene );\n\n\t\tsetupAnimations();\n\t\tsetupKinematics();\n\n\t\tconst scene = parseScene( getElementsByTagName( collada, 'scene' )[ 0 ] );\n\t\tscene.animations = animations;\n\n\t\tif ( asset.upAxis === 'Z_UP' ) {\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289.' );\n\t\t\tscene.rotation.set( - Math.PI / 2, 0, 0 );\n\n\t\t}\n\n\t\tscene.scale.multiplyScalar( asset.unit );\n\n\t\treturn {\n\t\t\tget animations() {\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Please access animations over scene.animations now.' );\n\t\t\t\treturn animations;\n\n\t\t\t},\n\t\t\tkinematics: kinematics,\n\t\t\tlibrary: library,\n\t\t\tscene: scene\n\t\t};\n\n\t}\n\n}\n\nexport { ColladaLoader };\n"],"names":["ColladaLoader","constructor","manager","super","load","url","onLoad","onProgress","onError","scope","this","path","loader","setPath","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","getElementsByTagName","xml","name","array","childNodes","i","l","length","child","nodeName","push","parseStrings","parts","trim","split","Array","parseFloats","parseFloat","parseInts","parseInt","parseId","substring","generateId","count","isEmpty","object","Object","keys","parseAsset","unit","parseAssetUnit","upAxis","parseAssetUpAxis","undefined","hasAttribute","getAttribute","textContent","parseLibrary","libraryName","parser","library","elements","buildLibrary","data","builder","build","getBuild","parseAnimation","sources","samplers","channels","hasChildren","nodeType","id","parseSource","parseAnimationSampler","parseAnimationChannel","log","animations","inputs","semantic","target","shift","sid","arraySyntax","indexOf","memberSyntax","member","indices","replace","sampler","buildAnimation","tracks","hasOwnProperty","channel","inputId","INPUT","outputId","OUTPUT","inputSource","outputSource","animation","buildAnimationChannel","createKeyframeTracks","getAnimation","node","nodes","object3D","getNode","transform","transforms","defaultMatrix","matrix","clone","transpose","time","stride","il","j","jl","value","index","warn","keyframes","prepareAnimationData","uuid","sort","ascending","transformAnimationData","a","b","position","scale","quaternion","times","positionData","quaternionData","scaleData","keyframe","fromArray","decompose","x","y","z","w","property","defaultValue","empty","createMissingKeyframes","prev","next","getPrev","getNext","interpolate","key","parseAnimationClip","start","end","clips","buildAnimationClip","duration","animationTracks","getAnimationClip","parseController","skin","parseSkin","controllers","bindShapeMatrix","joints","parseJoints","vertexWeights","parseVertexWeights","offset","vcount","v","buildController","geometry","geometries","buildSkin","skinIndices","skinWeights","weights","BONE_LIMIT","jointOffset","JOINT","weightOffset","WEIGHT","jointSource","inverseSource","INV_BIND_MATRIX","jointCount","vertexSkinData","skinIndex","weightId","skinWeight","weight","descending","d","bindMatrix","identity","boneInverse","getController","parseImage","init_from","images","buildImage","getImage","parseEffect","profile","parseEffectProfileCOMMON","effects","surfaces","parseEffectNewparam","technique","parseEffectTechnique","extra","parseEffectExtra","parseEffectSurface","parseEffectSampler","source","type","parameters","parseEffectParameters","parseEffectParameter","opaque","parseEffectParameterTexture","parseEffectParameterTextureExtra","parseEffectParameterTextureExtraTechnique","toUpperCase","parseEffectExtraTechniqueBump","parseEffectExtraTechnique","texcoord","buildEffect","getEffect","parseMaterial","materials","getTextureLoader","image","extension","slice","lastIndexOf","toLowerCase","tgaLoader","textureLoader","buildMaterial","effect","material","getTexture","textureObject","encoding","surface","texture","wrapS","wrapU","wrapT","wrapV","set","offsetU","offsetV","repeat","repeatU","repeatV","parameter","color","map","specular","specularMap","normalMap","lightMap","float","shininess","emissive","emissiveMap","convertSRGBToLinear","transparent","transparency","opacity","techniques","k","side","normalScale","getMaterial","parseCamera","optics","parseCameraOptics","cameras","parseCameraTechnique","parseCameraParameters","buildCamera","camera","yfov","aspect_ratio","znear","zfar","ymag","xmag","aspectRatio","getCamera","parseLight","parseLightTechnique","lights","parseLightParameters","falloffAngle","f","distance","Math","sqrt","buildLight","light","copy","getLight","parseGeometry","vertices","primitives","mesh","parseGeometryVertices","parseGeometryPrimitive","accessor","primitive","hasUV","inputname","max","p","groupPrimitives","checkUVCoordinates","uvsNeedsFix","buildGeometry","groupedPrimitives","primitiveType","buildGeometryType","normal","uv","uv2","materialKeys","g","vc","addGroup","input","prevLength","buildGeometryData","setAttribute","isColor","pushVector","sourceStride","sourceArray","startIndex","tempColor","setRGB","r","c","kl","getGeometry","parseKinematicsModel","links","parseKinematicsTechniqueCommon","kinematicsModels","buildKinematicsModel","getKinematicsModel","parseKinematicsJoint","parseKinematicsLink","parseKinematicsJointParameter","axis","limits","min","static","zeroPosition","middlePosition","attachments","parseKinematicsAttachment","parseKinematicsTransform","joint","pop","obj","angle","parsePhysicsModel","rigidBodies","parsePhysicsRigidBody","physicsModels","parsePhysicsTechniqueCommon","inertia","mass","parseKinematicsScene","bindJointAxis","parseKinematicsBindJointAxis","kinematicsScenes","param","tmpJointIndex","jointIndex","buildKinematicsScene","getKinematicsScene","setupKinematics","kinematicsModelId","kinematicsSceneId","visualSceneId","visualScenes","kinematicsModel","kinematicsScene","visualScene","getVisualScene","jointMap","targetElement","collada","querySelector","parentVisualElement","parentElement","connect","visualElement","visualElementName","traverse","buildTransformList","m0","kinematics","getJointValue","jointData","setJointValue","multiply","makeRotationAxis","makeTranslation","vector","prepareNodes","element","parseNode","instanceCameras","instanceControllers","instanceLights","instanceGeometries","instanceNodes","parseNodeInstance","hasNode","skeletons","instances","instance","symbol","buildSkeleton","boneData","sortedBoneData","skeleton","root","buildBoneHierarchy","hasVisualScene","children","bone","processed","bones","boneInverses","isBone","buildNode","objects","instanceCamera","controller","newObjects","buildObjects","isSkinnedMesh","bind","normalizeSkinWeights","instanceLight","add","fallbackMaterial","resolveMaterialBinding","instanceMaterials","isMeshPhongMaterial","isMeshLambertMaterial","lineMaterial","skinning","attributes","parseVisualScene","buildVisualScene","group","parseScene","setupAnimations","parserErrorToText","parserError","result","stack","Node","TEXT_NODE","apply","scene","DOMParser","parseFromString","errorElement","errorText","version","debug","asset","resourcePath","setCrossOrigin","crossOrigin","rotation","PI","multiplyScalar"],"sourceRoot":""}