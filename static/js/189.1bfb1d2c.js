"use strict";(self["webpackChunkthree_model_viewer"]=self["webpackChunkthree_model_viewer"]||[]).push([[189],{8189:function(t,e,s){s.r(e),s.d(e,{OBJLoader:function(){return g}});var o=s(277);const i=/^[og]\s*(.+)?/,n=/^mtllib /,r=/^usemtl /,a=/^usemap /,l=/\s+/,c=new o.Pa4,h=new o.Pa4,u=new o.Pa4,d=new o.Pa4,p=new o.Pa4,m=new o.Ilk;function f(){const t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);const s=this.object&&"function"===typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(t,e){const s=this._finalize(!1);s&&(s.inherited||s.groupCount<=0)&&this.materials.splice(s.index,1);const o={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==s?s.smooth:this.smooth,groupStart:void 0!==s?s.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){const e={index:"number"===typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(o),o},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){const e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(let s=this.materials.length-1;s>=0;s--)this.materials[s].groupCount<=0&&this.materials.splice(s,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},s&&s.name&&"function"===typeof s.clone){const t=s.clone(0);t.inherited=!0,this.object.materials.push(t)}this.objects.push(this.object)},finalize:function(){this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){const s=parseInt(t,10);return 3*(s>=0?s-1:s+e/3)},parseNormalIndex:function(t,e){const s=parseInt(t,10);return 3*(s>=0?s-1:s+e/3)},parseUVIndex:function(t,e){const s=parseInt(t,10);return 2*(s>=0?s-1:s+e/2)},addVertex:function(t,e,s){const o=this.vertices,i=this.object.geometry.vertices;i.push(o[t+0],o[t+1],o[t+2]),i.push(o[e+0],o[e+1],o[e+2]),i.push(o[s+0],o[s+1],o[s+2])},addVertexPoint:function(t){const e=this.vertices,s=this.object.geometry.vertices;s.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){const e=this.vertices,s=this.object.geometry.vertices;s.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,s){const o=this.normals,i=this.object.geometry.normals;i.push(o[t+0],o[t+1],o[t+2]),i.push(o[e+0],o[e+1],o[e+2]),i.push(o[s+0],o[s+1],o[s+2])},addFaceNormal:function(t,e,s){const o=this.vertices,i=this.object.geometry.normals;c.fromArray(o,t),h.fromArray(o,e),u.fromArray(o,s),p.subVectors(u,h),d.subVectors(c,h),p.cross(d),p.normalize(),i.push(p.x,p.y,p.z),i.push(p.x,p.y,p.z),i.push(p.x,p.y,p.z)},addColor:function(t,e,s){const o=this.colors,i=this.object.geometry.colors;void 0!==o[t]&&i.push(o[t+0],o[t+1],o[t+2]),void 0!==o[e]&&i.push(o[e+0],o[e+1],o[e+2]),void 0!==o[s]&&i.push(o[s+0],o[s+1],o[s+2])},addUV:function(t,e,s){const o=this.uvs,i=this.object.geometry.uvs;i.push(o[t+0],o[t+1]),i.push(o[e+0],o[e+1]),i.push(o[s+0],o[s+1])},addDefaultUV:function(){const t=this.object.geometry.uvs;t.push(0,0),t.push(0,0),t.push(0,0)},addUVLine:function(t){const e=this.uvs,s=this.object.geometry.uvs;s.push(e[t+0],e[t+1])},addFace:function(t,e,s,o,i,n,r,a,l){const c=this.vertices.length;let h=this.parseVertexIndex(t,c),u=this.parseVertexIndex(e,c),d=this.parseVertexIndex(s,c);if(this.addVertex(h,u,d),this.addColor(h,u,d),void 0!==r&&""!==r){const t=this.normals.length;h=this.parseNormalIndex(r,t),u=this.parseNormalIndex(a,t),d=this.parseNormalIndex(l,t),this.addNormal(h,u,d)}else this.addFaceNormal(h,u,d);if(void 0!==o&&""!==o){const t=this.uvs.length;h=this.parseUVIndex(o,t),u=this.parseUVIndex(i,t),d=this.parseUVIndex(n,t),this.addUV(h,u,d),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(t){this.object.geometry.type="Points";const e=this.vertices.length;for(let s=0,o=t.length;s<o;s++){const o=this.parseVertexIndex(t[s],e);this.addVertexPoint(o),this.addColor(o)}},addLineGeometry:function(t,e){this.object.geometry.type="Line";const s=this.vertices.length,o=this.uvs.length;for(let i=0,n=t.length;i<n;i++)this.addVertexLine(this.parseVertexIndex(t[i],s));for(let i=0,n=e.length;i<n;i++)this.addUVLine(this.parseUVIndex(e[i],o))}};return t.startObject("",!1),t}class g extends o.aNw{constructor(t){super(t),this.materials=null}load(t,e,s,i){const n=this,r=new o.hH6(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(s){try{e(n.parse(s))}catch(o){i?i(o):console.error(o),n.manager.itemError(t)}}),s,i)}setMaterials(t){return this.materials=t,this}parse(t){const e=new f;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));const s=t.split("\n");let c=[];for(let o=0,d=s.length;o<d;o++){const t=s[o].trimStart();if(0===t.length)continue;const h=t.charAt(0);if("#"!==h)if("v"===h){const s=t.split(l);switch(s[0]){case"v":e.vertices.push(parseFloat(s[1]),parseFloat(s[2]),parseFloat(s[3])),s.length>=7?(m.setRGB(parseFloat(s[4]),parseFloat(s[5]),parseFloat(s[6])).convertSRGBToLinear(),e.colors.push(m.r,m.g,m.b)):e.colors.push(void 0,void 0,void 0);break;case"vn":e.normals.push(parseFloat(s[1]),parseFloat(s[2]),parseFloat(s[3]));break;case"vt":e.uvs.push(parseFloat(s[1]),parseFloat(s[2]));break}}else if("f"===h){const s=t.slice(1).trim(),o=s.split(l),i=[];for(let t=0,e=o.length;t<e;t++){const e=o[t];if(e.length>0){const t=e.split("/");i.push(t)}}const n=i[0];for(let t=1,r=i.length-1;t<r;t++){const s=i[t],o=i[t+1];e.addFace(n[0],s[0],o[0],n[1],s[1],o[1],n[2],s[2],o[2])}}else if("l"===h){const s=t.substring(1).trim().split(" ");let o=[];const i=[];if(-1===t.indexOf("/"))o=s;else for(let t=0,e=s.length;t<e;t++){const e=s[t].split("/");""!==e[0]&&o.push(e[0]),""!==e[1]&&i.push(e[1])}e.addLineGeometry(o,i)}else if("p"===h){const s=t.slice(1).trim(),o=s.split(" ");e.addPointGeometry(o)}else if(null!==(c=i.exec(t))){const t=(" "+c[0].slice(1).trim()).slice(1);e.startObject(t)}else if(r.test(t))e.object.startMaterial(t.substring(7).trim(),e.materialLibraries);else if(n.test(t))e.materialLibraries.push(t.substring(7).trim());else if(a.test(t))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===h){if(c=t.split(" "),c.length>1){const t=c[1].trim().toLowerCase();e.object.smooth="0"!==t&&"off"!==t}else e.object.smooth=!0;const s=e.object.currentMaterial();s&&(s.smooth=e.object.smooth)}else{if("\0"===t)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+t+'"')}}e.finalize();const h=new o.ZAu;h.materialLibraries=[].concat(e.materialLibraries);const u=!(1===e.objects.length&&0===e.objects[0].geometry.vertices.length);if(!0===u)for(let i=0,n=e.objects.length;i<n;i++){const t=e.objects[i],s=t.geometry,n=t.materials,r="Line"===s.type,a="Points"===s.type;let l=!1;if(0===s.vertices.length)continue;const c=new o.u9r;c.setAttribute("position",new o.a$l(s.vertices,3)),s.normals.length>0&&c.setAttribute("normal",new o.a$l(s.normals,3)),s.colors.length>0&&(l=!0,c.setAttribute("color",new o.a$l(s.colors,3))),!0===s.hasUVIndices&&c.setAttribute("uv",new o.a$l(s.uvs,2));const u=[];for(let i=0,h=n.length;i<h;i++){const t=n[i],s=t.name+"_"+t.smooth+"_"+l;let c=e.materials[s];if(null!==this.materials)if(c=this.materials.create(t.name),!r||!c||c instanceof o.nls){if(a&&c&&!(c instanceof o.UY4)){const t=new o.UY4({size:10,sizeAttenuation:!1});o.F5T.prototype.copy.call(t,c),t.color.copy(c.color),t.map=c.map,c=t}}else{const t=new o.nls;o.F5T.prototype.copy.call(t,c),t.color.copy(c.color),c=t}void 0===c&&(c=r?new o.nls:a?new o.UY4({size:1,sizeAttenuation:!1}):new o.xoR,c.name=t.name,c.flatShading=!t.smooth,c.vertexColors=l,e.materials[s]=c),u.push(c)}let d;if(u.length>1){for(let t=0,e=n.length;t<e;t++){const e=n[t];c.addGroup(e.groupStart,e.groupCount,t)}d=r?new o.ejS(c,u):a?new o.woe(c,u):new o.Kj0(c,u)}else d=r?new o.ejS(c,u[0]):a?new o.woe(c,u[0]):new o.Kj0(c,u[0]);d.name=t.name,h.add(d)}else if(e.vertices.length>0){const t=new o.UY4({size:1,sizeAttenuation:!1}),s=new o.u9r;s.setAttribute("position",new o.a$l(e.vertices,3)),e.colors.length>0&&void 0!==e.colors[0]&&(s.setAttribute("color",new o.a$l(e.colors,3)),t.vertexColors=!0);const i=new o.woe(s,t);h.add(i)}return h}}}}]);
//# sourceMappingURL=189.1bfb1d2c.js.map