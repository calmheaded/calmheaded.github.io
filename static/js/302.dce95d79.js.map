{"version":3,"file":"static/js/302.dce95d79.js","mappings":"mNASA,MAAMA,UAAkB,MAEvBC,YAAaC,GAEZC,MAAOD,EAER,CAEAE,KAAMC,EAAKC,EAAQC,EAAYC,GAE9B,MAAMC,EAAQC,KAERC,EAAS,IAAI,MAAYF,EAAMP,SACrCS,EAAOC,QAASH,EAAMI,MACtBF,EAAOG,gBAAiB,eACxBH,EAAOI,iBAAkBN,EAAMO,eAC/BL,EAAOM,mBAAoBR,EAAMS,iBACjCP,EAAOP,KAAMC,GAAK,SAAWc,GAE5B,IAECb,EAAQG,EAAMW,MAAOD,GAgBtB,CAdE,MAAQE,GAEJb,EAEJA,EAASa,GAITC,QAAQC,MAAOF,GAIhBZ,EAAMP,QAAQsB,UAAWnB,EAE1B,CAED,GAAGE,EAAYC,EAEhB,CAEAY,MAAOK,GAEN,SAASC,EAAUrB,GAElB,IAAM,MAAMQ,KAAQc,EAEnB,GAAKd,EAAKe,OAASvB,EAAIwB,UAAaxB,EAEnC,OAAOsB,EAAKd,EAMf,CAEA,MAAMX,EAAU,IAAI,MACpBA,EAAQ4B,gBAAgB,SAAWzB,GAElC,MAAM0B,EAAQL,EAAUrB,GAExB,GAAK0B,EAAQ,CAEZT,QAAQU,IAAK,UAAW3B,GAExB,MAAM4B,EAAO,IAAIC,KAAM,CAAEH,EAAMI,QAAU,CAAEC,KAAM,6BACjD,OAAOC,IAAIC,gBAAiBL,EAE7B,CAEA,OAAO5B,CAER,IAIA,MAAMsB,EAAM,KAAkB,IAAIY,WAAYd,IAE9C,GAAKE,EAAK,WAAc,CAEvB,MAAMa,GAAM,IAAIC,WAAYC,gBAAiB,KAAkBf,EAAK,YAAe,mBAE7EgB,EAAQH,EAAII,cAAe,6BAEjC,GAAKD,EAAQ,CAEZ,MAAMhC,EAAS,IAAI,EAAAkC,cAAe3C,GAClC,OAAOS,EAAOS,MAAO,KAAkBO,EAAKgB,EAAMG,cAEnD,CAED,KAAO,CAENxB,QAAQyB,KAAM,oCAEd,IAAM,MAAMlC,KAAQc,EAAM,CAEzB,MAAMqB,EAAYnC,EAAKoC,MAAO,KAAMC,MAAMC,cAE1C,GAAmB,QAAdH,EAAsB,CAE1B,MAAMrC,EAAS,IAAI,EAAAkC,cAAe3C,GAClC,OAAOS,EAAOS,MAAO,KAAkBO,EAAKd,IAE7C,CAED,CAED,CAGA,OADAS,QAAQC,MAAO,uCACR,CAAE6B,MAAO,IAAI,MAErB,E","sources":["webpack://three-model-viewer/./node_modules/_three@0.148.0@three/examples/jsm/loaders/KMZLoader.js"],"sourcesContent":["import {\n\tFileLoader,\n\tGroup,\n\tLoader,\n\tLoadingManager\n} from 'three';\nimport { ColladaLoader } from '../loaders/ColladaLoader.js';\nimport * as fflate from '../libs/fflate.module.js';\n\nclass KMZLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( data ) {\n\n\t\tfunction findFile( url ) {\n\n\t\t\tfor ( const path in zip ) {\n\n\t\t\t\tif ( path.slice( - url.length ) === url ) {\n\n\t\t\t\t\treturn zip[ path ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst manager = new LoadingManager();\n\t\tmanager.setURLModifier( function ( url ) {\n\n\t\t\tconst image = findFile( url );\n\n\t\t\tif ( image ) {\n\n\t\t\t\tconsole.log( 'Loading', url );\n\n\t\t\t\tconst blob = new Blob( [ image.buffer ], { type: 'application/octet-stream' } );\n\t\t\t\treturn URL.createObjectURL( blob );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t} );\n\n\t\t//\n\n\t\tconst zip = fflate.unzipSync( new Uint8Array( data ) );\n\n\t\tif ( zip[ 'doc.kml' ] ) {\n\n\t\t\tconst xml = new DOMParser().parseFromString( fflate.strFromU8( zip[ 'doc.kml' ] ), 'application/xml' );\n\n\t\t\tconst model = xml.querySelector( 'Placemark Model Link href' );\n\n\t\t\tif ( model ) {\n\n\t\t\t\tconst loader = new ColladaLoader( manager );\n\t\t\t\treturn loader.parse( fflate.strFromU8( zip[ model.textContent ] ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'KMZLoader: Missing doc.kml file.' );\n\n\t\t\tfor ( const path in zip ) {\n\n\t\t\t\tconst extension = path.split( '.' ).pop().toLowerCase();\n\n\t\t\t\tif ( extension === 'dae' ) {\n\n\t\t\t\t\tconst loader = new ColladaLoader( manager );\n\t\t\t\t\treturn loader.parse( fflate.strFromU8( zip[ path ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'KMZLoader: Couldn\\'t find .dae file.' );\n\t\treturn { scene: new Group() };\n\n\t}\n\n}\n\nexport { KMZLoader };\n"],"names":["KMZLoader","constructor","manager","super","load","url","onLoad","onProgress","onError","scope","this","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","data","findFile","zip","slice","length","setURLModifier","image","log","blob","Blob","buffer","type","URL","createObjectURL","Uint8Array","xml","DOMParser","parseFromString","model","querySelector","ColladaLoader","textContent","warn","extension","split","pop","toLowerCase","scene"],"sourceRoot":""}