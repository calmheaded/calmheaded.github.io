{"version":3,"file":"static/js/189.1bfb1d2c.js","mappings":"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","sources":["webpack://three-model-viewer/./node_modules/_three@0.148.0@three/examples/jsm/loaders/OBJLoader.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3,\n\tColor\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\nconst _face_vertex_data_separator_pattern = /\\s+/;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nconst _color = new Color();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet result = [];\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tconst line = lines[ i ].trimStart();\n\n\t\t\tif ( line.length === 0 ) continue;\n\n\t\t\tconst lineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\t\t\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n"],"names":["_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_face_vertex_data_separator_pattern","_vA","_vB","_vC","_ab","_cb","_color","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","this","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","OBJLoader","constructor","manager","super","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","result","i","line","trimStart","lineFirstChar","charAt","data","parseFloat","setRGB","convertSRGBToLinear","r","g","lineData","slice","trim","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","concat","hasPrimitives","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","createdMaterials","miLen","sourceMaterial","materialHash","create","materialPoints","size","sizeAttenuation","color","copy","map","materialLine","flatShading","vertexColors","mesh","addGroup","add","points"],"sourceRoot":""}